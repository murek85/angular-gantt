{"version":3,"file":"angular-gantt.js","sources":["ng:/angular-gantt/lib/shared/interfaces.ts","ng:/angular-gantt/lib/shared/services/gantt-config.service.ts","ng:/angular-gantt/lib/shared/services/gantt.service.ts","ng:/angular-gantt/lib/gantt.component.ts","ng:/angular-gantt/lib/header/gantt-header.component.ts","ng:/angular-gantt/lib/footer/gantt-footer.component.ts","ng:/angular-gantt/lib/activity/gantt-activity.component.ts","ng:/angular-gantt/lib/activity/time-scale/gantt-time-scale.component.ts","ng:/angular-gantt/lib/activity/background/activity-background.component.ts","ng:/angular-gantt/lib/activity/bars/activity-bars.component.ts","ng:/angular-gantt/lib/activity/gantt-activity.module.ts","ng:/angular-gantt/lib/gantt.module.ts"],"names":[],"mappings":"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","sourcesContent":["export interface Project {\r\n    name: string;\r\n    startDate?: Date;\r\n    tasks: Task[];\r\n}\r\n\r\nexport interface Task {\r\n    name: string;\r\n    resource?: string;\r\n    description?: string;\r\n    start: Date;\r\n    end?: Date;\r\n    color?: any;\r\n}\r\n\r\nexport interface IGanttOptions {\r\n    scale?: IScale;\r\n    gridColumns?: IGridColumn[];\r\n}\r\n\r\nexport interface IScale {\r\n    start?: Date;\r\n    end?: Date;\r\n}\r\n\r\nexport interface IGridColumn {\r\n    name?: string;\r\n    left: number;\r\n    width: number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GanttConfig {\r\n    public cellWidth = 38;\r\n    public rowHeight = 30;\r\n    public activityHeight = 420;\r\n    public barHeight = 25;\r\n    public barLineHeight = 35;\r\n    public barMoveable = false;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { GanttConfig } from './gantt-config.service';\r\nimport { Task, IScale } from '../interfaces';\r\n\r\n@Injectable()\r\nexport class GanttService {\r\n    public rowHeight = 0;\r\n    public hourCellWidth = 60; // change to 60 so minutes can been seen more easily\r\n    public hoursCellWidth = this.hourCellWidth * 25;\r\n    public cellWidth = 0;\r\n    public windowInnerWidth = 0;\r\n    public activityHeight = 0;\r\n    public barHeight = 0;\r\n    public barLineHeight = 0;\r\n    public barTop = 0;\r\n    public barMoveable = false;\r\n    public gridWidth = 0; //188\r\n    public gridHeight = 332;\r\n    public TASK_CACHE: any[];\r\n    public TIME_SCALE: any[];\r\n    public MONTH_SCALE: any[];\r\n\r\n    constructor() {\r\n        const ganttConfig = new GanttConfig();\r\n\r\n        this.rowHeight = ganttConfig.rowHeight;\r\n        this.cellWidth = ganttConfig.cellWidth;\r\n        this.activityHeight = ganttConfig.activityHeight;\r\n        this.barHeight = ganttConfig.barHeight;\r\n        this.barLineHeight = ganttConfig.barLineHeight;\r\n        this.barTop = ganttConfig.rowHeight;\r\n        this.barMoveable = ganttConfig.barMoveable;\r\n    }\r\n\r\n    private calculateBarWidth(start: Date, end: Date): number {\r\n        if (typeof start === 'string') {\r\n            start = new Date(start);\r\n        }\r\n\r\n        if (typeof end === 'string') {\r\n            end = new Date(end);\r\n        }\r\n\r\n        const days = this.calculateDiffDays(start, end);\r\n        const width: number = (days * this.cellWidth + days) / 7;\r\n        return width;\r\n    }\r\n\r\n    private calculateBarLeft(start: Date, scale: any[]): number {\r\n        let left = 0;\r\n\r\n        if (start != null) {\r\n            if (typeof start === 'string') {\r\n                start = new Date();\r\n            }\r\n\r\n            for (let i = 0; i < scale.length; i++) {\r\n                if (start.getTime() >= scale[i].getTime() && start.getTime() < scale[i + 1].getTime()) {\r\n                    // left = i * this.cellWidth + i + this.calculateBarLeftDelta(start) +\r\n                    //    ((7 / (scale[i + 1].getDate() - start.getDate()) / 7) * this.cellWidth) - this.cellWidth / 7;\r\n                    left = i * this.cellWidth + ((this.cellWidth) * this.calculateDiffDays(scale[i], start) / 7) +\r\n                        i + this.calculateBarLeftDelta(start);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return left;\r\n    }\r\n\r\n    /** Calculates the height of the gantt grid, activity and vertical scroll */\r\n    public calculateGanttHeight(): string {\r\n        return `${this.TASK_CACHE.length * this.rowHeight}px`;\r\n    }\r\n\r\n    private calculateBarLeftDelta(start: Date): number {\r\n        let offset = 0;\r\n        const hoursInDay = 24;\r\n        const minutesInHour = 60;\r\n        const secondsInHour = 3600;\r\n        const startHours: number =\r\n            (start.getHours() + start.getMinutes() / minutesInHour + start.getSeconds() / secondsInHour);\r\n\r\n        offset = this.cellWidth / hoursInDay * startHours;\r\n        return offset;\r\n    }\r\n\r\n    /** Calculate the bar styles */\r\n    public calculateBar(task: any, index: number, scale: any) {\r\n        const barStyle = this.getBarStyle(task.color);\r\n        return {\r\n            'top': this.barTop * index + 2 + 'px',\r\n            'left': this.calculateBarLeft(task.start, scale) + 'px',\r\n            'height': this.barHeight + 'px',\r\n            'line-height': this.barLineHeight + 'px',\r\n            'width': this.calculateBarWidth(task.start, task.end) + 'px',\r\n            'background-color': barStyle[\"background-color\"],\r\n            'border-left': barStyle[\"border-left\"]\r\n        };\r\n    }\r\n\r\n    /** Get the bar style based on task status */\r\n    private getBarStyle(color: any): any {\r\n        const style = {};\r\n        style[\"background-color\"] = color.secondary;\r\n        style[\"border-left\"] = `5px solid ${color.primary}`;\r\n\r\n        return style;\r\n    }\r\n\r\n    /** Calculates the difference in two dates and returns number of days */\r\n    public calculateDiffDays(start: Date, end: Date): number {\r\n        try {\r\n            const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds /ms\r\n            const diffDays = Math.abs((start.getTime() - end.getTime()) / (oneDay));\r\n            const days = diffDays; // don't use Math.round as it will draw an incorrect bar\r\n            return days;\r\n        } catch (err) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /** Calculate the gantt scale range given the start and end date of tasks*/\r\n    public calculateScale(start: Date = new Date(), end: Date = this.addDays(start, 7)) {\r\n        const scale: any[] = [];\r\n        try {\r\n            while (start.getTime() <= end.getTime()) {\r\n                scale.push(start);\r\n                start = this.addDays(start, 7);\r\n            }\r\n            return scale;\r\n\r\n        } catch (err) {\r\n            return scale;\r\n        }\r\n    }\r\n\r\n    public calculateMonthScale(start: Date = new Date(), end: Date = this.addDays(start, 7)) {\r\n        let scale: any[] = [];\r\n        try {\r\n            // while (start.getTime() <= end.getTime()) {\r\n            //     scale.push({ start: start, width: this.calculateCellMonthWidth(start, end) });\r\n            //     start = this.addDays(start, new Date(start.getFullYear(), start.getMonth() + 1, 0).getDate());\r\n            // }\r\n            scale = this.calculateCellMonthWidth(start, end);\r\n            return scale;\r\n\r\n        } catch (err) {\r\n            return scale;\r\n        }\r\n    }\r\n\r\n    /** Determines whether given date is a weekend */\r\n    public isDayWeekend(date: Date): boolean {\r\n        const day = date.getDay();\r\n        if (day === 6 || day === 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /** Add x number of days to a date object */\r\n    public addDays(date: Date, days: number): Date {\r\n        const result = new Date(date);\r\n        result.setDate(result.getDate() + days);\r\n        return result;\r\n    }\r\n\r\n    //** Remove x number of days from a date object */\r\n    public removeDays(date: Date, days: number): Date {\r\n        const result = new Date(date);\r\n        result.setDate(result.getDate() - days);\r\n        return result;\r\n    }\r\n\r\n    /** Calculates the grid scale for gantt based on tasks start and end dates */\r\n    public calculateGridScale(tasks: Task[]): IScale {\r\n        let start: Date;\r\n        let end: Date;\r\n        const dates = tasks.map((task: any) => {\r\n            return {\r\n                start: new Date(task.start),\r\n                end: new Date(task.end)\r\n            };\r\n        });\r\n\r\n        start = new Date(Math.min.apply(null, dates.map((t) => {\r\n            return t.start;\r\n        })));\r\n\r\n        end = new Date(Math.max.apply(null, dates.map((t) => {\r\n            return t.end;\r\n        })));\r\n\r\n        return {\r\n            start: start,\r\n            end: end\r\n        };\r\n    }\r\n\r\n    public getComputedStyle(element: any, attribute: any) {\r\n        return parseInt(document.defaultView.getComputedStyle(element)[attribute], 10);\r\n    }\r\n\r\n    //TODO(dale): determine whether this is needed\r\n    public calculateContainerWidth(): number {\r\n        this.windowInnerWidth = window.innerWidth;\r\n        const containerWidth = this.gridWidth - 18;\r\n        return containerWidth;\r\n    }\r\n\r\n    public calculateContainerHeight(): number {\r\n        const containerHeight = (innerHeight - 18);\r\n        return containerHeight;\r\n    }\r\n\r\n    public calculateActivityContainerDimensions(): any {\r\n        const scrollWidth = 18;\r\n        this.windowInnerWidth = window.innerWidth;\r\n        const width = window.innerWidth - this.gridWidth - scrollWidth;\r\n\r\n        return { height: this.activityHeight, width: width };\r\n    }\r\n\r\n    public calculateGanttActivityWidth(elem: HTMLElement): any {\r\n        return `calc(100% - ${(elem.offsetWidth + 1)}px)`;\r\n    }\r\n\r\n    public calculateGanttActivityHeight(elem: HTMLElement): any {\r\n        return `${elem.offsetHeight}px`;\r\n    }\r\n\r\n    public calculateCellMonthWidth(minDate: Date, maxDate: Date) {\r\n        var i, result = [];\r\n        var startDate = minDate;\r\n        var endDate = maxDate;\r\n        var monthDiff = this.calculateDiffMonths(startDate, endDate);\r\n        var dayDiff = this.calculateDiffDays(startDate, endDate);\r\n\r\n        for (i = 0; i < monthDiff; i++) {\r\n            var startOfMonth = i === 0 ? startDate : new Date(startDate.getFullYear(), i, 1);\r\n            var endOfMonth = i === monthDiff - 1 ? endDate : new Date(startDate.getFullYear(), i + 1, 0);\r\n            var dayInMonth = this.calculateDiffDays(startOfMonth, endOfMonth) + (i !== monthDiff - 1 && 1);\r\n            var width = Math.floor(dayInMonth / dayDiff * 2E3) * 1.025;\r\n\r\n            result.push({ start: startOfMonth, end: endOfMonth, width: width });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private calculateDiffMonths(start, end) {\r\n        var months = end.getMonth() - start.getMonth() + (12 * (end.getFullYear() - start.getFullYear()));\r\n\r\n        if(end.getDate() < start.getDate()) {\r\n            var newFrom = new Date(end.getFullYear(), end.getMonth(),start.getDate());\r\n            if (end < newFrom  && end.getMonth() == newFrom.getMonth() && end.getYear() % 4 != 0) {\r\n                months--;\r\n            }\r\n        }\r\n\r\n        return months + 1;\r\n    }\r\n\r\n    /** Set the vertical scroll top positions for gantt */\r\n    public scrollTop(verticalScrollElem: any, ganttGridElem: any, ganttActivityAreaElem: any) {\r\n        const verticalScrollTop = verticalScrollElem.scrollTop;\r\n        const scroll = this.setScrollTop;\r\n\r\n        // debounce\r\n        if (verticalScrollTop !== null && verticalScrollTop !== undefined) {\r\n            scroll(verticalScrollTop, ganttActivityAreaElem);\r\n            scroll(ganttActivityAreaElem.scrollTop, ganttGridElem);\r\n        }\r\n    }\r\n\r\n    /** Group data by id , only supports one level*/\r\n    public groupData(tasks: any): any {\r\n        return tasks;\r\n    }\r\n\r\n    /** Checks whether any new data needs to be added to task cache  */\r\n    public doTaskCheck(tasks: any[], scale: any): boolean {\r\n        // const cachedTaskIds = this.TASK_CACHE.map((task: any) => { return task.id });\r\n        // const itemsToCache: any[] = [];\r\n\r\n        // only look at tasks that are not cached\r\n        // tasks.filter((task: any) => {\r\n        //     return cachedTaskIds.indexOf(task.id) === -1;\r\n        // }).forEach((task: any) => {\r\n        //     itemsToCache.push(task);\r\n        // });\r\n\r\n        // itemsToCache.forEach((item: any) => {\r\n        //     this.TASK_CACHE.push(item);\r\n        // });\r\n\r\n        // if (itemsToCache.length > 0) {\r\n        //     return true;\r\n        // }\r\n\r\n        this.TASK_CACHE = tasks;\r\n\r\n        this.TIME_SCALE = this.calculateScale(scale.start, scale.end);\r\n        this.MONTH_SCALE = this.calculateMonthScale(scale.start, scale.end);\r\n\r\n        return true;\r\n    }\r\n\r\n    /** Set a id prefix so CSS3 query selector can work with ids that contain numbers */\r\n    public setIdPrefix(id: string): string {\r\n        return `_${id}`;\r\n    }\r\n\r\n    // /** Remove the id prefix to allow querying of data */\r\n    // public removeIdPrefix(id: string): string {\r\n    //     return id.substring(1, id.length - 1);\r\n    // }\r\n\r\n    /** Set the scroll top property of a native DOM element */\r\n    public setScrollTop(scrollTop: number, element: any): void {\r\n        if (element !== null && element !== undefined) {\r\n            element.scrollTop = scrollTop;\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { NgStyle } from '@angular/common';\r\nimport { GanttService } from './shared/services/gantt.service';\r\nimport { IGanttOptions, Project } from './shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'gantt',\r\n    template: `\r\n        <div [ngStyle]=\"{ 'width': '100%' }\">\r\n            <div class=\"gantt-container\" (window:resize)=\"onResize($event)\">\r\n                <!--<gantt-header [name]=\"_project.name\" [startDate]=\"_project.startDate\"></gantt-header>-->\r\n                <gantt-activity [project]=\"_project\" [options]=\"_options\" (onGridRowClick)=\"gridRowClicked($event)\" (onPopoverOpen)=\"popoverOpened($event)\"></gantt-activity>\r\n                <!--<gantt-footer [project]=\"_project\"></gantt-footer>-->\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-container {\r\n            font-family: Arial;\r\n            font-size: 13px;\r\n            border: 1px solid #cecece;\r\n            position: relative;\r\n            white-space: nowrap;\r\n            margin-top: 0px;\r\n        }\r\n    `],\r\n    providers: []\r\n})\r\nexport class GanttComponent implements OnInit {\r\n    _project: Project;\r\n    _options: IGanttOptions;\r\n\r\n    @Input()\r\n    set project(project: any) {\r\n        if (project) {\r\n            this._project = project;\r\n        } else {\r\n            this.setDefaultProject();\r\n        }\r\n    }\r\n    get project() { return this._project; }\r\n\r\n    @Input()\r\n    set options(options: any) {\r\n        if (options.scale) {\r\n            this._options = options;\r\n        } else {\r\n            this.setDefaultOptions();\r\n        }\r\n    }\r\n    get options() { return this._options; }\r\n\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onPopoverOpen: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    ganttContainerWidth: number;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    setSizes(): void {\r\n        this.ganttContainerWidth = this.ganttService.calculateContainerWidth();\r\n    }\r\n\r\n    setDefaultOptions() {\r\n        const scale = this.ganttService.calculateGridScale(this._project.tasks);\r\n        const gridColumns = [\r\n            { name: '', left: 0, width: 16 },\r\n            { name: 'Zadanie', left: 0, width: 330 }\r\n        ];\r\n\r\n        this._options = {\r\n            scale,\r\n            gridColumns\r\n        };\r\n    }\r\n\r\n    setDefaultProject() {\r\n        this._project = {\r\n            name: '',\r\n            startDate: null,\r\n            tasks: []\r\n        };\r\n    }\r\n\r\n    gridRowClicked(task: any) {\r\n        this.onGridRowClick.emit(task);\r\n    }\r\n\r\n    popoverOpened(task: any) {\r\n        this.onPopoverOpen.emit(task);\r\n    }\r\n\r\n    onResize($event: any): void {\r\n        this.setSizes();\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'gantt-header',\r\n    template: `\r\n        <div class=\"gantt-header\">\r\n            <div class=\"gantt-header-title\">\r\n                <div style=\"flex:1\">{{ name }}</div>\r\n                <div>Started: {{ startDate | date: 'medium'}}</div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-header {\r\n            background-color: whitesmoke;\r\n            height: 40px;\r\n            border-bottom: 1px solid #e0e0e0;\r\n        }\r\n        .gantt-header-title {\r\n            padding: 12px;\r\n            display: flex;\r\n            flex-wrap:wrap;\r\n            font-family: Arial, Helvetica, sans-serif;\r\n            font-size: 16px;\r\n        }\r\n        .gantt-header-actions {\r\n            display: inline;\r\n            float: right;\r\n            padding: 6px;\r\n        }\r\n    `]\r\n})\r\nexport class GanttHeaderComponent {\r\n    @Input() name: any;\r\n    @Input() startDate: Date;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'gantt-footer',\r\n    template: `<div class=\"gantt-footer\"></div>`,\r\n    styles: [`\r\n        .gantt-footer {\r\n            background-color: whitesmoke;\r\n            height: 36px;\r\n            border-top: 1px solid #e0e0e0;\r\n        }\r\n        .gantt-footer-actions {\r\n            float: right;\r\n        }\r\n    `]\r\n})\r\nexport class GanttFooterComponent {\r\n    @Input() project: any;\r\n    constructor() { }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ElementRef,  ChangeDetectionStrategy, OnChanges, DoCheck } from '@angular/core';\r\n\r\nimport { GanttService } from '../shared/services/gantt.service';\r\nimport { IGridColumn, IGanttOptions, Project, IScale } from '../shared/interfaces';\r\nimport { EventManager } from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector: 'gantt-activity',\r\n    template: `\r\n\r\n    <div class=\"grid\" #ganttGrid>\r\n        <div class=\"grid-scale\" [ngStyle]=\"setGridScaleStyle()\">\r\n            <div class=\"grid-head-cell\"\r\n                *ngFor=\"let column of gridColumns\" [style.width]=\"column.width + 'px'\"\r\n                [style.left]=\"column.left + 'px'\">\r\n\r\n                <label>\r\n                    {{column.name}}\r\n                </label>\r\n            </div>\r\n        </div>\r\n        <div class=\"grid-data\"\r\n            #ganttGridData\r\n            [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight() }\">\r\n\r\n            <div #row\r\n                *ngFor=\"let data of ganttService.TASK_CACHE\" class=\"grid-row\"\r\n                [ngStyle]=\"setGridRowStyle()\">\r\n\r\n                <mde-popover #appPopover=\"mdePopover\"\r\n                    [mdePopoverEnterDelay]=\"100\"\r\n                    [mdePopoverLeaveDelay]=\"0\"\r\n                    [mdePopoverPositionY]=\"'above'\"\r\n                    [mdePopoverOverlapTrigger]=\"false\"\r\n                    [mdePopoverDisableAnimation]=\"false\"\r\n                    [mdePopoverArrowWidth]=\"8\"\r\n                    [mdePopoverArrowColor]=\"'black'\"\r\n                    mdePopoverPlacement=\"bottom\">\r\n\r\n                    <mat-card style=\"max-width: 340px; padding: 3px 8px;\r\n                        color: #ffffff;\r\n                        text-align: center;\r\n                        background-color: #000000;\r\n                        border-radius: 4px;\">\r\n                        <span style=\"z-index: 1070;\r\n                            display: block;\r\n                            font-family: 'Lato','Helvetica Neue',Helvetica,Arial,sans-serif;\r\n                            font-style: normal;\r\n                            font-weight: normal;\r\n                            letter-spacing: normal;\r\n                            line-break: auto;\r\n                            line-height: 1.42857143;\r\n                            text-align: left;\r\n                            text-align: start;\r\n                            text-decoration: none;\r\n                            text-shadow: none;\r\n                            text-transform: none;\r\n                            white-space: normal;\r\n                            word-break: normal;\r\n                            word-spacing: normal;\r\n                            word-wrap: normal;\r\n                            font-size: 13px;\">{{data.name}}</span>\r\n                    </mat-card>\r\n                </mde-popover>\r\n\r\n                <div class=\"grid-cell\"\r\n                    [mdePopoverTriggerFor]=\"appPopover\"\r\n                    [mdePopoverBackdropCloseOnClick]=\"false\"\r\n                    mdePopoverOffsetX=\"25\"\r\n                    mdePopoverOffsetY=\"0\"\r\n                    [ngStyle]=\"{ 'width': gridColumns[1].width + 'px', 'padding-left': 0 }\">\r\n\r\n                    <div class=\"gantt-tree-content\">\r\n                        <span [ngStyle]=\"{ borderLeftColor: data.color.primary, borderLeftWidth: .35 + 'em', \r\n                            borderLeftStyle: 'solid', paddingRight: .5 + 'em'}\"></span>\r\n                        <span>{{data.name}}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"gantt-activity\" #ganttActivity\r\n        (wheel)=\"doWheel($event, ganttActivity)\"\r\n        (window:resize)=\"onResize($event)\"\r\n        [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight() + 60, 'width': calculateColumnsWidth() }\">\r\n\r\n        <time-scale [timeScaleMonth]=\"ganttService.MONTH_SCALE\"\r\n            [timeScaleWeekend]=\"ganttService.TIME_SCALE\"\r\n            [dimensions]=\"dimensions\"\r\n            [scale]=\"options.scale\"></time-scale>\r\n        <div class=\"gantt-activity-area\"\r\n            #ganttActivityArea\r\n            [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight(), 'width': containerWidth + 36 + 'px' }\">\r\n\r\n            <activity-background [timeScale]=\"ganttService.TIME_SCALE\"\r\n                [tasks]=\"ganttService.TASK_CACHE\"></activity-background>\r\n            <activity-bars [timeScale]=\"ganttService.TIME_SCALE\"\r\n                [dimensions]=\"dimensions\"\r\n                [tasks]=\"ganttService.TASK_CACHE\"\r\n                (onGridRowClick)=\"gridRowClick($event)\"\r\n                (onPopoverOpen)=\"popoverOpen($event)\"></activity-bars>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-activity {\r\n            overflow-y: hidden;\r\n            overflow-x: scroll;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            position: relative;\r\n        }\r\n        .gantt-activity-area {\r\n            position: relative;\r\n            overflow-x: hidden;\r\n            overflow-y: hidden;\r\n            -webkit-user-select: none;\r\n        }\r\n        .gantt-vertical-scroll {\r\n            background-color: transparent;\r\n            overflow-x: hidden;\r\n            overflow-y: scroll;\r\n            position: absolute;\r\n            right: -10px;\r\n            display: block;\r\n            top: -1px;\r\n            border: 1px solid #cecece;\r\n        }\r\n        .grid {\r\n            overflow-x: hidden;\r\n            overflow-y: hidden;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            border-right: 1px solid #cecece;\r\n        }\r\n        .grid-scale {\r\n            color: #6b6b6b;\r\n            font-size: 12px;\r\n            border-bottom: 1px solid #e0e0e0;\r\n            background-color: whitesmoke;\r\n        }\r\n        .grid-head-cell {\r\n            /*color: #a6a6a6;*/\r\n            border-top: none !important;\r\n            border-right: none !important;\r\n            line-height: inherit;\r\n            box-sizing: border-box;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            border-right: 1px solid #cecece;\r\n            /*text-align: center;*/\r\n            position: relative;\r\n            cursor: default;\r\n            height: 100%;\r\n            -moz-user-select: -moz-none;\r\n            -webkit-user-select: none;\r\n            overflow: hidden;\r\n        }\r\n        .grid-data {\r\n            overflow: hidden;\r\n        }\r\n        .grid-row {\r\n            box-sizing: border-box;\r\n            border-bottom: 1px solid #e0e0e0;\r\n            background-color: #fff;\r\n            position: relative;\r\n            -webkit-user-select: none;\r\n        }\r\n        .grid-row:hover {\r\n            background-color: #eeeeee;\r\n            cursor: pointer;\r\n        }\r\n        .grid-cell {\r\n            border-right: none;\r\n            color: #454545;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            padding-left: 6px;\r\n            padding-right: 6px;\r\n            height: 100%;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            font-size: 13px;\r\n            box-sizing: border-box;\r\n        }\r\n        .actions-bar {\r\n            /*border-top: 1px solid #cecece;*/\r\n            border-bottom: 1px solid #e0e0e0;\r\n            clear: both;\r\n            /*margin-top: 90px;*/\r\n            height: 28px;\r\n            background: whitesmoke;\r\n            color: #494949;\r\n            font-family: Arial, sans-serif;\r\n            font-size: 13px;\r\n            padding-left: 15px;\r\n            line-height: 25px;\r\n        }\r\n        .gantt-tree-content {\r\n            padding-left: 15px;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class GanttActivityComponent implements OnInit, DoCheck {\r\n    @Input() project: Project;\r\n    @Input() options: IGanttOptions;\r\n\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onPopoverOpen: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    private start: Date;\r\n    private end: Date;\r\n    private timeScale: any;\r\n\r\n    private scale: IScale = {\r\n        start: null,\r\n        end: null\r\n    };\r\n\r\n    private activityContainerSizes: any;\r\n\r\n    containerHeight: any;\r\n    containerWidth: any;\r\n\r\n    ganttActivityHeight: any;\r\n    ganttActivityWidth: any;\r\n\r\n    dimensions = {\r\n        height: 0,\r\n        width: 0\r\n    };\r\n\r\n    gridColumns: IGridColumn[] = [\r\n        { name: '', left: 0, width: 16 },\r\n        { name: 'Zadanie', left: 0, width: 330 }\r\n    ];\r\n\r\n    constructor(\r\n        public elem: ElementRef,\r\n        public ganttService: GanttService) {\r\n    }\r\n\r\n    doWheel(event, elem: HTMLElement) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        // chome\r\n        if (event.wheelDelta) {\r\n            if ((event.wheelDelta || event.detail) > 0) {\r\n                elem.scrollLeft -= 100;\r\n            } else {\r\n                elem.scrollLeft += 100;\r\n            }\r\n        // firefox\r\n        } else {\r\n            if (event.deltaY > 0) {\r\n                elem.scrollLeft += 100;\r\n            } else {\r\n                elem.scrollLeft -= 100;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        // Cache the project data and only work with that. Only show parent tasks by default\r\n        this.ganttService.TASK_CACHE = this.project.tasks;\r\n        this.ganttService.TIME_SCALE = this.ganttService.calculateScale(this.options.scale.start, this.options.scale.end);\r\n\r\n        this.start = this.options.scale.start;\r\n        this.end = this.options.scale.end;\r\n        this.containerWidth = this.calculateContainerWidth();\r\n        this.containerHeight = this.calculateContainerHeight();\r\n        this.activityContainerSizes = this.ganttService.calculateActivityContainerDimensions();\r\n\r\n        this.gridColumns = this.options.gridColumns ? this.options.gridColumns : this.gridColumns;\r\n\r\n        // important that these are called last as it relies on values calculated above.\r\n        this.setScale();\r\n        this.setDimensions();\r\n        this.setSizes();\r\n    }\r\n\r\n    /** Custom model check */\r\n    ngDoCheck() {\r\n        // do a check to see whether any new tasks have been added. If the task is a child then push into array if tree expanded?\r\n        this.ganttService.doTaskCheck(this.project.tasks, this.options.scale);\r\n    }\r\n\r\n    /** On vertical scroll set the scroll top of grid and activity  */\r\n    onVerticalScroll(verticalScroll: any, ganttGrid: any, ganttActivityArea: any): void {\r\n        this.ganttService.scrollTop(verticalScroll, ganttGrid, ganttActivityArea);\r\n    }\r\n\r\n    gridRowClick(task) {\r\n        try {\r\n            this.onGridRowClick.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    popoverOpen(task) {\r\n        try {\r\n            this.onPopoverOpen.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    /** On resize of browser window dynamically adjust gantt activity height and width */\r\n    onResize(event: any): void {\r\n        const activityContainerSizes = this.ganttService.calculateActivityContainerDimensions();\r\n        this.ganttActivityHeight = activityContainerSizes.height + 'px';\r\n        this.ganttActivityWidth = activityContainerSizes.width;\r\n    }\r\n\r\n    setScale() {\r\n        this.scale.start = this.start;\r\n        this.scale.end = this.end;\r\n    }\r\n\r\n    setDimensions() {\r\n        this.dimensions.height = this.containerHeight;\r\n        this.dimensions.width = this.containerWidth;\r\n    }\r\n\r\n    setGridRowStyle(): any {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px',\r\n            'line-height': this.ganttService.rowHeight + 'px'\r\n        };\r\n    }\r\n\r\n    setGridScaleStyle() {\r\n        const height = this.ganttService.rowHeight + 30;\r\n        return {\r\n            'height': height + 'px',\r\n            'line-height': height + 'px'\r\n        };\r\n    }\r\n\r\n    calculateColumnsWidth() {\r\n        const ganttActivityWidth = this.gridColumns.map(column => { return column.width }).reduce((pv, cv) => pv + cv, 0) + 1;\r\n        return `calc(100% - ${(ganttActivityWidth)}px)`;\r\n    }\r\n\r\n    private calculateContainerHeight(): number {\r\n        return this.ganttService.TASK_CACHE.length * this.ganttService.rowHeight;\r\n    }\r\n\r\n    private calculateContainerWidth(): number {\r\n        return this.ganttService.TIME_SCALE.length * this.ganttService.cellWidth + this.ganttService.cellWidth;\r\n    }\r\n\r\n    private setSizes(): void {\r\n        this.ganttActivityHeight = this.activityContainerSizes.height + 'px';\r\n        this.ganttActivityWidth = this.activityContainerSizes.width;\r\n    }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\nimport { IScale } from '../../shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'time-scale',\r\n    template: `\r\n        <div class=\"time-scale\" [ngStyle]=\"setTimescaleStyle()\">\r\n            <!--<div class=\"time-scale-line\" [ngStyle]=\"setTimescaleMonthLineStyle('none')\">\r\n                <div class=\"time-scale-cell\" *ngFor=\"let scale of timeScaleMonth; let i = index\"\r\n                    [ngClass]=\"(i % 2) ? 'weekend' : ''\" [style.width.px]=\"scale.width\">{{scale.start | date: 'dd-MM'}}</div>\r\n            </div>-->\r\n            <div class=\"time-scale-line\" [ngStyle]=\"setTimescaleWeekendLineStyle('none')\">\r\n                <div class=\"time-scale-cell\" *ngFor=\"let date of timeScaleWeekend; let i = index\"\r\n                    [ngClass]=\"(i % 2) ? 'weekend' : ''\" [ngStyle]=\"setTimescaleWeekendCellStyle()\">{{date | date: 'dd-MM'}}</div>\r\n            </div>\r\n            <div class=\"time-scale-line\" [ngStyle]=\"setTimescaleWeekendLineStyle('none')\">\r\n                <div class=\"time-scale-cell\" *ngFor=\"let date of timeScaleWeekend; let i = index\"\r\n                [ngClass]=\"(i % 2) ? 'weekend' : ''\" [ngStyle]=\"setTimescaleWeekendCellStyle()\">{{i + 1}}</div>\r\n            </div>\r\n        </div>`,\r\n    styles: [`\r\n        .weekend {\r\n            background-color: whitesmoke;\r\n        }\r\n        .time-scale {\r\n            font-size: 12px;\r\n            background-color: #fff;\r\n            border-bottom: 1px solid #cecece;\r\n        }\r\n        .time-scale-line {\r\n            box-sizing: border-box;\r\n            border-bottom: 1px solid #cecece;\r\n        }\r\n        .time-scale-line:first-child {\r\n            border-top: none;\r\n        }\r\n        .time-scale-cell {\r\n            display: inline-block;\r\n            white-space: nowrap;\r\n            overflow: hidden;\r\n            border-right: 1px solid #cecece;\r\n            text-align: center;\r\n            height: 100%;\r\n        }`\r\n    ],\r\n    providers: [\r\n        GanttService\r\n    ]\r\n})\r\nexport class GanttTimeScaleComponent implements OnInit {\r\n    @Input() timeScaleMonth: any;\r\n    @Input() timeScaleWeekend: any;\r\n    @Input() dimensions: any;\r\n    @Input() scale: IScale;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    setTimescaleStyle() {\r\n        return {\r\n            'width': (this.dimensions.width + 36) + 'px'\r\n        };\r\n    }\r\n\r\n    setTimescaleMonthLineStyle(borderTop: string) {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px',\r\n            'line-height': this.ganttService.rowHeight + 'px',\r\n            'position': 'relative',\r\n            'border-top': borderTop\r\n        };\r\n    }\r\n\r\n    setTimescaleMonthCellStyle() {\r\n        return {\r\n            'width': this.ganttService.cellWidth + 'px'\r\n        };\r\n    }\r\n\r\n    setTimescaleWeekendLineStyle(borderTop: string) {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px',\r\n            'line-height': this.ganttService.rowHeight + 'px',\r\n            'position': 'relative',\r\n            'border-top': borderTop\r\n        };\r\n    }\r\n\r\n    setTimescaleWeekendCellStyle() {\r\n        return {\r\n            'width': this.ganttService.cellWidth + 'px'\r\n        };\r\n    }\r\n\r\n    isDayWeekend(date: Date): boolean {\r\n        return this.ganttService.isDayWeekend(date);\r\n    }\r\n}\r\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\n\r\n@Component({\r\n    selector: 'activity-background',\r\n    template: `\r\n    <div #bg class=\"gantt-activity-bg\">\r\n        <div class=\"gantt-activity-row\"\r\n            [ngStyle]=\"setRowStyle()\"\r\n            *ngFor=\"let row of tasks\">\r\n\r\n            <div class=\"gantt-activity-cell\"\r\n                [ngStyle]=\"setCellStyle()\"\r\n                *ngFor=\"let cell of cells; let i = index; let l = last\" [ngClass]=\"(i % 2) ? 'weekend' : ''\" ></div>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n        .weekend {\r\n            background-color: whitesmoke;\r\n        }\r\n        .gantt-activity-bg {\r\n            overflow: hidden;\r\n        }\r\n        .gantt-activity-row {\r\n            border-bottom: 1px solid #ebebeb;\r\n            background-color: #fff;\r\n            box-sizing: border-box;\r\n        }\r\n        .gantt-activity-cell {\r\n            display: inline-block;\r\n            height: 100%;\r\n            border-right: 1px solid #ebebeb;\r\n        }\r\n    `]\r\n})\r\nexport class GanttActivityBackgroundComponent implements OnInit {\r\n    @Input() tasks: any;\r\n    @Input() timeScale: any;\r\n\r\n    @ViewChild('bg') bg: ElementRef;\r\n\r\n    rows: any[] = [];\r\n    cells: any[] = [];\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n        this.drawGrid();\r\n    }\r\n\r\n    isDayWeekend(date: Date): boolean {\r\n        return this.ganttService.isDayWeekend(date);\r\n    }\r\n\r\n    setRowStyle() {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px'\r\n        };\r\n    }\r\n\r\n    setCellStyle() {\r\n        return {\r\n            'width': this.ganttService.cellWidth + 'px'\r\n        };\r\n    }\r\n\r\n    private drawGrid(): void {\r\n        this.cells = this.timeScale;\r\n    }\r\n}\r\n","import { Component, OnInit, Input, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\n\r\n@Component({\r\n    selector: 'activity-bars',\r\n    template: `\r\n    <div class=\"gantt-activity-bars-area\"\r\n        [ngStyle]=\"{ 'height': containerHeight + 'px', 'width': containerWidth + 'px' }\">\r\n\r\n        <div #bar class=\"gantt-activity-line\"\r\n            *ngFor=\"let task of tasks; let i = index\" (click)=\"gridRowClicked(task)\"\r\n            [ngStyle]=\"drawBar(task, i)\">\r\n\r\n            <div #popoverTrigger=\"mdePopoverTrigger\"\r\n                [mdePopoverTriggerFor]=\"taskPopover\"\r\n                [mdePopoverBackdropCloseOnClick]=\"false\"\r\n                mdePopoverOffsetX=\"-15\"\r\n                mdePopoverOffsetY=\"0\"\r\n                (opened)=\"popoverOpened(task)\">\r\n\r\n                <mde-popover #taskPopover=\"mdePopover\"\r\n                    [mdePopoverEnterDelay]=\"100\"\r\n                    [mdePopoverLeaveDelay]=\"0\"\r\n                    [mdePopoverPositionY]=\"'above'\"\r\n                    [mdePopoverOverlapTrigger]=\"false\"\r\n                    [mdePopoverDisableAnimation]=\"false\"\r\n                    [mdeFocusTrapEnabled]=\"false\"\r\n                    [mdePopoverArrowWidth]=\"12\"\r\n                    [mdePopoverArrowColor]=\"task.color?.primary\"\r\n                    mdePopoverPlacement=\"bottom\">\r\n\r\n                    <ng-container *ngTemplateOutlet=\"templatePopoverTask; context: {task: task}\"></ng-container>\r\n                </mde-popover>\r\n\r\n                <div class=\"gantt-activity-content\"></div>\r\n                <div class=\"gantt-activity-link-control gantt-activity-right\" style=\"height: 26px; line-height: 30px\">\r\n                    <div class=\"gantt-link-point\"></div>\r\n                </div>\r\n                <div class=\"gantt-activity-link-control gantt-activity-left\" style=\"height: 26px; line-height: 30px\">\r\n                    <div class=\"gantt-link-point\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #templatePopoverTask let-data=\"task\">\r\n        <mat-card *ngIf=\"data\" class=\"mat-elevation-z6\" \r\n            [ngStyle]=\"{ \r\n                borderBottomColor: data.color?.primary,\r\n                borderBottomWidth: '.25em',\r\n                borderBottomStyle: 'solid' \r\n            }\" style=\"width: 320px; max-width: 320px;\">\r\n\r\n            <mat-card-header>\r\n                <div mat-card-avatar [ngStyle]=\"{ borderColor: data.color?.primary }\" style=\"width: 0; height: unset; margin-bottom: .7em; border-radius: 0; border-style: solid;\"></div>\r\n                <mat-card-title>\r\n                    <span style=\"font-size: 80%;\">{{data.name}}</span>\r\n                </mat-card-title>\r\n                <mat-card-subtitle>\r\n                    <span>{{data.start | date:'yyyy-MM-dd'}} - {{data.end | date:'yyyy-MM-dd'}}</span>\r\n                </mat-card-subtitle>\r\n                <mat-card-subtitle>\r\n                    <span style=\"padding-left: .75em; padding-right: 1em; font-stretch: condensed;\">&#x336;</span>\r\n                    <span>{{data.resource}}</span>\r\n                </mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <footer *ngIf=\"data.description\">\r\n                    <span [innerHTML]=\"data.description\"></span>\r\n                </footer>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </ng-template>\r\n    `,\r\n    styles: [`\r\n    .gantt-activity-line {\r\n        /*border-radius: 2px;*/\r\n        position: absolute;\r\n        box-sizing: border-box;\r\n        -webkit-user-select: none;\r\n    }\r\n    .gantt-activity-line:hover {\r\n        cursor: pointer;\r\n    }\r\n    .gantt-activity-content {\r\n        font-size: 12px;\r\n        color: #fff;\r\n        width: 100%;\r\n        top: 0;\r\n        position: absolute;\r\n        white-space: nowrap;\r\n        text-align: center;\r\n        line-height: inherit;\r\n        overflow: hidden;\r\n        height: 100%;\r\n    }\r\n    .gantt-activity-link-control {\r\n        position: absolute;\r\n        width: 13px;\r\n        top: 0;\r\n    }\r\n    .gantt-activity-right {\r\n        right: 0;\r\n    }\r\n    .gantt-activity-left {\r\n        left: 0;\r\n    }\r\n    .gantt-activity-right:hover {\r\n        /*cursor:w-resize;*/\r\n    }\r\n    .gantt-activity-left:hover {\r\n        /*cursor:w-resize;*/\r\n    }\r\n    `],\r\n    providers: [\r\n        GanttService\r\n    ]\r\n})\r\nexport class GanttActivityBarsComponent implements OnInit {\r\n    @Input() timeScale: any;\r\n    @Input() dimensions: any;\r\n    @Input() tasks: any;\r\n\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onPopoverOpen: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    containerHeight = 0;\r\n    containerWidth = 0;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n        this.containerHeight = this.dimensions.height;\r\n        this.containerWidth = this.dimensions.width;\r\n    }\r\n\r\n    drawBar(task: any, index: number) {\r\n        let style = {};\r\n        style = this.ganttService.calculateBar(task, index, this.timeScale);\r\n\r\n        return style;\r\n    }\r\n\r\n    gridRowClicked(task: any) {\r\n        try {\r\n            this.onGridRowClick.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    popoverOpened(task: any) {\r\n        try {\r\n            this.onPopoverOpen.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    private addMouseEventListeners(dragFn: any) {\r\n        function stopFn() {\r\n            document.documentElement.removeEventListener('mousemove', dragFn, false);\r\n            document.documentElement.removeEventListener('mouseup', stopFn, false);\r\n            document.documentElement.removeEventListener('mouseleave', stopFn, false);\r\n        }\r\n\r\n        document.documentElement.addEventListener('mousemove', dragFn, false);\r\n        document.documentElement.addEventListener('mouseup', stopFn, false);\r\n        document.documentElement.addEventListener('mouseleave', stopFn, false);\r\n    }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MdePopoverModule } from \"@material-extended/mde\";\r\n\r\nimport { GanttActivityComponent } from \"./gantt-activity.component\";\r\nimport { GanttTimeScaleComponent } from \"./time-scale/gantt-time-scale.component\";\r\nimport { GanttActivityBackgroundComponent } from \"./background/activity-background.component\";\r\nimport { GanttActivityBarsComponent } from \"./bars/activity-bars.component\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatCardModule, MdePopoverModule],\r\n  exports: [\r\n    GanttActivityComponent,\r\n    GanttTimeScaleComponent,\r\n    GanttActivityBackgroundComponent,\r\n    GanttActivityBarsComponent,\r\n  ],\r\n  declarations: [\r\n    GanttActivityComponent,\r\n    GanttTimeScaleComponent,\r\n    GanttActivityBackgroundComponent,\r\n    GanttActivityBarsComponent,\r\n  ],\r\n  providers: [],\r\n})\r\nexport class GanttActivityModule {}\r\n","import {\r\n  NgModule,\r\n  CUSTOM_ELEMENTS_SCHEMA,\r\n  ModuleWithProviders,\r\n} from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport { GanttComponent } from \"./gantt.component\";\r\nimport { GanttHeaderComponent } from \"./header/gantt-header.component\";\r\nimport { GanttFooterComponent } from \"./footer/gantt-footer.component\";\r\nimport { GanttService } from \"./shared/services/gantt.service\";\r\nimport { GanttActivityModule } from \"./activity/gantt-activity.module\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, GanttActivityModule],\r\n  exports: [GanttComponent],\r\n  declarations: [GanttComponent, GanttHeaderComponent, GanttFooterComponent],\r\n  providers: [GanttService],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class GanttModule {\r\n  static forRoot(): ModuleWithProviders<GanttModule> {\r\n    return {\r\n      ngModule: GanttModule,\r\n    };\r\n  }\r\n}\r\n"]}