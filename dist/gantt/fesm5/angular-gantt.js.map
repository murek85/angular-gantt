{"version":3,"file":"angular-gantt.js","sources":["ng://angular-gantt/lib/shared/services/gantt-config.service.ts","ng://angular-gantt/lib/shared/services/gantt.service.ts","ng://angular-gantt/lib/activity/time-scale/gantt-time-scale.component.ts","ng://angular-gantt/lib/activity/background/activity-background.component.ts","ng://angular-gantt/lib/activity/bars/activity-bars.component.ts","ng://angular-gantt/lib/activity/gantt-activity.component.ts","ng://angular-gantt/lib/gantt.component.ts","ng://angular-gantt/lib/header/gantt-header.component.ts","ng://angular-gantt/lib/footer/gantt-footer.component.ts","ng://angular-gantt/lib/activity/gantt-activity.module.ts","ng://angular-gantt/lib/gantt.module.ts","ng://angular-gantt/public-api.ts","ng://angular-gantt/angular-gantt.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GanttConfig {\r\n    public cellWidth = 38;\r\n    public rowHeight = 30;\r\n    public activityHeight = 420;\r\n    public barHeight = 25;\r\n    public barLineHeight = 35;\r\n    public barMoveable = false;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { GanttConfig } from './gantt-config.service';\r\nimport { Task, IScale } from '../interfaces';\r\n\r\n@Injectable()\r\nexport class GanttService {\r\n    public rowHeight = 0;\r\n    public hourCellWidth = 60; // change to 60 so minutes can been seen more easily\r\n    public hoursCellWidth = this.hourCellWidth * 25;\r\n    public cellWidth = 0;\r\n    public windowInnerWidth = 0;\r\n    public activityHeight = 0;\r\n    public barHeight = 0;\r\n    public barLineHeight = 0;\r\n    public barTop = 0;\r\n    public barMoveable = false;\r\n    public gridWidth = 0; //188\r\n    public gridHeight = 332;\r\n    public TASK_CACHE: any[];\r\n    public TIME_SCALE: any[];\r\n    public MONTH_SCALE: any[];\r\n\r\n    constructor() {\r\n        const ganttConfig = new GanttConfig();\r\n\r\n        this.rowHeight = ganttConfig.rowHeight;\r\n        this.cellWidth = ganttConfig.cellWidth;\r\n        this.activityHeight = ganttConfig.activityHeight;\r\n        this.barHeight = ganttConfig.barHeight;\r\n        this.barLineHeight = ganttConfig.barLineHeight;\r\n        this.barTop = ganttConfig.rowHeight;\r\n        this.barMoveable = ganttConfig.barMoveable;\r\n    }\r\n\r\n    private calculateBarWidth(start: Date, end: Date): number {\r\n        if (typeof start === 'string') {\r\n            start = new Date(start);\r\n        }\r\n\r\n        if (typeof end === 'string') {\r\n            end = new Date(end);\r\n        }\r\n\r\n        const days = this.calculateDiffDays(start, end);\r\n        const width: number = (days * this.cellWidth + days) / 7;\r\n        return width;\r\n    }\r\n\r\n    private calculateBarLeft(start: Date, scale: any[]): number {\r\n        let left = 0;\r\n\r\n        if (start != null) {\r\n            if (typeof start === 'string') {\r\n                start = new Date();\r\n            }\r\n\r\n            for (let i = 0; i < scale.length; i++) {\r\n                if (start.getTime() >= scale[i].getTime() && start.getTime() < scale[i + 1].getTime()) {\r\n                    // left = i * this.cellWidth + i + this.calculateBarLeftDelta(start) +\r\n                    //    ((7 / (scale[i + 1].getDate() - start.getDate()) / 7) * this.cellWidth) - this.cellWidth / 7;\r\n                    left = i * this.cellWidth + ((this.cellWidth) * this.calculateDiffDays(scale[i], start) / 7) +\r\n                        i + this.calculateBarLeftDelta(start);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return left;\r\n    }\r\n\r\n    /** Calculates the height of the gantt grid, activity and vertical scroll */\r\n    public calculateGanttHeight(): string {\r\n        return `${this.TASK_CACHE.length * this.rowHeight}px`;\r\n    }\r\n\r\n    private calculateBarLeftDelta(start: Date): number {\r\n        let offset = 0;\r\n        const hoursInDay = 24;\r\n        const minutesInHour = 60;\r\n        const secondsInHour = 3600;\r\n        const startHours: number =\r\n            (start.getHours() + start.getMinutes() / minutesInHour + start.getSeconds() / secondsInHour);\r\n\r\n        offset = this.cellWidth / hoursInDay * startHours;\r\n        return offset;\r\n    }\r\n\r\n    /** Calculate the bar styles */\r\n    public calculateBar(task: any, index: number, scale: any) {\r\n        const barStyle = this.getBarStyle(task.color);\r\n        return {\r\n            'top': this.barTop * index + 2 + 'px',\r\n            'left': this.calculateBarLeft(task.start, scale) + 'px',\r\n            'height': this.barHeight + 'px',\r\n            'line-height': this.barLineHeight + 'px',\r\n            'width': this.calculateBarWidth(task.start, task.end) + 'px',\r\n            'background-color': barStyle[\"background-color\"],\r\n            'border-left': barStyle[\"border-left\"]\r\n        };\r\n    }\r\n\r\n    /** Get the bar style based on task status */\r\n    private getBarStyle(color: any): any {\r\n        const style = {};\r\n        style[\"background-color\"] = color.secondary;\r\n        style[\"border-left\"] = `5px solid ${color.primary}`;\r\n\r\n        return style;\r\n    }\r\n\r\n    /** Calculates the difference in two dates and returns number of days */\r\n    public calculateDiffDays(start: Date, end: Date): number {\r\n        try {\r\n            const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds /ms\r\n            const diffDays = Math.abs((start.getTime() - end.getTime()) / (oneDay));\r\n            const days = diffDays; // don't use Math.round as it will draw an incorrect bar\r\n            return days;\r\n        } catch (err) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /** Calculate the gantt scale range given the start and end date of tasks*/\r\n    public calculateScale(start: Date = new Date(), end: Date = this.addDays(start, 7)) {\r\n        const scale: any[] = [];\r\n        try {\r\n            while (start.getTime() <= end.getTime()) {\r\n                scale.push(start);\r\n                start = this.addDays(start, 7);\r\n            }\r\n            return scale;\r\n\r\n        } catch (err) {\r\n            return scale;\r\n        }\r\n    }\r\n\r\n    public calculateMonthScale(start: Date = new Date(), end: Date = this.addDays(start, 7)) {\r\n        let scale: any[] = [];\r\n        try {\r\n            // while (start.getTime() <= end.getTime()) {\r\n            //     scale.push({ start: start, width: this.calculateCellMonthWidth(start, end) });\r\n            //     start = this.addDays(start, new Date(start.getFullYear(), start.getMonth() + 1, 0).getDate());\r\n            // }\r\n            scale = this.calculateCellMonthWidth(start, end);\r\n            return scale;\r\n\r\n        } catch (err) {\r\n            return scale;\r\n        }\r\n    }\r\n\r\n    /** Determines whether given date is a weekend */\r\n    public isDayWeekend(date: Date): boolean {\r\n        const day = date.getDay();\r\n        if (day === 6 || day === 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /** Add x number of days to a date object */\r\n    public addDays(date: Date, days: number): Date {\r\n        const result = new Date(date);\r\n        result.setDate(result.getDate() + days);\r\n        return result;\r\n    }\r\n\r\n    //** Remove x number of days from a date object */\r\n    public removeDays(date: Date, days: number): Date {\r\n        const result = new Date(date);\r\n        result.setDate(result.getDate() - days);\r\n        return result;\r\n    }\r\n\r\n    /** Calculates the grid scale for gantt based on tasks start and end dates */\r\n    public calculateGridScale(tasks: Task[]): IScale {\r\n        let start: Date;\r\n        let end: Date;\r\n        const dates = tasks.map((task: any) => {\r\n            return {\r\n                start: new Date(task.start),\r\n                end: new Date(task.end)\r\n            };\r\n        });\r\n\r\n        start = new Date(Math.min.apply(null, dates.map((t) => {\r\n            return t.start;\r\n        })));\r\n\r\n        end = new Date(Math.max.apply(null, dates.map((t) => {\r\n            return t.end;\r\n        })));\r\n\r\n        return {\r\n            start: start,\r\n            end: end\r\n        };\r\n    }\r\n\r\n    public getComputedStyle(element: any, attribute: any) {\r\n        return parseInt(document.defaultView.getComputedStyle(element)[attribute], 10);\r\n    }\r\n\r\n    //TODO(dale): determine whether this is needed\r\n    public calculateContainerWidth(): number {\r\n        this.windowInnerWidth = window.innerWidth;\r\n        const containerWidth = this.gridWidth - 18;\r\n        return containerWidth;\r\n    }\r\n\r\n    public calculateContainerHeight(): number {\r\n        const containerHeight = (innerHeight - 18);\r\n        return containerHeight;\r\n    }\r\n\r\n    public calculateActivityContainerDimensions(): any {\r\n        const scrollWidth = 18;\r\n        this.windowInnerWidth = window.innerWidth;\r\n        const width = window.innerWidth - this.gridWidth - scrollWidth;\r\n\r\n        return { height: this.activityHeight, width: width };\r\n    }\r\n\r\n    public calculateGanttActivityWidth(elem: HTMLElement): any {\r\n        return `calc(100% - ${(elem.offsetWidth + 1)}px)`;\r\n    }\r\n\r\n    public calculateGanttActivityHeight(elem: HTMLElement): any {\r\n        return `${elem.offsetHeight}px`;\r\n    }\r\n\r\n    public calculateCellMonthWidth(minDate: Date, maxDate: Date) {\r\n        var i, result = [];\r\n        var startDate = minDate;\r\n        var endDate = maxDate;\r\n        var monthDiff = this.calculateDiffMonths(startDate, endDate);\r\n        var dayDiff = this.calculateDiffDays(startDate, endDate);\r\n\r\n        for (i = 0; i < monthDiff; i++) {\r\n            var startOfMonth = i === 0 ? startDate : new Date(startDate.getFullYear(), i, 1);\r\n            var endOfMonth = i === monthDiff - 1 ? endDate : new Date(startDate.getFullYear(), i + 1, 0);\r\n            var dayInMonth = this.calculateDiffDays(startOfMonth, endOfMonth) + (i !== monthDiff - 1 && 1);\r\n            var width = Math.floor(dayInMonth / dayDiff * 2E3) * 1.025;\r\n\r\n            result.push({ start: startOfMonth, end: endOfMonth, width: width });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private calculateDiffMonths(start, end) {\r\n        var months = end.getMonth() - start.getMonth() + (12 * (end.getFullYear() - start.getFullYear()));\r\n\r\n        if(end.getDate() < start.getDate()) {\r\n            var newFrom = new Date(end.getFullYear(), end.getMonth(),start.getDate());\r\n            if (end < newFrom  && end.getMonth() == newFrom.getMonth() && end.getYear() % 4 != 0) {\r\n                months--;\r\n            }\r\n        }\r\n\r\n        return months + 1;\r\n    }\r\n\r\n    /** Set the vertical scroll top positions for gantt */\r\n    public scrollTop(verticalScrollElem: any, ganttGridElem: any, ganttActivityAreaElem: any) {\r\n        const verticalScrollTop = verticalScrollElem.scrollTop;\r\n        const scroll = this.setScrollTop;\r\n\r\n        // debounce\r\n        if (verticalScrollTop !== null && verticalScrollTop !== undefined) {\r\n            scroll(verticalScrollTop, ganttActivityAreaElem);\r\n            scroll(ganttActivityAreaElem.scrollTop, ganttGridElem);\r\n        }\r\n    }\r\n\r\n    /** Group data by id , only supports one level*/\r\n    public groupData(tasks: any): any {\r\n        return tasks;\r\n    }\r\n\r\n    /** Checks whether any new data needs to be added to task cache  */\r\n    public doTaskCheck(tasks: any[], scale: any): boolean {\r\n        // const cachedTaskIds = this.TASK_CACHE.map((task: any) => { return task.id });\r\n        // const itemsToCache: any[] = [];\r\n\r\n        // only look at tasks that are not cached\r\n        // tasks.filter((task: any) => {\r\n        //     return cachedTaskIds.indexOf(task.id) === -1;\r\n        // }).forEach((task: any) => {\r\n        //     itemsToCache.push(task);\r\n        // });\r\n\r\n        // itemsToCache.forEach((item: any) => {\r\n        //     this.TASK_CACHE.push(item);\r\n        // });\r\n\r\n        // if (itemsToCache.length > 0) {\r\n        //     return true;\r\n        // }\r\n\r\n        this.TASK_CACHE = tasks;\r\n\r\n        this.TIME_SCALE = this.calculateScale(scale.start, scale.end);\r\n        this.MONTH_SCALE = this.calculateMonthScale(scale.start, scale.end);\r\n\r\n        return true;\r\n    }\r\n\r\n    /** Set a id prefix so CSS3 query selector can work with ids that contain numbers */\r\n    public setIdPrefix(id: string): string {\r\n        return `_${id}`;\r\n    }\r\n\r\n    // /** Remove the id prefix to allow querying of data */\r\n    // public removeIdPrefix(id: string): string {\r\n    //     return id.substring(1, id.length - 1);\r\n    // }\r\n\r\n    /** Set the scroll top property of a native DOM element */\r\n    public setScrollTop(scrollTop: number, element: any): void {\r\n        if (element !== null && element !== undefined) {\r\n            element.scrollTop = scrollTop;\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\nimport { IScale } from '../../shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'time-scale',\r\n    template: `\r\n        <div class=\"time-scale\" [ngStyle]=\"setTimescaleStyle()\">\r\n            <!--<div class=\"time-scale-line\" [ngStyle]=\"setTimescaleMonthLineStyle('none')\">\r\n                <div class=\"time-scale-cell\" *ngFor=\"let scale of timeScaleMonth; let i = index\"\r\n                    [ngClass]=\"(i % 2) ? 'weekend' : ''\" [style.width.px]=\"scale.width\">{{scale.start | date: 'dd-MM'}}</div>\r\n            </div>-->\r\n            <div class=\"time-scale-line\" [ngStyle]=\"setTimescaleWeekendLineStyle('none')\">\r\n                <div class=\"time-scale-cell\" *ngFor=\"let date of timeScaleWeekend; let i = index\"\r\n                    [ngClass]=\"(i % 2) ? 'weekend' : ''\" [ngStyle]=\"setTimescaleWeekendCellStyle()\">{{date | date: 'dd-MM'}}</div>\r\n            </div>\r\n            <div class=\"time-scale-line\" [ngStyle]=\"setTimescaleWeekendLineStyle('none')\">\r\n                <div class=\"time-scale-cell\" *ngFor=\"let date of timeScaleWeekend; let i = index\"\r\n                [ngClass]=\"(i % 2) ? 'weekend' : ''\" [ngStyle]=\"setTimescaleWeekendCellStyle()\">{{i + 1}}</div>\r\n            </div>\r\n        </div>`,\r\n    styles: [`\r\n        .weekend {\r\n            background-color: whitesmoke;\r\n        }\r\n        .time-scale {\r\n            font-size: 12px;\r\n            background-color: #fff;\r\n            border-bottom: 1px solid #cecece;\r\n        }\r\n        .time-scale-line {\r\n            box-sizing: border-box;\r\n            border-bottom: 1px solid #cecece;\r\n        }\r\n        .time-scale-line:first-child {\r\n            border-top: none;\r\n        }\r\n        .time-scale-cell {\r\n            display: inline-block;\r\n            white-space: nowrap;\r\n            overflow: hidden;\r\n            border-right: 1px solid #cecece;\r\n            text-align: center;\r\n            height: 100%;\r\n        }`\r\n    ],\r\n    providers: [\r\n        GanttService\r\n    ]\r\n})\r\nexport class GanttTimeScaleComponent implements OnInit {\r\n    @Input() timeScaleMonth: any;\r\n    @Input() timeScaleWeekend: any;\r\n    @Input() dimensions: any;\r\n    @Input() scale: IScale;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    setTimescaleStyle() {\r\n        return {\r\n            'width': (this.dimensions.width + 36) + 'px'\r\n        };\r\n    }\r\n\r\n    setTimescaleMonthLineStyle(borderTop: string) {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px',\r\n            'line-height': this.ganttService.rowHeight + 'px',\r\n            'position': 'relative',\r\n            'border-top': borderTop\r\n        };\r\n    }\r\n\r\n    setTimescaleMonthCellStyle() {\r\n        return {\r\n            'width': this.ganttService.cellWidth + 'px'\r\n        };\r\n    }\r\n\r\n    setTimescaleWeekendLineStyle(borderTop: string) {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px',\r\n            'line-height': this.ganttService.rowHeight + 'px',\r\n            'position': 'relative',\r\n            'border-top': borderTop\r\n        };\r\n    }\r\n\r\n    setTimescaleWeekendCellStyle() {\r\n        return {\r\n            'width': this.ganttService.cellWidth + 'px'\r\n        };\r\n    }\r\n\r\n    isDayWeekend(date: Date): boolean {\r\n        return this.ganttService.isDayWeekend(date);\r\n    }\r\n}\r\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\n\r\n@Component({\r\n    selector: 'activity-background',\r\n    template: `\r\n    <div #bg class=\"gantt-activity-bg\">\r\n        <div class=\"gantt-activity-row\"\r\n            [ngStyle]=\"setRowStyle()\"\r\n            *ngFor=\"let row of tasks\">\r\n\r\n            <div class=\"gantt-activity-cell\"\r\n                [ngStyle]=\"setCellStyle()\"\r\n                *ngFor=\"let cell of cells; let i = index; let l = last\" [ngClass]=\"(i % 2) ? 'weekend' : ''\" ></div>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n        .weekend {\r\n            background-color: whitesmoke;\r\n        }\r\n        .gantt-activity-bg {\r\n            overflow: hidden;\r\n        }\r\n        .gantt-activity-row {\r\n            border-bottom: 1px solid #ebebeb;\r\n            background-color: #fff;\r\n            box-sizing: border-box;\r\n        }\r\n        .gantt-activity-cell {\r\n            display: inline-block;\r\n            height: 100%;\r\n            border-right: 1px solid #ebebeb;\r\n        }\r\n    `]\r\n})\r\nexport class GanttActivityBackgroundComponent implements OnInit {\r\n    @Input() tasks: any;\r\n    @Input() timeScale: any;\r\n\r\n    @ViewChild('bg') bg: ElementRef;\r\n\r\n    rows: any[] = [];\r\n    cells: any[] = [];\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n        this.drawGrid();\r\n    }\r\n\r\n    isDayWeekend(date: Date): boolean {\r\n        return this.ganttService.isDayWeekend(date);\r\n    }\r\n\r\n    setRowStyle() {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px'\r\n        };\r\n    }\r\n\r\n    setCellStyle() {\r\n        return {\r\n            'width': this.ganttService.cellWidth + 'px'\r\n        };\r\n    }\r\n\r\n    private drawGrid(): void {\r\n        this.cells = this.timeScale;\r\n    }\r\n}\r\n","import { Component, OnInit, Input, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\n\r\n@Component({\r\n    selector: 'activity-bars',\r\n    template: `\r\n    <div class=\"gantt-activity-bars-area\"\r\n        [ngStyle]=\"{ 'height': containerHeight + 'px', 'width': containerWidth + 'px' }\">\r\n\r\n        <div #bar class=\"gantt-activity-line\"\r\n            *ngFor=\"let task of tasks; let i = index\" (click)=\"gridRowClicked(task)\"\r\n            [ngStyle]=\"drawBar(task, i)\">\r\n\r\n            <div #popoverTrigger=\"mdePopoverTrigger\"\r\n                [mdePopoverTriggerFor]=\"taskPopover\"\r\n                [mdePopoverBackdropCloseOnClick]=\"false\"\r\n                mdePopoverOffsetX=\"-15\"\r\n                mdePopoverOffsetY=\"0\"\r\n                (opened)=\"popoverOpened(task)\">\r\n\r\n                <mde-popover #taskPopover=\"mdePopover\"\r\n                    [mdePopoverEnterDelay]=\"100\"\r\n                    [mdePopoverLeaveDelay]=\"0\"\r\n                    [mdePopoverPositionY]=\"'above'\"\r\n                    [mdePopoverOverlapTrigger]=\"false\"\r\n                    [mdePopoverDisableAnimation]=\"false\"\r\n                    [mdeFocusTrapEnabled]=\"false\"\r\n                    [mdePopoverArrowWidth]=\"12\"\r\n                    [mdePopoverArrowColor]=\"task.color?.primary\"\r\n                    mdePopoverPlacement=\"bottom\">\r\n\r\n                    <ng-container *ngTemplateOutlet=\"templatePopoverTask; context: {task: task}\"></ng-container>\r\n                </mde-popover>\r\n\r\n                <div class=\"gantt-activity-content\"></div>\r\n                <div class=\"gantt-activity-link-control gantt-activity-right\" style=\"height: 26px; line-height: 30px\">\r\n                    <div class=\"gantt-link-point\"></div>\r\n                </div>\r\n                <div class=\"gantt-activity-link-control gantt-activity-left\" style=\"height: 26px; line-height: 30px\">\r\n                    <div class=\"gantt-link-point\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #templatePopoverTask let-data=\"task\">\r\n        <mat-card *ngIf=\"data\" class=\"mat-elevation-z6\" \r\n            [ngStyle]=\"{ \r\n                borderBottomColor: data.color?.primary,\r\n                borderBottomWidth: '.25em',\r\n                borderBottomStyle: 'solid' \r\n            }\" style=\"width: 320px; max-width: 320px;\">\r\n\r\n            <mat-card-header>\r\n                <div mat-card-avatar [ngStyle]=\"{ borderColor: data.color?.primary }\" style=\"width: 0; height: unset; margin-bottom: .7em; border-radius: 0; border-style: solid;\"></div>\r\n                <mat-card-title>\r\n                    <span style=\"font-size: 80%;\">{{data.name}}</span>\r\n                </mat-card-title>\r\n                <mat-card-subtitle>\r\n                    <span>{{data.start | date:'yyyy-MM-dd'}} - {{data.end | date:'yyyy-MM-dd'}}</span>\r\n                </mat-card-subtitle>\r\n                <mat-card-subtitle>\r\n                    <span style=\"padding-left: .75em; padding-right: 1em; font-stretch: condensed;\">&#x336;</span>\r\n                    <span>{{data.resource}}</span>\r\n                </mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <footer *ngIf=\"data.description\">\r\n                    <span [innerHTML]=\"data.description\"></span>\r\n                </footer>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </ng-template>\r\n    `,\r\n    styles: [`\r\n    .gantt-activity-line {\r\n        /*border-radius: 2px;*/\r\n        position: absolute;\r\n        box-sizing: border-box;\r\n        -webkit-user-select: none;\r\n    }\r\n    .gantt-activity-line:hover {\r\n        cursor: pointer;\r\n    }\r\n    .gantt-activity-content {\r\n        font-size: 12px;\r\n        color: #fff;\r\n        width: 100%;\r\n        top: 0;\r\n        position: absolute;\r\n        white-space: nowrap;\r\n        text-align: center;\r\n        line-height: inherit;\r\n        overflow: hidden;\r\n        height: 100%;\r\n    }\r\n    .gantt-activity-link-control {\r\n        position: absolute;\r\n        width: 13px;\r\n        top: 0;\r\n    }\r\n    .gantt-activity-right {\r\n        right: 0;\r\n    }\r\n    .gantt-activity-left {\r\n        left: 0;\r\n    }\r\n    .gantt-activity-right:hover {\r\n        /*cursor:w-resize;*/\r\n    }\r\n    .gantt-activity-left:hover {\r\n        /*cursor:w-resize;*/\r\n    }\r\n    `],\r\n    providers: [\r\n        GanttService\r\n    ]\r\n})\r\nexport class GanttActivityBarsComponent implements OnInit {\r\n    @Input() timeScale: any;\r\n    @Input() dimensions: any;\r\n    @Input() tasks: any;\r\n\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onPopoverOpen: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    containerHeight = 0;\r\n    containerWidth = 0;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n        this.containerHeight = this.dimensions.height;\r\n        this.containerWidth = this.dimensions.width;\r\n    }\r\n\r\n    drawBar(task: any, index: number) {\r\n        let style = {};\r\n        style = this.ganttService.calculateBar(task, index, this.timeScale);\r\n\r\n        return style;\r\n    }\r\n\r\n    gridRowClicked(task: any) {\r\n        try {\r\n            this.onGridRowClick.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    popoverOpened(task: any) {\r\n        try {\r\n            this.onPopoverOpen.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    private addMouseEventListeners(dragFn: any) {\r\n        function stopFn() {\r\n            document.documentElement.removeEventListener('mousemove', dragFn, false);\r\n            document.documentElement.removeEventListener('mouseup', stopFn, false);\r\n            document.documentElement.removeEventListener('mouseleave', stopFn, false);\r\n        }\r\n\r\n        document.documentElement.addEventListener('mousemove', dragFn, false);\r\n        document.documentElement.addEventListener('mouseup', stopFn, false);\r\n        document.documentElement.addEventListener('mouseleave', stopFn, false);\r\n    }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ElementRef,  ChangeDetectionStrategy, OnChanges, DoCheck } from '@angular/core';\r\n\r\nimport { GanttService } from '../shared/services/gantt.service';\r\nimport { IGridColumn, IGanttOptions, Project, IScale } from '../shared/interfaces';\r\nimport { EventManager } from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector: 'gantt-activity',\r\n    template: `\r\n\r\n    <div class=\"grid\" #ganttGrid>\r\n        <div class=\"grid-scale\" [ngStyle]=\"setGridScaleStyle()\">\r\n            <div class=\"grid-head-cell\"\r\n                *ngFor=\"let column of gridColumns\" [style.width]=\"column.width + 'px'\"\r\n                [style.left]=\"column.left + 'px'\">\r\n\r\n                <label>\r\n                    {{column.name}}\r\n                </label>\r\n            </div>\r\n        </div>\r\n        <div class=\"grid-data\"\r\n            #ganttGridData\r\n            [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight() }\">\r\n\r\n            <div #row\r\n                *ngFor=\"let data of ganttService.TASK_CACHE\" class=\"grid-row\"\r\n                [ngStyle]=\"setGridRowStyle()\">\r\n\r\n                <mde-popover #appPopover=\"mdePopover\"\r\n                    [mdePopoverEnterDelay]=\"100\"\r\n                    [mdePopoverLeaveDelay]=\"0\"\r\n                    [mdePopoverPositionY]=\"'above'\"\r\n                    [mdePopoverOverlapTrigger]=\"false\"\r\n                    [mdePopoverDisableAnimation]=\"false\"\r\n                    [mdePopoverArrowWidth]=\"8\"\r\n                    [mdePopoverArrowColor]=\"'black'\"\r\n                    mdePopoverPlacement=\"bottom\">\r\n\r\n                    <mat-card style=\"max-width: 340px; padding: 3px 8px;\r\n                        color: #ffffff;\r\n                        text-align: center;\r\n                        background-color: #000000;\r\n                        border-radius: 4px;\">\r\n                        <span style=\"z-index: 1070;\r\n                            display: block;\r\n                            font-family: 'Lato','Helvetica Neue',Helvetica,Arial,sans-serif;\r\n                            font-style: normal;\r\n                            font-weight: normal;\r\n                            letter-spacing: normal;\r\n                            line-break: auto;\r\n                            line-height: 1.42857143;\r\n                            text-align: left;\r\n                            text-align: start;\r\n                            text-decoration: none;\r\n                            text-shadow: none;\r\n                            text-transform: none;\r\n                            white-space: normal;\r\n                            word-break: normal;\r\n                            word-spacing: normal;\r\n                            word-wrap: normal;\r\n                            font-size: 13px;\">{{data.name}}</span>\r\n                    </mat-card>\r\n                </mde-popover>\r\n\r\n                <div class=\"grid-cell\"\r\n                    [mdePopoverTriggerFor]=\"appPopover\"\r\n                    [mdePopoverBackdropCloseOnClick]=\"false\"\r\n                    mdePopoverOffsetX=\"25\"\r\n                    mdePopoverOffsetY=\"0\"\r\n                    [ngStyle]=\"{ 'width': gridColumns[1].width + 'px', 'padding-left': 0 }\">\r\n\r\n                    <div class=\"gantt-tree-content\">\r\n                        <span [ngStyle]=\"{ borderLeftColor: data.color.primary, borderLeftWidth: .35 + 'em', \r\n                            borderLeftStyle: 'solid', paddingRight: .5 + 'em'}\"></span>\r\n                        <span>{{data.name}}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"gantt-activity\" #ganttActivity\r\n        (wheel)=\"doWheel($event, ganttActivity)\"\r\n        (window:resize)=\"onResize($event)\"\r\n        [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight() + 60, 'width': calculateColumnsWidth() }\">\r\n\r\n        <time-scale [timeScaleMonth]=\"ganttService.MONTH_SCALE\"\r\n            [timeScaleWeekend]=\"ganttService.TIME_SCALE\"\r\n            [dimensions]=\"dimensions\"\r\n            [scale]=\"options.scale\"></time-scale>\r\n        <div class=\"gantt-activity-area\"\r\n            #ganttActivityArea\r\n            [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight(), 'width': containerWidth + 36 + 'px' }\">\r\n\r\n            <activity-background [timeScale]=\"ganttService.TIME_SCALE\"\r\n                [tasks]=\"ganttService.TASK_CACHE\"></activity-background>\r\n            <activity-bars [timeScale]=\"ganttService.TIME_SCALE\"\r\n                [dimensions]=\"dimensions\"\r\n                [tasks]=\"ganttService.TASK_CACHE\"\r\n                (onGridRowClick)=\"gridRowClick($event)\"\r\n                (onPopoverOpen)=\"popoverOpen($event)\"></activity-bars>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-activity {\r\n            overflow-y: hidden;\r\n            overflow-x: scroll;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            position: relative;\r\n        }\r\n        .gantt-activity-area {\r\n            position: relative;\r\n            overflow-x: hidden;\r\n            overflow-y: hidden;\r\n            -webkit-user-select: none;\r\n        }\r\n        .gantt-vertical-scroll {\r\n            background-color: transparent;\r\n            overflow-x: hidden;\r\n            overflow-y: scroll;\r\n            position: absolute;\r\n            right: -10px;\r\n            display: block;\r\n            top: -1px;\r\n            border: 1px solid #cecece;\r\n        }\r\n        .grid {\r\n            overflow-x: hidden;\r\n            overflow-y: hidden;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            border-right: 1px solid #cecece;\r\n        }\r\n        .grid-scale {\r\n            color: #6b6b6b;\r\n            font-size: 12px;\r\n            border-bottom: 1px solid #e0e0e0;\r\n            background-color: whitesmoke;\r\n        }\r\n        .grid-head-cell {\r\n            /*color: #a6a6a6;*/\r\n            border-top: none !important;\r\n            border-right: none !important;\r\n            line-height: inherit;\r\n            box-sizing: border-box;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            border-right: 1px solid #cecece;\r\n            /*text-align: center;*/\r\n            position: relative;\r\n            cursor: default;\r\n            height: 100%;\r\n            -moz-user-select: -moz-none;\r\n            -webkit-user-select: none;\r\n            overflow: hidden;\r\n        }\r\n        .grid-data {\r\n            overflow: hidden;\r\n        }\r\n        .grid-row {\r\n            box-sizing: border-box;\r\n            border-bottom: 1px solid #e0e0e0;\r\n            background-color: #fff;\r\n            position: relative;\r\n            -webkit-user-select: none;\r\n        }\r\n        .grid-row:hover {\r\n            background-color: #eeeeee;\r\n            cursor: pointer;\r\n        }\r\n        .grid-cell {\r\n            border-right: none;\r\n            color: #454545;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            padding-left: 6px;\r\n            padding-right: 6px;\r\n            height: 100%;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            font-size: 13px;\r\n            box-sizing: border-box;\r\n        }\r\n        .actions-bar {\r\n            /*border-top: 1px solid #cecece;*/\r\n            border-bottom: 1px solid #e0e0e0;\r\n            clear: both;\r\n            /*margin-top: 90px;*/\r\n            height: 28px;\r\n            background: whitesmoke;\r\n            color: #494949;\r\n            font-family: Arial, sans-serif;\r\n            font-size: 13px;\r\n            padding-left: 15px;\r\n            line-height: 25px;\r\n        }\r\n        .gantt-tree-content {\r\n            padding-left: 15px;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class GanttActivityComponent implements OnInit, DoCheck {\r\n    @Input() project: Project;\r\n    @Input() options: IGanttOptions;\r\n\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onPopoverOpen: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    private start: Date;\r\n    private end: Date;\r\n    private timeScale: any;\r\n\r\n    private scale: IScale = {\r\n        start: null,\r\n        end: null\r\n    };\r\n\r\n    private activityContainerSizes: any;\r\n\r\n    containerHeight: any;\r\n    containerWidth: any;\r\n\r\n    ganttActivityHeight: any;\r\n    ganttActivityWidth: any;\r\n\r\n    dimensions = {\r\n        height: 0,\r\n        width: 0\r\n    };\r\n\r\n    gridColumns: IGridColumn[] = [\r\n        { name: '', left: 0, width: 16 },\r\n        { name: 'Zadanie', left: 0, width: 330 }\r\n    ];\r\n\r\n    constructor(\r\n        public elem: ElementRef,\r\n        public ganttService: GanttService) {\r\n    }\r\n\r\n    doWheel(event, elem: HTMLElement) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        // chome\r\n        if (event.wheelDelta) {\r\n            if ((event.wheelDelta || event.detail) > 0) {\r\n                elem.scrollLeft -= 100;\r\n            } else {\r\n                elem.scrollLeft += 100;\r\n            }\r\n        // firefox\r\n        } else {\r\n            if (event.deltaY > 0) {\r\n                elem.scrollLeft += 100;\r\n            } else {\r\n                elem.scrollLeft -= 100;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        // Cache the project data and only work with that. Only show parent tasks by default\r\n        this.ganttService.TASK_CACHE = this.project.tasks;\r\n        this.ganttService.TIME_SCALE = this.ganttService.calculateScale(this.options.scale.start, this.options.scale.end);\r\n\r\n        this.start = this.options.scale.start;\r\n        this.end = this.options.scale.end;\r\n        this.containerWidth = this.calculateContainerWidth();\r\n        this.containerHeight = this.calculateContainerHeight();\r\n        this.activityContainerSizes = this.ganttService.calculateActivityContainerDimensions();\r\n\r\n        this.gridColumns = this.options.gridColumns ? this.options.gridColumns : this.gridColumns;\r\n\r\n        // important that these are called last as it relies on values calculated above.\r\n        this.setScale();\r\n        this.setDimensions();\r\n        this.setSizes();\r\n    }\r\n\r\n    /** Custom model check */\r\n    ngDoCheck() {\r\n        // do a check to see whether any new tasks have been added. If the task is a child then push into array if tree expanded?\r\n        this.ganttService.doTaskCheck(this.project.tasks, this.options.scale);\r\n    }\r\n\r\n    /** On vertical scroll set the scroll top of grid and activity  */\r\n    onVerticalScroll(verticalScroll: any, ganttGrid: any, ganttActivityArea: any): void {\r\n        this.ganttService.scrollTop(verticalScroll, ganttGrid, ganttActivityArea);\r\n    }\r\n\r\n    gridRowClick(task) {\r\n        try {\r\n            this.onGridRowClick.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    popoverOpen(task) {\r\n        try {\r\n            this.onPopoverOpen.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    /** On resize of browser window dynamically adjust gantt activity height and width */\r\n    onResize(event: any): void {\r\n        const activityContainerSizes = this.ganttService.calculateActivityContainerDimensions();\r\n        this.ganttActivityHeight = activityContainerSizes.height + 'px';\r\n        this.ganttActivityWidth = activityContainerSizes.width;\r\n    }\r\n\r\n    setScale() {\r\n        this.scale.start = this.start;\r\n        this.scale.end = this.end;\r\n    }\r\n\r\n    setDimensions() {\r\n        this.dimensions.height = this.containerHeight;\r\n        this.dimensions.width = this.containerWidth;\r\n    }\r\n\r\n    setGridRowStyle(): any {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px',\r\n            'line-height': this.ganttService.rowHeight + 'px'\r\n        };\r\n    }\r\n\r\n    setGridScaleStyle() {\r\n        const height = this.ganttService.rowHeight + 30;\r\n        return {\r\n            'height': height + 'px',\r\n            'line-height': height + 'px'\r\n        };\r\n    }\r\n\r\n    calculateColumnsWidth() {\r\n        const ganttActivityWidth = this.gridColumns.map(column => { return column.width }).reduce((pv, cv) => pv + cv, 0) + 1;\r\n        return `calc(100% - ${(ganttActivityWidth)}px)`;\r\n    }\r\n\r\n    private calculateContainerHeight(): number {\r\n        return this.ganttService.TASK_CACHE.length * this.ganttService.rowHeight;\r\n    }\r\n\r\n    private calculateContainerWidth(): number {\r\n        return this.ganttService.TIME_SCALE.length * this.ganttService.cellWidth + this.ganttService.cellWidth;\r\n    }\r\n\r\n    private setSizes(): void {\r\n        this.ganttActivityHeight = this.activityContainerSizes.height + 'px';\r\n        this.ganttActivityWidth = this.activityContainerSizes.width;\r\n    }\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { NgStyle } from '@angular/common';\r\nimport { GanttService } from './shared/services/gantt.service';\r\nimport { IGanttOptions, Project } from './shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'gantt',\r\n    template: `\r\n        <div [ngStyle]=\"{ 'width': '100%' }\">\r\n            <div class=\"gantt-container\" (window:resize)=\"onResize($event)\">\r\n                <!--<gantt-header [name]=\"_project.name\" [startDate]=\"_project.startDate\"></gantt-header>-->\r\n                <gantt-activity [project]=\"_project\" [options]=\"_options\" (onGridRowClick)=\"gridRowClicked($event)\" (onPopoverOpen)=\"popoverOpened($event)\"></gantt-activity>\r\n                <!--<gantt-footer [project]=\"_project\"></gantt-footer>-->\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-container {\r\n            font-family: Arial;\r\n            font-size: 13px;\r\n            border: 1px solid #cecece;\r\n            position: relative;\r\n            white-space: nowrap;\r\n            margin-top: 0px;\r\n        }\r\n    `],\r\n    providers: []\r\n})\r\nexport class GanttComponent implements OnInit {\r\n    _project: Project;\r\n    _options: IGanttOptions;\r\n\r\n    @Input()\r\n    set project(project: any) {\r\n        if (project) {\r\n            this._project = project;\r\n        } else {\r\n            this.setDefaultProject();\r\n        }\r\n    }\r\n    get project() { return this._project; }\r\n\r\n    @Input()\r\n    set options(options: any) {\r\n        if (options.scale) {\r\n            this._options = options;\r\n        } else {\r\n            this.setDefaultOptions();\r\n        }\r\n    }\r\n    get options() { return this._options; }\r\n\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onPopoverOpen: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    ganttContainerWidth: number;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    setSizes(): void {\r\n        this.ganttContainerWidth = this.ganttService.calculateContainerWidth();\r\n    }\r\n\r\n    setDefaultOptions() {\r\n        const scale = this.ganttService.calculateGridScale(this._project.tasks);\r\n        const gridColumns = [\r\n            { name: '', left: 0, width: 16 },\r\n            { name: 'Zadanie', left: 0, width: 330 }\r\n        ];\r\n\r\n        this._options = {\r\n            scale,\r\n            gridColumns\r\n        };\r\n    }\r\n\r\n    setDefaultProject() {\r\n        this._project = {\r\n            name: '',\r\n            startDate: null,\r\n            tasks: []\r\n        };\r\n    }\r\n\r\n    gridRowClicked(task: any) {\r\n        this.onGridRowClick.emit(task);\r\n    }\r\n\r\n    popoverOpened(task: any) {\r\n        this.onPopoverOpen.emit(task);\r\n    }\r\n\r\n    onResize($event: any): void {\r\n        this.setSizes();\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'gantt-header',\r\n    template: `\r\n        <div class=\"gantt-header\">\r\n            <div class=\"gantt-header-title\">\r\n                <div style=\"flex:1\">{{ name }}</div>\r\n                <div>Started: {{ startDate | date: 'medium'}}</div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-header {\r\n            background-color: whitesmoke;\r\n            height: 40px;\r\n            border-bottom: 1px solid #e0e0e0;\r\n        }\r\n        .gantt-header-title {\r\n            padding: 12px;\r\n            display: flex;\r\n            flex-wrap:wrap;\r\n            font-family: Arial, Helvetica, sans-serif;\r\n            font-size: 16px;\r\n        }\r\n        .gantt-header-actions {\r\n            display: inline;\r\n            float: right;\r\n            padding: 6px;\r\n        }\r\n    `]\r\n})\r\nexport class GanttHeaderComponent {\r\n    @Input() name: any;\r\n    @Input() startDate: Date;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'gantt-footer',\r\n    template: `<div class=\"gantt-footer\"></div>`,\r\n    styles: [`\r\n        .gantt-footer {\r\n            background-color: whitesmoke;\r\n            height: 36px;\r\n            border-top: 1px solid #e0e0e0;\r\n        }\r\n        .gantt-footer-actions {\r\n            float: right;\r\n        }\r\n    `]\r\n})\r\nexport class GanttFooterComponent {\r\n    @Input() project: any;\r\n    constructor() { }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MdePopoverModule } from \"@material-extended/mde\";\r\n\r\nimport { GanttActivityComponent } from \"./gantt-activity.component\";\r\nimport { GanttTimeScaleComponent } from \"./time-scale/gantt-time-scale.component\";\r\nimport { GanttActivityBackgroundComponent } from \"./background/activity-background.component\";\r\nimport { GanttActivityBarsComponent } from \"./bars/activity-bars.component\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatCardModule, MdePopoverModule],\r\n  exports: [\r\n    GanttActivityComponent,\r\n    GanttTimeScaleComponent,\r\n    GanttActivityBackgroundComponent,\r\n    GanttActivityBarsComponent,\r\n  ],\r\n  declarations: [\r\n    GanttActivityComponent,\r\n    GanttTimeScaleComponent,\r\n    GanttActivityBackgroundComponent,\r\n    GanttActivityBarsComponent,\r\n  ],\r\n  providers: [],\r\n})\r\nexport class GanttActivityModule {}\r\n","import {\r\n  NgModule,\r\n  CUSTOM_ELEMENTS_SCHEMA,\r\n  ModuleWithProviders,\r\n} from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport { GanttComponent } from \"./gantt.component\";\r\nimport { GanttHeaderComponent } from \"./header/gantt-header.component\";\r\nimport { GanttFooterComponent } from \"./footer/gantt-footer.component\";\r\nimport { GanttService } from \"./shared/services/gantt.service\";\r\nimport { GanttActivityModule } from \"./activity/gantt-activity.module\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, GanttActivityModule],\r\n  exports: [GanttComponent],\r\n  declarations: [GanttComponent, GanttHeaderComponent, GanttFooterComponent],\r\n  providers: [GanttService],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class GanttModule {\r\n  static forRoot(): ModuleWithProviders<GanttModule> {\r\n    return {\r\n      ngModule: GanttModule,\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of gantt\r\n */\r\n\r\nexport * from \"./lib/shared/interfaces\";\r\nexport * from \"./lib/gantt.component\";\r\nexport * from \"./lib/gantt.module\";\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵelement","i0.ɵɵelementContainer","i0.ɵɵlistener","i0.ɵɵtextInterpolate2","i0.ɵɵstyleProp","i0.ɵɵtextInterpolate1"],"mappings":"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"}