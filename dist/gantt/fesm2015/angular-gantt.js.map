{"version":3,"file":"angular-gantt.js.map","sources":["ng://angular-gantt/lib/shared/interfaces.ts","ng://angular-gantt/lib/shared/services/gantt-config.service.ts","ng://angular-gantt/lib/shared/pipes/groupBy.pipe.ts","ng://angular-gantt/lib/shared/services/gantt.service.ts","ng://angular-gantt/lib/gantt.component.ts","ng://angular-gantt/lib/header/gantt-header.component.ts","ng://angular-gantt/lib/footer/gantt-footer.component.ts","ng://angular-gantt/lib/activity/gantt-activity.component.ts","ng://angular-gantt/lib/activity/time-scale/gantt-time-scale.component.ts","ng://angular-gantt/lib/activity/background/activity-background.component.ts","ng://angular-gantt/lib/activity/bars/activity-bars.component.ts","ng://angular-gantt/lib/activity/gantt-activity.module.ts","ng://angular-gantt/lib/gantt.module.ts"],"sourcesContent":["export interface Project {\r\n    id?: string;\r\n    name: string;\r\n    startDate?: Date;\r\n    tasks: Task[];\r\n}\r\n\r\nexport interface Task {\r\n    id: string;\r\n    treePath: string;\r\n    parentId: string;\r\n    name: string;\r\n    resource?: string;\r\n    start: Date;\r\n    end?: Date;\r\n    percentComplete?: number;\r\n    status?: string;\r\n}\r\n\r\nexport interface IGanttOptions {\r\n    scale?: IScale;\r\n    zooming?: string;\r\n}\r\n\r\nexport interface IScale {\r\n    start?: Date;\r\n    end?: Date;\r\n}\r\n\r\nexport interface IBarStyle {\r\n    status: string;\r\n    backgroundColor: string;\r\n    border: string;\r\n    progressBackgroundColor: string;\r\n}\r\n\r\nexport enum Zooming {\r\n    hours,\r\n    days,\r\n    weeks\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GanttConfig {\r\n    public cellWidth: number = 76;\r\n    public rowHeight: number = 25;\r\n    public activityHeight: number = 300;\r\n    public barHeight = 20;\r\n    public barLineHeight = 20;\r\n    public barMoveable = false;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n/*\r\n * Group the array by given function\r\n * Takes an array argument that defaults to 1.\r\n * Usage:\r\n *   array | groupBy:func()\r\n * Example:\r\n *   {{ [ { id: '1'}] |  groupBy: }}\r\n *   formats to: []\r\n*/\r\n@Pipe({name: 'groupBy'})\r\nexport class GroupByPipe implements PipeTransform {\r\n  transform(array: any[], f: any): any[] {\r\n      var groups = {};\r\n      array.forEach((o: any) => {\r\n        var group = JSON.stringify(f(o));\r\n\r\n        groups[group] = groups[group] || [];\r\n        groups[group].push(o);\r\n      });\r\n      return Object.keys(groups).map((group: any) => {\r\n          return groups[group];\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { GanttConfig } from './gantt-config.service';\r\nimport { IBarStyle, Task, IScale, Zooming } from '../interfaces';\r\nimport { GroupByPipe } from '../../shared/pipes/groupBy.pipe';\r\n\r\n@Injectable()\r\nexport class GanttService {\r\n    public rowHeight: number = 0;\r\n    public hourCellWidth: number = 60; // change to 60 so minutes can been seen more easily\r\n    public hoursCellWidth: number = this.hourCellWidth * 25;\r\n    public cellWidth: number = 0;\r\n    public windowInnerWidth: number = 0;\r\n    public activityHeight: number = 0;\r\n    public barHeight: number = 0;\r\n    public barLineHeight: number = 0;\r\n    public barTop: number = 0;\r\n    public barMoveable: boolean = false;\r\n    public gridWidth: number = 560;\r\n    private barStyles: IBarStyle[] = [\r\n        { status: \"information\", backgroundColor: \"rgb(18,195, 244)\", border: \"1px solid #2196F3\", progressBackgroundColor: \"#2196F3\" },\r\n        { status: \"warning\", backgroundColor: \"#FFA726\", border: \"1px solid #EF6C00\", progressBackgroundColor: \"#EF6C00\" },\r\n        { status: \"error\", backgroundColor: \"#EF5350\", border: \"1px solid #C62828\", progressBackgroundColor: \"#C62828\" },\r\n        { status: \"completed\", backgroundColor: \"#66BB6A\", border: \"1px solid #2E7D32\", progressBackgroundColor: \"#2E7D32\" }\r\n    ];\r\n    public TASK_CACHE: any[];\r\n    public TIME_SCALE: any[];\r\n\r\n    constructor() {\r\n        let _ganttConfig = new GanttConfig();\r\n\r\n        this.rowHeight = _ganttConfig.rowHeight;\r\n        this.cellWidth = _ganttConfig.cellWidth;\r\n        this.activityHeight = _ganttConfig.activityHeight;\r\n        this.barHeight = _ganttConfig.barHeight;\r\n        this.barLineHeight = _ganttConfig.barLineHeight;\r\n        this.barTop = _ganttConfig.rowHeight;\r\n        this.barMoveable = _ganttConfig.barMoveable;\r\n    }\r\n\r\n    private calculateBarWidth(start: Date, end: Date, hours?: boolean): number {\r\n        if (typeof start === \"string\") {\r\n            start = new Date(start);\r\n        }\r\n\r\n        if (typeof end === \"string\") {\r\n            end = new Date(end);\r\n        }\r\n\r\n        let days = this.calculateDiffDays(start, end);\r\n        let width: number = days * this.cellWidth + days;\r\n\r\n        if (hours) {\r\n            width = days * this.hourCellWidth * 24 + days * 24;\r\n        }\r\n\r\n        return width;\r\n    }\r\n\r\n    private calculateBarLeft(start: Date, scale: any[], hours?: boolean): number {\r\n        var left: number = 0;\r\n        var hoursInDay: number = 24;\r\n\r\n        if (start != null) {\r\n            if (typeof start === \"string\") {\r\n                start = new Date();\r\n            }\r\n\r\n            for (var i = 0; i < scale.length; i++) {\r\n                if (start.getDate() === scale[i].getDate()) {\r\n                    if (hours) {\r\n                        left = i * hoursInDay * this.hourCellWidth + hoursInDay * i + this.calculateBarLeftDelta(start, hours);\r\n                    } else {\r\n                        left = i * this.cellWidth + i + this.calculateBarLeftDelta(start, hours);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return left;\r\n    }\r\n\r\n    /** Calculates the height of the gantt grid, activity and vertical scroll */\r\n    public calculateGanttHeight(): string {\r\n        return `${this.TASK_CACHE.length * this.rowHeight + this.rowHeight * 3}px`;\r\n    }\r\n\r\n    private calculateBarLeftDelta(start: Date, hours?: boolean): number {\r\n        var offset: number = 0;\r\n        var hoursInDay: number = 24;\r\n        var minutesInHour: number = 60;\r\n        var secondsInHour: number = 3600;\r\n        var startHours: number = start.getHours() + start.getMinutes() / minutesInHour + start.getSeconds() / secondsInHour;\r\n\r\n        if (hours) {\r\n            offset = this.hoursCellWidth / hoursInDay * startHours - startHours;\r\n        } else {\r\n            offset = this.cellWidth / hoursInDay * startHours;\r\n        }\r\n        return offset;\r\n    }\r\n\r\n    public isParent(treePath: string): boolean {\r\n\r\n        try {\r\n            var depth = treePath.split('/').length;\r\n\r\n            if (depth === 1) {\r\n                return true;\r\n            }\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public isChild(treePath: string) {\r\n        if (this.isParent(treePath)) {\r\n            return '0px';\r\n        }\r\n        return '20px';\r\n    }\r\n\r\n    /** Calculate the bar styles */\r\n    public calculateBar(task: any, index: number, scale: any, hours?: boolean) {\r\n        var barStyle = this.getBarStyle(task.status);\r\n        return {\r\n            'top': this.barTop * index + 2 + 'px',\r\n            'left': this.calculateBarLeft(task.start, scale, hours) + 'px',\r\n            'height': this.barHeight + 'px',\r\n            'line-height': this.barLineHeight + 'px',\r\n            'width': this.calculateBarWidth(task.start, task.end, hours) + 'px',\r\n            'background-color': barStyle[\"background-color\"],\r\n            'border': barStyle[\"border\"]\r\n        }\r\n    }\r\n\r\n    /** Get the bar style based on task status */\r\n    private getBarStyle(taskStatus: string = \"\"): any {\r\n        var style = {};\r\n\r\n        try {\r\n            taskStatus = taskStatus.toLowerCase();\r\n        } catch (err) {\r\n            taskStatus = \"\";\r\n        }\r\n\r\n        switch (taskStatus) {\r\n            case \"information\":\r\n                style[\"background-color\"] = this.barStyles[0].backgroundColor;\r\n                style[\"border\"] = this.barStyles[0].border;\r\n                break;\r\n            case \"warning\":\r\n                style[\"background-color\"] = this.barStyles[1].backgroundColor;\r\n                style[\"border\"] = this.barStyles[1].border;\r\n                break;\r\n            case \"error\":\r\n                style[\"background-color\"] = this.barStyles[2].backgroundColor;\r\n                style[\"border\"] = this.barStyles[2].border;\r\n                break;\r\n            case \"completed\":\r\n                style[\"background-color\"] = this.barStyles[3].backgroundColor;\r\n                style[\"border\"] = this.barStyles[3].border;\r\n                break;\r\n            default:\r\n                style[\"background-color\"] = \"rgb(18,195, 244)\";\r\n                style[\"border\"] = \"1px solid #2196F3\";\r\n                break;\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n    /** Get the progresss bar background colour based on task status */\r\n    public getBarProgressStyle(taskStatus: string = \"\"): any {\r\n        var style = {};\r\n\r\n        try {\r\n            taskStatus = taskStatus.toLowerCase();\r\n        } catch (err) {\r\n            taskStatus = \"\";\r\n        }\r\n\r\n        switch (taskStatus) {\r\n            case \"information\":\r\n                style[\"background-color\"] = this.barStyles[0].progressBackgroundColor;\r\n                break;\r\n            case \"warning\":\r\n                style[\"background-color\"] = this.barStyles[1].progressBackgroundColor;\r\n                break;\r\n            case \"error\":\r\n                style[\"background-color\"] = this.barStyles[2].progressBackgroundColor;\r\n                break;\r\n            case \"completed\":\r\n                style[\"background-color\"] = this.barStyles[3].progressBackgroundColor;\r\n                break;\r\n            default:\r\n                style[\"background-color\"] = this.barStyles[0].progressBackgroundColor;\r\n                break;\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n    /** Calculates the bar progress width in pixels given task percent complete */\r\n    public calculateBarProgress(width: number, percent: number): string {\r\n        if (typeof percent === \"number\") {\r\n            if (percent > 100) {\r\n                percent = 100;\r\n            }\r\n            let progress: number = (width / 100) * percent - 2;\r\n\r\n            return `${progress}px`;\r\n        }\r\n        return `${0}px`;\r\n    }\r\n\r\n    /** Calculates the difference in two dates and returns number of days */\r\n    public calculateDiffDays(start: Date, end: Date): number {\r\n        try {\r\n            let oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds /ms\r\n            let diffDays = Math.abs((start.getTime() - end.getTime()) / (oneDay));\r\n            let days = diffDays; // don't use Math.round as it will draw an incorrect bar\r\n\r\n            return days;\r\n        } catch (err) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /** Calculates the difference in two dates and returns number of hours */\r\n    public calculateDuration(task: any): string {\r\n        try {\r\n            if (task.start != null && task.end != null) {\r\n                let oneHour = 60 * 60 * 1000;\r\n                let diffHours = (Math.abs((task.start.getTime() - task.end.getTime()) / oneHour));\r\n                let duration = diffHours;\r\n\r\n                if (duration > 24) {\r\n                    return `${Math.round(duration / 24)} day(s)`; // duration in days\r\n                } else if (duration > 1) {\r\n                    return `${Math.round(duration)} hr(s)`; // duration in hours\r\n                } else {\r\n                    let minutes = duration * 60;\r\n\r\n                    if (minutes < 1) {\r\n                        return `${Math.round(minutes * 60)} second(s)`; // duration in seconds\r\n                    }\r\n                    return `${Math.round(minutes)} min(s)` // duration in minutes\r\n                }\r\n            }\r\n\r\n            return '';\r\n        } catch (err) {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    calculateTotalDuration(tasks: any[]): string {\r\n        try {\r\n            tasks = tasks.filter(t => t.parentId === t.id); // only calculate total duration with parent tasks\r\n\r\n            let totalHours = 0;\r\n            let oneHour = 60 * 60 * 1000;\r\n            for (let i = 0; i < tasks.length; i++) {\r\n                let start = tasks[i].start;\r\n                let end = tasks[i].end;\r\n\r\n                if (start != null && end != null) {\r\n                    let duration = Math.abs(tasks[i].end.getTime() - tasks[i].start.getTime()) / oneHour; // duration in hours\r\n                    totalHours += duration;\r\n                }\r\n            }\r\n\r\n            if (totalHours === 0) {\r\n                return '';\r\n            }\r\n\r\n            if (totalHours > 24) {\r\n                return `${Math.round(totalHours / 24)} day(s)`; // duration in days\r\n            } else if (totalHours > 1) {\r\n                return `${Math.round(totalHours)} hr(s)`; // duration in hours\r\n            } else {\r\n                let minutes = totalHours * 60;\r\n\r\n                if (minutes < 1) {\r\n                    return `${Math.round(minutes * 60)} second(s)`; // duration in seconds\r\n                }\r\n                return `${Math.round(minutes)} min(s)` // duration in minutes\r\n            }\r\n        } catch (err) {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /** Calculate the total percentage of a group of tasks */\r\n    calculateTotalPercentage(node: any): number {\r\n        var totalPercent: number = 0;\r\n        var children = node.children;\r\n\r\n        if (children.length > 0) {\r\n            children.forEach((child: any) => {\r\n                totalPercent += isNaN(child.percentComplete) ? 0 : child.percentComplete;\r\n            });\r\n\r\n            return Math.ceil(totalPercent / children.length);\r\n        } else {\r\n            return isNaN(node.percentComplete) ? 0 : node.percentComplete;\r\n        }\r\n    }\r\n\r\n    /** Calculate the total percent of the parent task */\r\n    calculateParentTotalPercentage(parent: any, tasks: any[]) {\r\n        var children = tasks.filter((task:any) => {\r\n            return task.parentId === parent.id && task.id != parent.id\r\n        }); // get only children tasks ignoring parent.\r\n\r\n        var totalPercent: number = 0;\r\n\r\n        if (children.length > 0) {\r\n            children.forEach((child:any) => {\r\n                totalPercent += isNaN(child.percentComplete) ? 0 : child.percentComplete;\r\n            });\r\n\r\n            return Math.ceil(totalPercent / children.length);\r\n        } else {\r\n            return isNaN(parent.percentComplete) ? 0 : parent.percentComplete;\r\n        }\r\n    }\r\n\r\n    /** Calculate the gantt scale range given the start and end date of tasks*/\r\n    public calculateScale(start: Date = new Date(), end: Date = this.addDays(start, 7)) {\r\n        let scale: any[] = [];\r\n\r\n        try {\r\n            while (start.getTime() <= end.getTime()) {\r\n                scale.push(start);\r\n                start = this.addDays(start, 1);\r\n            }\r\n            return scale;\r\n\r\n        } catch (err) {\r\n            return scale;\r\n        }\r\n    }\r\n\r\n    /** Determines whether given date is a weekend */\r\n    public isDayWeekend(date: Date): boolean {\r\n        let day = date.getDay();\r\n\r\n        if (day === 6 || day === 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /** Add x number of days to a date object */\r\n    public addDays(date: Date, days: number): Date {\r\n        let result = new Date(date);\r\n        result.setDate(result.getDate() + days);\r\n        return result;\r\n    }\r\n\r\n    //** Remove x number of days from a date object */\r\n    public removeDays(date: Date, days: number): Date {\r\n        let result = new Date(date);\r\n        result.setDate(result.getDate() - days);\r\n        return result;\r\n    }\r\n\r\n    /** Calculates the grid scale for gantt based on tasks start and end dates */\r\n    public calculateGridScale(tasks: Task[]): IScale {\r\n        var start: Date;\r\n        var end: Date;\r\n        var dates = tasks.map((task:any) => {\r\n            return {\r\n                start: new Date(task.start),\r\n                end: new Date(task.end)\r\n            }\r\n        });\r\n\r\n        start = new Date(Math.min.apply(null, dates.map(function (t) {\r\n            return t.start;\r\n        })));\r\n\r\n        end = new Date(Math.max.apply(null, dates.map(function (t) {\r\n            return t.end;\r\n        })));\r\n\r\n        return {\r\n            start: start,\r\n            end: end\r\n        }\r\n    }\r\n\r\n    /** Create an hours array for use in time scale component */\r\n    public getHours(cols: number): string[] {\r\n        var hours: string[] = [];\r\n\r\n        while (hours.length <= cols * 24) {\r\n            for (var i = 0; i <= 23; i++) {\r\n                if (i < 10) {\r\n                    hours.push('0' + i.toString());\r\n                } else {\r\n                    hours.push(i.toString());\r\n                }\r\n            }\r\n        }\r\n\r\n        return hours;\r\n    }\r\n\r\n    public getComputedStyle(element: any, attribute: any) {\r\n        return parseInt(document.defaultView.getComputedStyle(element)[attribute], 10);\r\n    }\r\n\r\n    //TODO(dale): determine whether this is needed\r\n    public calculateContainerWidth(): number {\r\n        this.windowInnerWidth = window.innerWidth;\r\n        let containerWidth = (innerWidth - 18);\r\n\r\n        return containerWidth;\r\n    }\r\n\r\n    public calculateActivityContainerDimensions(): any {\r\n        var scrollWidth: number = 18;\r\n        this.windowInnerWidth = window.innerWidth;\r\n        let width = this.windowInnerWidth - this.gridWidth - scrollWidth;\r\n\r\n        return { height: this.activityHeight, width: width };\r\n    }\r\n\r\n    /** Set the vertical scroll top positions for gantt */\r\n    public scrollTop(verticalScrollElem: any, ganttGridElem: any, ganttActivityAreaElem: any) {\r\n        let verticalScrollTop = verticalScrollElem.scrollTop;\r\n        let scroll = this.setScrollTop;\r\n\r\n        // debounce\r\n        if (verticalScrollTop !== null && verticalScrollTop !== undefined) {\r\n            setTimeout(function() {\r\n                scroll(verticalScrollTop, ganttActivityAreaElem);\r\n                scroll(ganttActivityAreaElem.scrollTop, ganttGridElem);\r\n\r\n            }, 50);\r\n        }\r\n    }\r\n\r\n    /** Group data by id , only supports one level*/\r\n    public groupData(tasks: any): any {\r\n        var merged:any = [];\r\n        var groups:any = new GroupByPipe().transform(tasks, (task:any) => {\r\n            return [task.treePath.split('/')[0]]\r\n        });\r\n        return merged.concat.apply([], groups);\r\n    }\r\n\r\n    /** Create tree of data */\r\n    public transformData(input: any): any {\r\n        var output:any = [];\r\n        for (var i = 0; i < input.length; i++) {\r\n            var chain:any = input[i].id.split('/');\r\n            var currentNode:any = output;\r\n            for (var j = 0; j < chain.length; j++) {\r\n                var wantedNode:any = chain[j];\r\n                var lastNode:any = currentNode;\r\n                for (var k = 0; k < currentNode.length; k++) {\r\n                    if (currentNode[k].name == wantedNode) {\r\n                        currentNode = currentNode[k].children;\r\n                        break;\r\n                    }\r\n                }\r\n                // If we couldn't find an item in this list of children\r\n                // that has the right name, create one:\r\n                if (lastNode == currentNode) {\r\n                    //TODO(dale): determine way to show percent complete on correct child  \r\n                    var newNode:any = currentNode[k] = {\r\n                        name: wantedNode,\r\n                        percentComplete: input[i].percentComplete,\r\n                        start: input[i].start,\r\n                        end: input[i].end,\r\n                        children: []\r\n                    };\r\n                    currentNode = newNode.children;\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n\r\n    /** Checks whether any new data needs to be added to task cache  */\r\n    public doTaskCheck(tasks: any[], treeExpanded: boolean): boolean {\r\n        var cachedTaskIds = this.TASK_CACHE.map((task:any) => { return task.id });\r\n        var itemsToCache: any[] = [];\r\n\r\n        if (treeExpanded) {\r\n            // push children and parent tasks that are not cached\r\n            tasks.filter((task:any) => {\r\n                return cachedTaskIds.indexOf(task.id) === -1\r\n            }).forEach((task:any) => {\r\n                itemsToCache.push(task);\r\n            })\r\n        } else {\r\n            // only look at tasks that are not cached\r\n            tasks.filter((task:any) => { \r\n                return cachedTaskIds.indexOf(task.id) === -1 && task.treePath.split('/').length === 1 \r\n            }).forEach((task:any) => {\r\n                itemsToCache.push(task);\r\n            });\r\n        }\r\n\r\n        itemsToCache.forEach((item:any) => {\r\n            this.TASK_CACHE.push(item);\r\n        });\r\n\r\n        if (itemsToCache.length > 0) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /** Set a id prefix so CSS3 query selector can work with ids that contain numbers */\r\n    public setIdPrefix(id: string): string {\r\n        return `_${id}`;\r\n    }\r\n\r\n    // /** Remove the id prefix to allow querying of data */\r\n    // public removeIdPrefix(id: string): string {\r\n    //     return id.substring(1, id.length - 1);\r\n    // }\r\n\r\n    /** Set the scroll top property of a native DOM element */\r\n    private setScrollTop(scrollTop: number, element: any): void {\r\n        if (element !== null && element !== undefined) {\r\n            element.scrollTop = scrollTop;\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { NgStyle } from '@angular/common';\r\nimport { GanttService } from './shared/services/gantt.service';\r\nimport { IGanttOptions, Project } from './shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'gantt',\r\n    template: `\r\n        <div style=\"width: 100%\">\r\n            <div class=\"gantt_container\" (window:resize)=\"onResize($event)\">\r\n                <gantt-header [name]=\"_project.name\" [startDate]=\"_project.startDate\"></gantt-header>\r\n                <gantt-activity [project]=\"_project\" [options]=\"_options\" (onGridRowClick)=\"gridRowClicked($event)\"></gantt-activity>\r\n                <gantt-footer [project]=\"_project\"></gantt-footer>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .gantt_container {\r\n            font-family: Arial;\r\n            font-size: 13px;\r\n            border: 1px solid #cecece;\r\n            position: relative;\r\n            white-space: nowrap;\r\n            margin-top: 0px;\r\n        }\r\n    `],\r\n    providers: []\r\n})\r\nexport class GanttComponent implements OnInit {\r\n    _project: Project;\r\n    _options: IGanttOptions;\r\n\r\n    //TODO(dale): this may be causing an issue in the tree builder?\r\n    @Input()\r\n    set project(project: any) {\r\n        if (project) {\r\n            this._project = project;\r\n        } else {\r\n            this.setDefaultProject();\r\n        }\r\n    }\r\n    get project() { return this._project; }\r\n\r\n    @Input()\r\n    set options(options: any) {\r\n        if (options.scale) {\r\n            this._options = options;\r\n        } else {\r\n            this.setDefaultOptions();\r\n        }\r\n    }\r\n    get options() { return this._options; }\r\n\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    private ganttContainerWidth: number;\r\n\r\n    constructor(private ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n\r\n     }\r\n\r\n    setSizes(): void {\r\n        this.ganttContainerWidth = this.ganttService.calculateContainerWidth();\r\n    }\r\n\r\n    setDefaultOptions() {\r\n        var scale = this.ganttService.calculateGridScale(this._project.tasks);\r\n\r\n        this._options = {\r\n            scale: scale\r\n        };\r\n    }\r\n\r\n    setDefaultProject() {\r\n        this._project = {\r\n            id: '',\r\n            name: '',\r\n            startDate: null,\r\n            tasks: []\r\n        };\r\n    }\r\n\r\n    gridRowClicked(task: any) {\r\n        this.onGridRowClick.emit(task);\r\n    }\r\n\r\n    onResize($event: any): void {\r\n        this.setSizes();\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'gantt-header',\r\n    template: `\r\n        <div class=\"gantt-header\">\r\n            <div class=\"gantt-header-title\">\r\n                <div style=\"flex:1\">{{ name }}</div>\r\n                <div>Started: {{ startDate | date: 'medium'}}</div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-header {\r\n            background-color: whitesmoke;\r\n            height: 40px;\r\n            border-bottom: 1px solid #e0e0e0;\r\n        }\r\n\r\n        .gantt-header-title {\r\n            padding: 12px;\r\n            display: flex;\r\n            flex-wrap:wrap;\r\n            font-family: Arial, Helvetica, sans-serif;\r\n            font-size: 16px;\r\n        }\r\n\r\n        .gantt-header-actions {\r\n            display: inline;\r\n            float: right;\r\n            padding: 6px;\r\n        }\r\n    `]\r\n})\r\nexport class GanttHeaderComponent {\r\n    @Input() name: any;\r\n    @Input() startDate: Date;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'gantt-footer',\r\n    template: `<div class=\"gantt-footer\"></div>`,\r\n    styles: [`\r\n        .gantt-footer {\r\n            background-color: whitesmoke;\r\n            height: 36px;\r\n            border-top: 1px solid #e0e0e0;\r\n        }\r\n\r\n        .gantt-footer-actions {\r\n            float: right;\r\n        }\r\n    `]\r\n})\r\nexport class GanttFooterComponent {\r\n    @Input() project: any;\r\n    constructor() { }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ElementRef, AfterViewInit, ViewChild, ChangeDetectionStrategy, OnChanges, DoCheck } from '@angular/core';\r\n\r\nimport { GanttService } from '../shared/services/gantt.service';\r\nimport { GanttConfig } from '../shared/services/gantt-config.service';\r\nimport { IGanttOptions, Zooming } from '../shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'gantt-activity',\r\n    template: `\r\n    <div class=\"actions-bar\">\r\n        <div style=\"float: right\"></div>\r\n    </div>\r\n    <div class=\"grid\" #ganttGrid [ngStyle]=\"{ 'height': ganttActivityHeight }\">\r\n    <div class=\"grid-scale\" [ngStyle]=\"setGridScaleStyle()\">\r\n        <div class=\"grid-head-cell\"\r\n            *ngFor=\"let column of gridColumns\" [style.width]=\"column.width + 'px'\"\r\n            [style.left]=\"column.left + 'px'\">\r\n\r\n            <label>\r\n                {{column.name}}\r\n            </label>\r\n        </div>\r\n    </div>\r\n    <div class=\"grid-data\"\r\n        #ganttGridData\r\n        [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight() }\">\r\n\r\n    <div #row\r\n        *ngFor=\"let data of ganttService.groupData(ganttService.TASK_CACHE)\"\r\n        (click)=\"toggleChildren(row, data)\" class=\"grid-row\"\r\n        [ngStyle]=\"setGridRowStyle(ganttService.isParent(data.treePath))\"\r\n        [attr.data-id]=\"ganttService.setIdPrefix(data.id)\"\r\n        [attr.data-isParent]=\"ganttService.isParent(data.treePath)\"\r\n        [attr.data-parentid]=\"ganttService.setIdPrefix(data.parentId)\">\r\n\r\n            <div class=\"grid-cell\"\r\n                [ngStyle]=\"{ 'width': gridColumns[1].width + 'px', 'padding-left': ganttService.isChild(data.treePath) }\">\r\n\r\n                <div class=\"gantt-tree-content\">{{data.name}}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <div class=\"gantt-activity\"\r\n        (window:resize)=\"onResize($event)\"\r\n        [ngStyle]=\"{ 'height': ganttActivityHeight, 'width': ganttActivityWidth + 36 + 'px'}\">\r\n\r\n        <time-scale [zoom]=\"zoom\"\r\n            [zoomLevel]=\"zoomLevel\"\r\n            [timeScale]=\"ganttService.TIME_SCALE\"\r\n            [dimensions]=\"dimensions\"></time-scale>\r\n        <div class=\"gantt-activity-area\"\r\n            #ganttActivityArea\r\n            [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight(), 'width': containerWidth + 'px'}\">\r\n\r\n            <activity-background [zoom]=\"zoom\"\r\n                [zoomLevel]=\"zoomLevel\"\r\n                [timeScale]=\"ganttService.TIME_SCALE\"\r\n                [tasks]=\"ganttService.TASK_CACHE\"></activity-background>\r\n            <activity-bars [zoom]=\"zoom\"\r\n                [zoomLevel]=\"zoomLevel\"\r\n                [timeScale]=\"ganttService.TIME_SCALE\"\r\n                [dimensions]=\"dimensions\"\r\n                [tasks]=\"ganttService.TASK_CACHE\"></activity-bars>\r\n        </div>\r\n    </div>\r\n    <div class=\"gantt-vertical-scroll\"\r\n        #verticalScroll\r\n        (scroll)=\"onVerticalScroll(verticalScroll, ganttGrid, ganttActivityArea)\"\r\n        [ngStyle]=\"{'display': activityActions.expanded === true ? 'none' : 'block' }\">\r\n\r\n        <div [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight() }\"></div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-activity {\r\n            /*overflow-x: hidden;*/\r\n            overflow-x: auto;\r\n            height: 250px;\r\n            overflow-y: hidden;\r\n            overflow-x: scroll;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            position:relative;\r\n        }\r\n        .gantt-activity-area {\r\n            position: relative;\r\n            overflow-x: hidden;\r\n            overflow-y: hidden;\r\n            -webkit-user-select: none;\r\n        }\r\n        .gantt-vertical-scroll {\r\n            background-color: transparent;\r\n            overflow-x: hidden;\r\n            overflow-y: scroll;\r\n            position: absolute;\r\n            right: 0;\r\n            display: block;\r\n            height: 283px;\r\n            width: 18px;\r\n            top: 70px;\r\n        }\r\n        .grid {\r\n            overflow-x: hidden;\r\n            overflow-y: hidden;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            border-right: 1px solid #cecece;\r\n        }\r\n        .grid-scale {\r\n            color: #6b6b6b;\r\n            font-size: 12px;\r\n            border-bottom: 1px solid #e0e0e0;\r\n            background-color: whitesmoke;\r\n        }\r\n        .grid-head-cell {\r\n            /*color: #a6a6a6;*/\r\n            border-top: none !important;\r\n            border-right: none !important;\r\n            line-height: inherit;\r\n            box-sizing: border-box;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            border-right: 1px solid #cecece;\r\n            /*text-align: center;*/\r\n            position: relative;\r\n            cursor: default;\r\n            height: 100%;\r\n            -moz-user-select: -moz-none;\r\n            -webkit-user-select: none;\r\n            overflow: hidden;\r\n        }\r\n        .grid-data {\r\n            overflow:hidden;\r\n        }\r\n        .grid-row {\r\n            box-sizing: border-box;\r\n            border-bottom: 1px solid #e0e0e0;\r\n            background-color: #fff;\r\n            position: relative;\r\n            -webkit-user-select: none;\r\n        }\r\n        .grid-row:hover {\r\n            background-color: #eeeeee;\r\n        }\r\n        .grid-cell {\r\n            border-right: none;\r\n            color: #454545;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            padding-left: 6px;\r\n            padding-right: 6px;\r\n            height: 100%;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            font-size: 13px;\r\n            box-sizing: border-box;\r\n        }\r\n        .actions-bar {\r\n            /*border-top: 1px solid #cecece;*/\r\n            border-bottom: 1px solid #e0e0e0;\r\n            clear: both;\r\n            /*margin-top: 90px;*/\r\n            height: 28px;\r\n            background: whitesmoke;\r\n            color: #494949;\r\n            font-family: Arial, sans-serif;\r\n            font-size: 13px;\r\n            padding-left: 15px;\r\n            line-height: 25px;\r\n        }\r\n        .gantt-tree-content {\r\n            padding-left:15px;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class GanttActivityComponent implements OnInit, DoCheck {\r\n    @Input() project: any;\r\n    @Input() options: any;\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    private upTriangle: string = '&#x25b2;' // BLACK UP-POINTING TRIANGLE\r\n    private downTriangle: string = '&#x25bc;'; // BLACK DOWN-POINTING TRIANGLE\r\n\r\n    zoom: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    activityActions = {\r\n        expanded: false,\r\n        expandedIcon: this.downTriangle\r\n    };\r\n\r\n    private timeScale: any;\r\n\r\n    private start: Date;\r\n    private end: Date;\r\n    containerHeight: any;\r\n    containerWidth: any;\r\n\r\n    private activityContainerSizes: any;\r\n\r\n    ganttActivityHeight: any;\r\n    ganttActivityWidth: any;\r\n\r\n    zoomLevel: string = Zooming[Zooming.hours];\r\n\r\n    treeExpanded = false;\r\n\r\n    private scale: any = {\r\n        start: null,\r\n        end: null\r\n    };\r\n\r\n    dimensions = {\r\n        height: 0,\r\n        width: 0\r\n    };\r\n\r\n    private data: any[] = [];\r\n\r\n    public gridColumns: any[] = [\r\n        { name: '', left: 0, width: 16 },\r\n        { name: 'Task', left: 20, width: 330 }\r\n    ];\r\n\r\n    constructor(\r\n        public elem: ElementRef,\r\n        public ganttService: GanttService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        // Cache the project data and only work with that. Only show parent tasks by default\r\n        this.ganttService.TASK_CACHE = this.project.tasks.slice(0).filter((item: any) => {\r\n            return item.treePath.split('/').length === 1;\r\n        });\r\n        this.ganttService.TIME_SCALE = this.ganttService.calculateScale(this.options.scale.start, this.options.scale.end);\r\n\r\n        this.zoomLevel = this.options.zooming;\r\n        this.start = this.options.scale.start;\r\n        this.end = this.options.scale.end;\r\n        this.containerWidth = this.calculateContainerWidth();\r\n        this.containerHeight = this.calculateContainerHeight();\r\n        this.activityContainerSizes = this.ganttService.calculateActivityContainerDimensions();\r\n\r\n        // important that these are called last as it relies on values calculated above.\r\n        this.setScale();\r\n        this.setDimensions();\r\n        this.setSizes();\r\n\r\n        this.expand(); // default to expanded\r\n    }\r\n\r\n    /** Custom model check */\r\n    ngDoCheck() {\r\n        // do a check to see whether any new tasks have been added. If the task is a child then push into array if tree expanded?\r\n        var tasksAdded = this.ganttService.doTaskCheck(this.project.tasks, this.treeExpanded);\r\n\r\n        // only force expand if tasks are added and tree is already expanded\r\n        if (tasksAdded && this.activityActions.expanded) {\r\n            this.expand(true);\r\n        }\r\n    }\r\n\r\n    /** On vertical scroll set the scroll top of grid and activity  */\r\n    onVerticalScroll(verticalScroll: any, ganttGrid: any, ganttActivityArea: any): void {\r\n        this.ganttService.scrollTop(verticalScroll, ganttGrid, ganttActivityArea);\r\n    }\r\n\r\n    /** Removes or adds children for given parent tasks back into DOM by updating TASK_CACHE */\r\n    toggleChildren(rowElem: any, task: any) {\r\n        try {\r\n            let isParent: boolean = \"true\" === rowElem.getAttribute('data-isparent');\r\n            let parentId: string = rowElem.getAttribute('data-parentid').replace(\"_\", \"\"); // remove id prefix\r\n            let children: any = document.querySelectorAll('[data-parentid=' + rowElem.getAttribute('data-parentid') + '][data-isparent=false]');\r\n\r\n            // use the task cache to allow deleting of items without polluting the project.tasks array\r\n            if (isParent) {\r\n                // remove children from the DOM as we don't want them if we are collapsing the parent\r\n                if (children.length > 0) {\r\n                    let childrenIds: any[] = this.ganttService.TASK_CACHE.filter((task: any) => {\r\n                        return task.parentId == parentId && task.treePath.split('/').length > 1;\r\n                    }).map((item: any) => { return item.id });\r\n\r\n                    childrenIds.forEach((item: any) => {\r\n                        var removedIndex = this.ganttService.TASK_CACHE.map((item: any) => { return item.id }).indexOf(item);\r\n\r\n                        this.ganttService.TASK_CACHE.splice(removedIndex, 1);\r\n                    });\r\n\r\n                    if (this.activityActions.expanded) {\r\n                        this.expand(true);\r\n                    }\r\n\r\n                } else {\r\n                    // CHECK the project cache to see if this parent id has any children\r\n                    // and if so push them back into array so DOM is updated\r\n                    let childrenTasks: any[] = this.project.tasks.filter((task: any) => {\r\n                        return task.parentId === parentId && task.treePath.split('/').length > 1;\r\n                    });\r\n\r\n                    childrenTasks.forEach((task: any) => {\r\n                        this.ganttService.TASK_CACHE.push(task);\r\n                    });\r\n\r\n                    if (this.activityActions.expanded) {\r\n                        this.expand(true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.onGridRowClick.emit(task);\r\n\r\n        } catch (err) { }\r\n    }\r\n\r\n    /** Removes or adds children tasks back into DOM by updating TASK_CACHE */\r\n    toggleAllChildren() {\r\n        try {\r\n            var children: any = document.querySelectorAll('[data-isparent=false]');\r\n            var childrenIds: string[] = Array.prototype.slice.call(children).map((item: any) => {\r\n                return item.getAttribute('data-id').replace(\"_\", \"\"); // remove id prefix\r\n            });\r\n\r\n            // push all the children array items into cache\r\n            if (this.treeExpanded) {\r\n                if (children.length > 0) {\r\n                    let childrenIds: string[] = this.ganttService.TASK_CACHE.filter((task: any) => {\r\n                        return task.treePath.split('/').length > 1;\r\n                    }).map((item: any) => { return item.id });\r\n\r\n                    childrenIds.forEach((item: any) => {\r\n                        var removedIndex = this.ganttService.TASK_CACHE.map((item: any) => { return item.id }).indexOf(item);\r\n                        this.ganttService.TASK_CACHE.splice(removedIndex, 1);\r\n                    });\r\n                }\r\n\r\n                this.treeExpanded = false;\r\n\r\n                if (this.activityActions.expanded) {\r\n                    this.expand(true);\r\n                }\r\n            } else {\r\n                // get all children tasks in project input\r\n                let childrenTasks: any[] = this.project.tasks.filter((task: any) => {\r\n                    return task.treePath.split('/').length > 1;\r\n                });\r\n\r\n                if (children.length > 0) {\r\n                    // filter out these children as they already exist in task cache\r\n                    childrenTasks = childrenTasks.filter((task: any) => {\r\n                        return childrenIds.indexOf(task.id) === -1;\r\n                    });\r\n                }\r\n\r\n                childrenTasks.forEach((task: any) => {\r\n                    this.ganttService.TASK_CACHE.push(task);\r\n                });\r\n\r\n                this.treeExpanded = true;\r\n\r\n                if (this.activityActions.expanded) {\r\n                    this.expand(true);\r\n                }\r\n            }\r\n        } catch (err) { }\r\n    }\r\n\r\n    /** On resize of browser window dynamically adjust gantt activity height and width */\r\n    onResize(event: any): void {\r\n        let activityContainerSizes = this.ganttService.calculateActivityContainerDimensions();\r\n        if (this.activityActions.expanded) {\r\n            this.ganttActivityHeight = this.ganttService.TASK_CACHE.length * this.ganttService.rowHeight + this.ganttService.rowHeight * 3 + 'px';\r\n        } else {\r\n            this.ganttActivityHeight = activityContainerSizes.height + 'px';;\r\n        }\r\n\r\n        this.ganttActivityWidth = activityContainerSizes.width;\r\n    }\r\n\r\n    setScale() {\r\n        this.scale.start = this.start;\r\n        this.scale.end = this.end;\r\n    }\r\n\r\n    setDimensions() {\r\n        this.dimensions.height = this.containerHeight;\r\n        this.dimensions.width = this.containerWidth;\r\n    }\r\n\r\n    setGridRowStyle(isParent: boolean): any {\r\n        if (isParent) {\r\n            return {\r\n                'height': this.ganttService.rowHeight + 'px',\r\n                'line-height': this.ganttService.rowHeight + 'px',\r\n                'font-weight': 'bold',\r\n                'cursor': 'pointer'\r\n            };\r\n        }\r\n\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px',\r\n            'line-height': this.ganttService.rowHeight + 'px'\r\n        };\r\n    }\r\n\r\n    /** Set the zoom level e.g hours, days */\r\n    zoomTasks(level: string) {\r\n        this.zoomLevel = level;\r\n        this.zoom.emit(this.zoomLevel);\r\n        this.containerWidth = this.calculateContainerWidth();\r\n        this.setDimensions();\r\n        document.querySelector('.gantt_activity').scrollLeft = 0 // reset scroll left, replace with @ViewChild?\r\n    }\r\n\r\n    /** Expand the gantt grid and activity area height */\r\n    expand(force?: boolean): void {\r\n        var verticalScroll = document.querySelector('.gantt_vertical_scroll');\r\n        var ganttActivityHeight: string = `${this.ganttService.TASK_CACHE.length * this.ganttService.rowHeight + this.ganttService.rowHeight * 3}px`;\r\n\r\n        if (force && this.activityActions.expanded) {\r\n            this.ganttActivityHeight = ganttActivityHeight;\r\n        } else if (this.activityActions.expanded) {\r\n            this.activityActions.expanded = false;\r\n            this.activityActions.expandedIcon = this.downTriangle;\r\n            this.ganttActivityHeight = '300px';\r\n        } else {\r\n            verticalScroll.scrollTop = 0;\r\n\r\n            this.activityActions.expanded = true;\r\n            this.activityActions.expandedIcon = this.upTriangle;\r\n            this.ganttActivityHeight = ganttActivityHeight;\r\n        }\r\n    }\r\n\r\n    /** Get the status icon unicode string */\r\n    getStatusIcon(status: string, percentComplete: number): string {\r\n        var checkMarkIcon: string = '&#x2714;';\r\n        var upBlackPointer: string = '&#x25b2;';\r\n        var crossMarkIcon: string = '&#x2718;';\r\n\r\n        if (status === \"Completed\" || percentComplete === 100 && status !== \"Error\") {\r\n            return checkMarkIcon;\r\n        } else if (status === \"Warning\") {\r\n            return upBlackPointer;\r\n        } else if (status === \"Error\") {\r\n            return crossMarkIcon;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /** Get the status icon color */\r\n    getStatusIconColor(status: string, percentComplete: number): string {\r\n        if (status === \"Completed\" || percentComplete === 100 && status !== \"Error\") {\r\n            return 'green';\r\n        } else if (status === \"Warning\") {\r\n            return 'orange';\r\n        } else if (status === \"Error\") {\r\n            return 'red';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    setGridScaleStyle() {\r\n        var height = this.ganttService.rowHeight;\r\n\r\n        if (this.zoomLevel === Zooming[Zooming.hours]) {\r\n            height *= 2;\r\n        }\r\n\r\n        return {\r\n            'height': height + 'px',\r\n            'line-height': height + 'px'\r\n        };\r\n    }\r\n\r\n    private calculateContainerHeight(): number {\r\n        return this.ganttService.TASK_CACHE.length * this.ganttService.rowHeight;\r\n    }\r\n\r\n    private calculateContainerWidth(): number {\r\n        if (this.zoomLevel === Zooming[Zooming.hours]) {\r\n            return this.ganttService.TIME_SCALE.length * this.ganttService.hourCellWidth * 24 + this.ganttService.hourCellWidth\r\n        } else {\r\n            return this.ganttService.TIME_SCALE.length * this.ganttService.cellWidth + this.ganttService.cellWidth;\r\n        }\r\n    }\r\n\r\n    private setSizes(): void {\r\n        this.ganttActivityHeight = this.activityContainerSizes.height + 'px';\r\n        this.ganttActivityWidth = this.activityContainerSizes.width;\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, ViewChild } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\nimport { Zooming } from '../../shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'time-scale',\r\n    template: `\r\n        <div class=\"time-scale\" [ngStyle]=\"setTimescaleStyle()\">\r\n            <div class=\"time-scale-line\" [ngStyle]=\"setTimescaleLineStyle('none')\">\r\n                <div class=\"time-scale-cell\" *ngFor=\"let date of timeScale\" \r\n                    [ngStyle]=\"setTimescaleCellStyle()\"\r\n                    [ngClass]=\"(isDayWeekend(date)) ? 'weekend' : ''\">{{date | date: 'dd-MM-yyyy'}}</div>\r\n            </div>\r\n            <div *ngIf=\"zoomLevel === 'hours'\" class=\"time-scale-line\" [ngStyle]=\"setTimescaleLineStyle('1px solid #cecece')\">\r\n                <div class=\"time-scale-cell\"\r\n                    *ngFor=\"let hour of getHours()\"\r\n                    [ngStyle]=\"{ 'width': ganttService.hourCellWidth + 'px' }\">{{hour}}</div>\r\n            </div>\r\n        </div>`,\r\n    styles: [`\r\n        .weekend {\r\n            background-color: whitesmoke;\r\n        }\r\n        .time-scale {\r\n            font-size: 12px;\r\n            border-bottom: 1px solid #cecece;\r\n            background-color: #fff;\r\n        }\r\n        .time-scale-line {\r\n            box-sizing: border-box;\r\n        }\r\n        .time-scale-line:first-child {\r\n            border-top: none;\r\n        }\r\n        .time-scale-cell {\r\n            display: inline-block;\r\n            white-space: nowrap;\r\n            overflow: hidden;\r\n            border-right: 1px solid #cecece;\r\n            text-align: center;\r\n            height: 100%;\r\n        }`\r\n    ],\r\n    providers: [\r\n        GanttService\r\n    ]\r\n})\r\nexport class GanttTimeScaleComponent implements OnInit {\r\n    @Input() timeScale: any;\r\n    @Input() dimensions: any;\r\n    @Input() zoom: any;\r\n    @Input() zoomLevel: any;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n        this.zoom.subscribe((zoomLevel: string) => {\r\n            this.zoomLevel = zoomLevel;\r\n        });\r\n    }\r\n\r\n    setTimescaleStyle() {\r\n        return {\r\n            'width': this.dimensions.width + 'px'\r\n        };\r\n    }\r\n\r\n    setTimescaleLineStyle(borderTop: string) {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px',\r\n            'line-height': this.ganttService.rowHeight + 'px',\r\n            'position': 'relative',\r\n            'border-top': borderTop\r\n        };\r\n    }\r\n\r\n    setTimescaleCellStyle() {\r\n        var width = this.ganttService.cellWidth;\r\n        var hoursInDay = 24;\r\n        var hourSeperatorPixels = 23; // we don't include the first \r\n\r\n        if (this.zoomLevel ===  Zooming[Zooming.hours]) {\r\n            width = this.ganttService.hourCellWidth * hoursInDay + hourSeperatorPixels; \r\n        }\r\n\r\n        return {\r\n            'width': width + 'px'\r\n        };\r\n    }\r\n\r\n    isDayWeekend(date: Date): boolean {\r\n        return this.ganttService.isDayWeekend(date);\r\n    }\r\n\r\n    getHours(): string[] {\r\n        return this.ganttService.getHours(this.timeScale.length);\r\n    }\r\n}","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\nimport { Zooming } from '../../shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'activity-background',\r\n    template: `\r\n    <div #bg class=\"gantt-activity-bg\">\r\n        <div class=\"gantt-activity-row\"\r\n            [ngStyle]=\"setRowStyle()\"\r\n            *ngFor=\"let row of ganttService.groupData(tasks)\">\r\n\r\n            <div class=\"gantt-activity-cell\"\r\n                [ngStyle]=\"setCellStyle()\"\r\n                *ngFor=\"let cell of cells; let l = last\"\r\n                [ngClass]=\"[(isDayWeekend(cell)) ? 'weekend' : '', l ? 'last-column-cell' : '']\"></div>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-activity-bg {\r\n            overflow: hidden;\r\n        }\r\n        .gantt-activity-row {\r\n            border-bottom: 1px solid #ebebeb;\r\n            background-color: #fff;\r\n            box-sizing: border-box;\r\n        }\r\n        .gantt-activity-cell {\r\n            display: inline-block;\r\n            height: 100%;\r\n            border-right: 1px solid #ebebeb;\r\n        }\r\n        .weekend {\r\n            background-color: whitesmoke;\r\n        }\r\n    `]\r\n})\r\nexport class GanttActivityBackgroundComponent implements OnInit {\r\n    @Input() tasks: any;\r\n    @Input() timeScale: any;\r\n    @Input() zoom: any;\r\n    @Input() zoomLevel: string;\r\n\r\n    @ViewChild('bg') bg: ElementRef;\r\n\r\n    rows: any[] = [];\r\n    cells: any[] = [];\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n        this.drawGrid();\r\n\r\n        this.zoom.subscribe((zoomLevel: string) => {\r\n            this.zoomLevel = zoomLevel;\r\n            this.drawGrid();\r\n        });\r\n    }\r\n\r\n    isDayWeekend(date: Date): boolean {\r\n        return this.ganttService.isDayWeekend(date);\r\n    }\r\n\r\n    setRowStyle() {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px'\r\n        };\r\n    }\r\n\r\n    setCellStyle() {\r\n        var width = this.ganttService.cellWidth;\r\n\r\n        if (this.zoomLevel === Zooming[Zooming.hours]) {\r\n            width = this.ganttService.hourCellWidth;\r\n        }\r\n\r\n        return {\r\n            'width': width + 'px'\r\n        };\r\n    }\r\n\r\n    private drawGrid(): void {\r\n        if (this.zoomLevel === Zooming[Zooming.hours]) {\r\n            this.cells = [];\r\n\r\n            this.timeScale.forEach((date: any) => {\r\n                for (var i = 0; i <= 23; i++) {\r\n                    this.cells.push(date);\r\n                }\r\n            });\r\n        } else {\r\n            this.cells = this.timeScale;\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, Input, ElementRef } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\nimport { Zooming } from '../../shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'activity-bars',\r\n    template: `\r\n    <div class=\"gantt-activity-bars-area\" \r\n        [ngStyle]=\"{ 'height': containerHeight + 'px', 'width': containerWidth + 'px' }\">\r\n\r\n        <div #bar class=\"gantt-activity-line\"\r\n            *ngFor=\"let task of ganttService.groupData(tasks); let i = index\"\r\n            [ngStyle]=\"drawBar(task, i)\">\r\n\r\n            <div class=\"gantt-activity-progress\" [ngStyle]=\"drawProgress(task, bar)\"></div>\r\n            <div class=\"gantt-activity-progress_drag\" style=\"left: 518px\"></div>\r\n            <div class=\"gantt-activity-content\"></div>\r\n            <div class=\"gantt-activity-link-control gantt-activity-right\" style=\"height: 26px; line-height: 30px\">\r\n                <div class=\"gantt-link-point\"></div>\r\n            </div>\r\n            <div class=\"gantt-activity-link-control gantt-activity-left\" style=\"height: 26px; line-height: 30px\">\r\n                <div class=\"gantt-link-point\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n    .gantt-activity-line {\r\n        /*border-radius: 2px;*/\r\n        position: absolute;\r\n        box-sizing: border-box;\r\n        background-color: rgb(18,195,244);\r\n        border: 1px solid #2196F3;\r\n        -webkit-user-select: none;\r\n    }\r\n    .gantt-activity-line:hover {\r\n        /*cursor: move;*/\r\n    }\r\n    .gantt-activity-progress {\r\n        text-align: center;\r\n        z-index: 0;\r\n        background: #2196F3;\r\n        position: absolute;\r\n        min-height: 18px;\r\n        display: block;\r\n        height: 18px;\r\n    }\r\n    .gantt-activity-progress-drag {\r\n        height: 8px;\r\n        width: 8px;\r\n        bottom: -4px;\r\n        margin-left: 4px;\r\n        background-position: bottom;\r\n        background-image: \"\";\r\n        background-repeat: no-repeat;\r\n        z-index: 2;\r\n    }\r\n    .gantt-activity-content {\r\n        font-size: 12px;\r\n        color: #fff;\r\n        width: 100%;\r\n        top: 0;\r\n        position: absolute;\r\n        white-space: nowrap;\r\n        text-align: center;\r\n        line-height: inherit;\r\n        overflow: hidden;\r\n        height: 100%;\r\n    }\r\n    .gantt-activity-link-control {\r\n        position: absolute;\r\n        width: 13px;\r\n        top: 0;\r\n    }\r\n    .gantt-activity-right {\r\n        right: 0;\r\n    }\r\n    .gantt-activity-left {\r\n        left: 0;\r\n    }\r\n    .gantt-activity-right:hover {\r\n        cursor:w-resize;\r\n    }\r\n    .gantt-activity-left:hover {\r\n        cursor:w-resize;\r\n    }\r\n    `],\r\n    providers: [\r\n        GanttService\r\n    ]\r\n})\r\nexport class GanttActivityBarsComponent implements OnInit {\r\n    @Input() timeScale: any;\r\n    @Input() dimensions: any;\r\n    @Input() tasks: any;\r\n    @Input() zoom: any;\r\n    @Input() zoomLevel: any;\r\n\r\n    containerHeight: number = 0;\r\n    containerWidth: number = 0;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n        this.containerHeight = this.dimensions.height;\r\n        this.containerWidth = this.dimensions.width;\r\n\r\n        this.zoom.subscribe((zoomLevel: string) => {\r\n            this.zoomLevel = zoomLevel;\r\n        });;\r\n    }\r\n\r\n    //TODO(dale): the ability to move bars needs reviewing and there are a few quirks\r\n    expandLeft($event: any, bar: any) {\r\n        $event.stopPropagation();\r\n\r\n        let ganttService = this.ganttService;\r\n        let startX = $event.clientX;\r\n        let startBarWidth = bar.style.width;\r\n        let startBarLeft = bar.style.left;\r\n\r\n        function doDrag(e: any) {\r\n            let cellWidth = ganttService.cellWidth;\r\n            let barWidth = startBarWidth - e.clientX + startX;\r\n            let days = Math.round(barWidth / cellWidth);\r\n\r\n            bar.style.width = days * cellWidth + days;\r\n            bar.style.left = (startBarLeft - (days * cellWidth) - days);\r\n        }\r\n\r\n        this.addMouseEventListeners(doDrag);\r\n\r\n        return false;\r\n    }\r\n\r\n    expandRight($event: any, bar: any) {\r\n        $event.stopPropagation();\r\n\r\n        let ganttService = this.ganttService;\r\n        let startX = $event.clientX;\r\n        let startBarWidth = bar.style.width;\r\n        let startBarEndDate = bar.task.end;\r\n        let startBarLeft = bar.style.left;\r\n\r\n        function doDrag(e: any) {\r\n            let cellWidth = ganttService.cellWidth;\r\n            let barWidth = startBarWidth + e.clientX - startX;\r\n            let days = Math.round(barWidth / cellWidth);\r\n\r\n            if (barWidth < cellWidth) {\r\n                barWidth = cellWidth;\r\n                days = Math.round(barWidth / cellWidth);\r\n            }\r\n            bar.style.width = ((days * cellWidth) + days); // rounds to the nearest cell\r\n        }\r\n\r\n        this.addMouseEventListeners(doDrag);\r\n\r\n        return false;\r\n    }\r\n\r\n    move($event: any, bar: any) {\r\n        $event.stopPropagation();\r\n\r\n        let ganttService = this.ganttService;\r\n        let startX = $event.clientX;\r\n        let startBarLeft = bar.style.left;\r\n\r\n        function doDrag(e: any) {\r\n            let cellWidth = ganttService.cellWidth;\r\n            let barLeft = startBarLeft + e.clientX - startX;\r\n            let days = Math.round(barLeft / cellWidth);\r\n\r\n            // TODO: determine how many days the bar can be moved\r\n            // if (days < maxDays) {\r\n            bar.style.left = ((days * cellWidth) + days); // rounded to nearest cell\r\n\r\n            // keep bar in bounds of grid\r\n            if (barLeft < 0) {\r\n                bar.style.left = 0;\r\n            }\r\n            // }\r\n            // TODO: it needs to take into account the max number of days.\r\n            // TODO: it needs to take into account the current days.\r\n            // TODO: it needs to take into account the right boundary.\r\n        }\r\n\r\n        this.addMouseEventListeners(doDrag);\r\n\r\n        return false;\r\n    }\r\n\r\n    drawBar(task: any, index: number) {\r\n        let style = {};\r\n\r\n        if (this.zoomLevel === Zooming[Zooming.hours]) {\r\n            style = this.ganttService.calculateBar(task, index, this.timeScale, true);\r\n        } else {\r\n            style = this.ganttService.calculateBar(task, index, this.timeScale);\r\n        }\r\n        return style;\r\n    }\r\n\r\n    drawProgress(task: any, bar: any): any {\r\n        var barStyle = this.ganttService.getBarProgressStyle(task.status);\r\n        var width = this.ganttService.calculateBarProgress(this.ganttService.getComputedStyle(bar, 'width'), task.percentComplete);\r\n\r\n        return {\r\n            'width': width,\r\n            'background-color': barStyle[\"background-color\"],\r\n        };\r\n    }\r\n\r\n    private addMouseEventListeners(dragFn: any) {\r\n\r\n        function stopFn() {\r\n            document.documentElement.removeEventListener('mousemove', dragFn, false);\r\n            document.documentElement.removeEventListener('mouseup', stopFn, false);\r\n            document.documentElement.removeEventListener('mouseleave', stopFn, false);\r\n        }\r\n\r\n        document.documentElement.addEventListener('mousemove', dragFn, false);\r\n        document.documentElement.addEventListener('mouseup', stopFn, false);\r\n        document.documentElement.addEventListener('mouseleave', stopFn, false);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { GanttActivityComponent } from './gantt-activity.component';\r\nimport { GanttTimeScaleComponent } from './time-scale/gantt-time-scale.component';\r\nimport { GanttActivityBackgroundComponent } from './background/activity-background.component';\r\nimport { GanttActivityBarsComponent } from './bars/activity-bars.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n    ],\r\n    exports: [\r\n        GanttActivityComponent,\r\n        GanttTimeScaleComponent,\r\n        GanttActivityBackgroundComponent,\r\n        GanttActivityBarsComponent\r\n    ],\r\n    declarations: [\r\n        GanttActivityComponent,\r\n        GanttTimeScaleComponent,\r\n        GanttActivityBackgroundComponent,\r\n        GanttActivityBarsComponent\r\n    ],\r\n    providers: [],\r\n})\r\nexport class GanttActivityModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { GanttComponent } from './gantt.component';\r\nimport { GanttHeaderComponent } from './header/gantt-header.component';\r\nimport { GanttFooterComponent } from './footer/gantt-footer.component';\r\nimport { GanttService } from './shared/services/gantt.service';\r\nimport { GanttActivityModule } from './activity/gantt-activity.module';\r\n\r\nimport { GroupByPipe } from './shared/pipes/groupBy.pipe';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        GanttActivityModule,\r\n    ],\r\n    exports: [\r\n        GanttComponent\r\n    ],\r\n    declarations: [\r\n        GanttComponent,\r\n        GanttHeaderComponent,\r\n        GanttFooterComponent,\r\n        GroupByPipe\r\n    ],\r\n    providers: [GanttService],\r\n})\r\nexport class GanttModule { }"],"names":[],"mappings":"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"}
