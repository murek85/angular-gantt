{"version":3,"file":"angular-gantt.js.map","sources":["ng://angular-gantt/lib/shared/services/gantt-config.service.ts","ng://angular-gantt/lib/shared/services/gantt.service.ts","ng://angular-gantt/lib/gantt.component.ts","ng://angular-gantt/lib/header/gantt-header.component.ts","ng://angular-gantt/lib/footer/gantt-footer.component.ts","ng://angular-gantt/lib/activity/gantt-activity.component.ts","ng://angular-gantt/lib/activity/time-scale/gantt-time-scale.component.ts","ng://angular-gantt/lib/activity/background/activity-background.component.ts","ng://angular-gantt/lib/activity/bars/activity-bars.component.ts","ng://angular-gantt/lib/activity/gantt-activity.module.ts","ng://angular-gantt/lib/gantt.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GanttConfig {\r\n    public cellWidth = 38;\r\n    public rowHeight = 30;\r\n    public activityHeight = 420;\r\n    public barHeight = 25;\r\n    public barLineHeight = 30;\r\n    public barMoveable = false;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { GanttConfig } from './gantt-config.service';\r\nimport { IBarStyle, Task, IScale } from '../interfaces';\r\n\r\n@Injectable()\r\nexport class GanttService {\r\n    public rowHeight = 0;\r\n    public hourCellWidth = 60; // change to 60 so minutes can been seen more easily\r\n    public hoursCellWidth = this.hourCellWidth * 25;\r\n    public cellWidth = 0;\r\n    public windowInnerWidth = 0;\r\n    public activityHeight = 0;\r\n    public barHeight = 0;\r\n    public barLineHeight = 0;\r\n    public barTop = 0;\r\n    public barMoveable = false;\r\n    public gridWidth = 542; //188\r\n    public gridHeight = 332;\r\n    private barStyles: IBarStyle[] = [\r\n        { status: \"information\", backgroundColor: \"rgb(18,195, 244)\", border: \"1px solid #2196F3\", progressBackgroundColor: \"#2196F3\" },\r\n        { status: \"warning\", backgroundColor: \"#FFA726\", border: \"1px solid #EF6C00\", progressBackgroundColor: \"#EF6C00\" },\r\n        { status: \"error\", backgroundColor: \"#EF5350\", border: \"1px solid #C62828\", progressBackgroundColor: \"#C62828\" },\r\n        { status: \"completed\", backgroundColor: \"#66BB6A\", border: \"1px solid #2E7D32\", progressBackgroundColor: \"#2E7D32\" }\r\n    ];\r\n    public TASK_CACHE: any[];\r\n    public TIME_SCALE: any[];\r\n\r\n    constructor() {\r\n        const ganttConfig = new GanttConfig();\r\n\r\n        this.rowHeight = ganttConfig.rowHeight;\r\n        this.cellWidth = ganttConfig.cellWidth;\r\n        this.activityHeight = ganttConfig.activityHeight;\r\n        this.barHeight = ganttConfig.barHeight;\r\n        this.barLineHeight = ganttConfig.barLineHeight;\r\n        this.barTop = ganttConfig.rowHeight;\r\n        this.barMoveable = ganttConfig.barMoveable;\r\n    }\r\n\r\n    private calculateBarWidth(start: Date, end: Date): number {\r\n        if (typeof start === 'string') {\r\n            start = new Date(start);\r\n        }\r\n\r\n        if (typeof end === 'string') {\r\n            end = new Date(end);\r\n        }\r\n\r\n        const days = this.calculateDiffDays(start, end);\r\n        const width: number = (days / 7 * this.cellWidth + days / 7);\r\n        return width;\r\n    }\r\n\r\n    private calculateBarLeft(start: Date, scale: any[]): number {\r\n        let left = 0;\r\n\r\n        if (start != null) {\r\n            if (typeof start === 'string') {\r\n                start = new Date();\r\n            }\r\n\r\n            for (var i = 0; i < scale.length; i++) {\r\n                if ((start.getTime() >= scale[i].getTime() && start.getTime() < scale[i + 1].getTime())) {\r\n                    \r\n                    left = i * this.cellWidth + i + this.calculateBarLeftDelta(start) + ((7 / (scale[i + 1].getDate() - start.getDate()) / 7) * this.cellWidth) - this.cellWidth / 7;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return left;\r\n    }\r\n\r\n    /** Calculates the height of the gantt grid, activity and vertical scroll */\r\n    public calculateGanttHeight(): string {\r\n        return `${this.TASK_CACHE.length * this.rowHeight}px`;\r\n    }\r\n\r\n    private calculateBarLeftDelta(start: Date): number {\r\n        let offset = 0;\r\n        const hoursInDay = 24;\r\n        const minutesInHour = 60;\r\n        const secondsInHour = 3600;\r\n        const startHours: number =\r\n            start.getHours() + start.getMinutes() / minutesInHour + start.getSeconds() / secondsInHour;\r\n\r\n        offset = this.cellWidth / hoursInDay * startHours;\r\n        return offset;\r\n    }\r\n\r\n    /** Calculate the bar styles */\r\n    public calculateBar(task: any, index: number, scale: any) {\r\n        const barStyle = this.getBarStyle(task.status);\r\n        return {\r\n            'top': this.barTop * index + 2 + 'px',\r\n            'left': this.calculateBarLeft(task.start, scale) + 'px',\r\n            'height': this.barHeight + 'px',\r\n            'line-height': this.barLineHeight + 'px',\r\n            'width': this.calculateBarWidth(task.start, task.end) + 'px',\r\n            'background-color': barStyle[\"background-color\"],\r\n            'border': barStyle[\"border\"]\r\n        };\r\n    }\r\n\r\n    /** Get the bar style based on task status */\r\n    private getBarStyle(taskStatus: string = \"\"): any {\r\n        const style = {};\r\n\r\n        try {\r\n            taskStatus = taskStatus.toLowerCase();\r\n        } catch (err) {\r\n            taskStatus = \"\";\r\n        }\r\n\r\n        switch (taskStatus) {\r\n            default:\r\n                style[\"background-color\"] = \"rgb(18,195, 244)\";\r\n                style[\"border\"] = \"1px solid #2196F3\";\r\n                break;\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n    /** Get the progresss bar background colour based on task status */\r\n    public getBarProgressStyle(taskStatus: string = \"\"): any {\r\n        const style = {};\r\n\r\n        try {\r\n            taskStatus = taskStatus.toLowerCase();\r\n        } catch (err) {\r\n            taskStatus = \"\";\r\n        }\r\n\r\n        switch (taskStatus) {\r\n            default:\r\n                style[\"background-color\"] = this.barStyles[0].progressBackgroundColor;\r\n                break;\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n    /** Calculates the bar progress width in pixels given task percent complete */\r\n    public calculateBarProgress(width: number, percent: number): string {\r\n        if (typeof percent === \"number\") {\r\n            if (percent > 100) {\r\n                percent = 100;\r\n            }\r\n            const progress: number = (width / 100) * percent - 2;\r\n            return `${progress}px`;\r\n        }\r\n        return `${0}px`;\r\n    }\r\n\r\n    /** Calculates the difference in two dates and returns number of days */\r\n    public calculateDiffDays(start: Date, end: Date): number {\r\n        try {\r\n            const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds /ms\r\n            const diffDays = Math.abs((start.getTime() - end.getTime()) / (oneDay));\r\n            const days = diffDays; // don't use Math.round as it will draw an incorrect bar\r\n            return days;\r\n        } catch (err) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /** Calculate the gantt scale range given the start and end date of tasks*/\r\n    public calculateScale(start: Date = new Date(), end: Date = this.addDays(start, 7)) {\r\n        const scale: any[] = [];\r\n        try {\r\n            while (start.getTime() <= end.getTime()) {\r\n                scale.push(start);\r\n                start = this.addDays(start, 7);\r\n            }\r\n            return scale;\r\n\r\n        } catch (err) {\r\n            return scale;\r\n        }\r\n    }\r\n\r\n    /** Determines whether given date is a weekend */\r\n    public isDayWeekend(date: Date): boolean {\r\n        const day = date.getDay();\r\n        if (day === 6 || day === 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /** Add x number of days to a date object */\r\n    public addDays(date: Date, days: number): Date {\r\n        const result = new Date(date);\r\n        result.setDate(result.getDate() + days);\r\n        return result;\r\n    }\r\n\r\n    //** Remove x number of days from a date object */\r\n    public removeDays(date: Date, days: number): Date {\r\n        const result = new Date(date);\r\n        result.setDate(result.getDate() - days);\r\n        return result;\r\n    }\r\n\r\n    /** Calculates the grid scale for gantt based on tasks start and end dates */\r\n    public calculateGridScale(tasks: Task[]): IScale {\r\n        let start: Date;\r\n        let end: Date;\r\n        const dates = tasks.map((task: any) => {\r\n            return {\r\n                start: new Date(task.start),\r\n                end: new Date(task.end)\r\n            };\r\n        });\r\n\r\n        start = new Date(Math.min.apply(null, dates.map((t) => {\r\n            return t.start;\r\n        })));\r\n\r\n        end = new Date(Math.max.apply(null, dates.map((t) => {\r\n            return t.end;\r\n        })));\r\n\r\n        return {\r\n            start: start,\r\n            end: end\r\n        };\r\n    }\r\n\r\n    public getComputedStyle(element: any, attribute: any) {\r\n        return parseInt(document.defaultView.getComputedStyle(element)[attribute], 10);\r\n    }\r\n\r\n    //TODO(dale): determine whether this is needed\r\n    public calculateContainerWidth(): number {\r\n        this.windowInnerWidth = window.innerWidth;\r\n        const containerWidth = this.gridWidth - 18;\r\n        return containerWidth;\r\n    }\r\n\r\n    public calculateContainerHeight(): number {\r\n        const containerHeight = (innerHeight - 18);\r\n        return containerHeight;\r\n    }\r\n\r\n    public calculateActivityContainerDimensions(): any {\r\n        const scrollWidth = 18;\r\n        this.windowInnerWidth = window.innerWidth;\r\n        const width = window.innerWidth - this.gridWidth - scrollWidth;\r\n\r\n        const height = window.innerHeight - this.gridHeight;\r\n\r\n        return { height: this.activityHeight, width: width };\r\n    }\r\n\r\n    public calculateGanttActivityWidth(ganttActions: HTMLElement, ganttGridElem: HTMLElement): any {\r\n        return `${ganttActions.offsetWidth - ganttGridElem.offsetWidth}px`;\r\n    }\r\n\r\n    public calculateGanttActivityHeight(ganttGridElem: HTMLElement): any {\r\n        return `${ganttGridElem.offsetHeight}px`;\r\n    }\r\n\r\n    /** Set the vertical scroll top positions for gantt */\r\n    public scrollTop(verticalScrollElem: any, ganttGridElem: any, ganttActivityAreaElem: any) {\r\n        const verticalScrollTop = verticalScrollElem.scrollTop;\r\n        const scroll = this.setScrollTop;\r\n\r\n        // debounce\r\n        if (verticalScrollTop !== null && verticalScrollTop !== undefined) {\r\n            scroll(verticalScrollTop, ganttActivityAreaElem);\r\n            scroll(ganttActivityAreaElem.scrollTop, ganttGridElem);\r\n        }\r\n    }\r\n\r\n    /** Group data by id , only supports one level*/\r\n    public groupData(tasks: any): any {\r\n        return tasks;\r\n    }\r\n\r\n    /** Checks whether any new data needs to be added to task cache  */\r\n    public doTaskCheck(tasks: any[]): boolean {\r\n        // const cachedTaskIds = this.TASK_CACHE.map((task: any) => { return task.id });\r\n        // const itemsToCache: any[] = [];\r\n\r\n        // only look at tasks that are not cached\r\n        // tasks.filter((task: any) => {\r\n        //     return cachedTaskIds.indexOf(task.id) === -1;\r\n        // }).forEach((task: any) => {\r\n        //     itemsToCache.push(task);\r\n        // });\r\n\r\n        // itemsToCache.forEach((item: any) => {\r\n        //     this.TASK_CACHE.push(item);\r\n        // });\r\n\r\n        // if (itemsToCache.length > 0) {\r\n        //     return true;\r\n        // }\r\n\r\n        this.TASK_CACHE = tasks;\r\n\r\n        return false;\r\n    }\r\n\r\n    /** Set a id prefix so CSS3 query selector can work with ids that contain numbers */\r\n    public setIdPrefix(id: string): string {\r\n        return `_${id}`;\r\n    }\r\n\r\n    // /** Remove the id prefix to allow querying of data */\r\n    // public removeIdPrefix(id: string): string {\r\n    //     return id.substring(1, id.length - 1);\r\n    // }\r\n\r\n    /** Set the scroll top property of a native DOM element */\r\n    public setScrollTop(scrollTop: number, element: any): void {\r\n        if (element !== null && element !== undefined) {\r\n            element.scrollTop = scrollTop;\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { NgStyle } from '@angular/common';\r\nimport { GanttService } from './shared/services/gantt.service';\r\nimport { IGanttOptions, Project } from './shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'gantt',\r\n    template: `\r\n        <div [ngStyle]=\"{ 'width': '100%' }\">\r\n            <div class=\"gantt-container\" (window:resize)=\"onResize($event)\">\r\n                <!--<gantt-header [name]=\"_project.name\" [startDate]=\"_project.startDate\"></gantt-header>-->\r\n                <gantt-activity [project]=\"_project\" [options]=\"_options\" (onGridRowClick)=\"gridRowClicked($event)\"></gantt-activity>\r\n                <!--<gantt-footer [project]=\"_project\"></gantt-footer>-->\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-container {\r\n            font-family: Arial;\r\n            font-size: 13px;\r\n            border: 1px solid #cecece;\r\n            position: relative;\r\n            white-space: nowrap;\r\n            margin-top: 0px;\r\n        }\r\n    `],\r\n    providers: []\r\n})\r\nexport class GanttComponent implements OnInit {\r\n    _project: Project;\r\n    _options: IGanttOptions;\r\n\r\n    @Input()\r\n    set project(project: any) {\r\n        if (project) {\r\n            this._project = project;\r\n        } else {\r\n            this.setDefaultProject();\r\n        }\r\n    }\r\n    get project() { return this._project; }\r\n\r\n    @Input()\r\n    set options(options: any) {\r\n        if (options.scale) {\r\n            this._options = options;\r\n        } else {\r\n            this.setDefaultOptions();\r\n        }\r\n    }\r\n    get options() { return this._options; }\r\n\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    ganttContainerWidth: number;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    setSizes(): void {\r\n        this.ganttContainerWidth = this.ganttService.calculateContainerWidth();\r\n    }\r\n\r\n    setDefaultOptions() {\r\n        const scale = this.ganttService.calculateGridScale(this._project.tasks);\r\n        this._options = {\r\n            scale\r\n        };\r\n    }\r\n\r\n    setDefaultProject() {\r\n        this._project = {\r\n            id: '',\r\n            name: '',\r\n            startDate: null,\r\n            tasks: []\r\n        };\r\n    }\r\n\r\n    gridRowClicked(task: any) {\r\n        this.onGridRowClick.emit(task);\r\n    }\r\n\r\n    onResize($event: any): void {\r\n        this.setSizes();\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'gantt-header',\r\n    template: `\r\n        <div class=\"gantt-header\">\r\n            <div class=\"gantt-header-title\">\r\n                <div style=\"flex:1\">{{ name }}</div>\r\n                <div>Started: {{ startDate | date: 'medium'}}</div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-header {\r\n            background-color: whitesmoke;\r\n            height: 40px;\r\n            border-bottom: 1px solid #e0e0e0;\r\n        }\r\n        .gantt-header-title {\r\n            padding: 12px;\r\n            display: flex;\r\n            flex-wrap:wrap;\r\n            font-family: Arial, Helvetica, sans-serif;\r\n            font-size: 16px;\r\n        }\r\n        .gantt-header-actions {\r\n            display: inline;\r\n            float: right;\r\n            padding: 6px;\r\n        }\r\n    `]\r\n})\r\nexport class GanttHeaderComponent {\r\n    @Input() name: any;\r\n    @Input() startDate: Date;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'gantt-footer',\r\n    template: `<div class=\"gantt-footer\"></div>`,\r\n    styles: [`\r\n        .gantt-footer {\r\n            background-color: whitesmoke;\r\n            height: 36px;\r\n            border-top: 1px solid #e0e0e0;\r\n        }\r\n        .gantt-footer-actions {\r\n            float: right;\r\n        }\r\n    `]\r\n})\r\nexport class GanttFooterComponent {\r\n    @Input() project: any;\r\n    constructor() { }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ElementRef,  ChangeDetectionStrategy, OnChanges, DoCheck } from '@angular/core';\r\n\r\nimport { GanttService } from '../shared/services/gantt.service';\r\n\r\n@Component({\r\n    selector: 'gantt-activity',\r\n    template: `\r\n    <div class=\"grid\" #ganttGrid>\r\n        <div class=\"grid-scale\" [ngStyle]=\"setGridScaleStyle()\">\r\n            <div class=\"grid-head-cell\"\r\n                *ngFor=\"let column of gridColumns\" [style.width]=\"column.width + 'px'\"\r\n                [style.left]=\"column.left + 'px'\">\r\n\r\n                <label>\r\n                    {{column.name}}\r\n                </label>\r\n            </div>\r\n        </div>\r\n        <div class=\"grid-data\"\r\n            #ganttGridData\r\n            [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight() }\">\r\n\r\n            <div #row\r\n                *ngFor=\"let data of ganttService.TASK_CACHE\" class=\"grid-row\"\r\n                [ngStyle]=\"setGridRowStyle()\">\r\n\r\n                <div class=\"grid-cell\"\r\n                    [ngStyle]=\"{ 'width': gridColumns[1].width + 'px', 'padding-left': 2 + 'px' }\">\r\n\r\n                    <div class=\"gantt-tree-content\">{{data.name}}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"gantt-activity\"\r\n        (window:resize)=\"onResize($event)\"\r\n        [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight() + 60, 'width': ganttActivityWidth + 36 + 'px' }\">\r\n\r\n        <time-scale [timeScale]=\"ganttService.TIME_SCALE\"\r\n            [dimensions]=\"dimensions\"></time-scale>\r\n        <div class=\"gantt-activity-area\"\r\n            #ganttActivityArea\r\n            [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight(), 'width': containerWidth + 36 + 'px' }\">\r\n\r\n            <activity-background [timeScale]=\"ganttService.TIME_SCALE\"\r\n                [tasks]=\"ganttService.TASK_CACHE\"></activity-background>\r\n            <activity-bars [timeScale]=\"ganttService.TIME_SCALE\"\r\n                [dimensions]=\"dimensions\"\r\n                [tasks]=\"ganttService.TASK_CACHE\"\r\n                (onGridRowClick)=\"toggleChildren($event)\"></activity-bars>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-activity {\r\n            overflow-y: hidden;\r\n            overflow-x: scroll;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            position: relative;\r\n        }\r\n        .gantt-activity-area {\r\n            position: relative;\r\n            overflow-x: hidden;\r\n            overflow-y: hidden;\r\n            -webkit-user-select: none;\r\n        }\r\n        .gantt-vertical-scroll {\r\n            background-color: transparent;\r\n            overflow-x: hidden;\r\n            overflow-y: scroll;\r\n            position: absolute;\r\n            right: -10px;\r\n            display: block;\r\n            top: -1px;\r\n            border: 1px solid #cecece;\r\n        }\r\n        .grid {\r\n            overflow-x: hidden;\r\n            overflow-y: hidden;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            border-right: 1px solid #cecece;\r\n        }\r\n        .grid-scale {\r\n            color: #6b6b6b;\r\n            font-size: 12px;\r\n            border-bottom: 1px solid #e0e0e0;\r\n            background-color: whitesmoke;\r\n        }\r\n        .grid-head-cell {\r\n            /*color: #a6a6a6;*/\r\n            border-top: none !important;\r\n            border-right: none !important;\r\n            line-height: inherit;\r\n            box-sizing: border-box;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            border-right: 1px solid #cecece;\r\n            /*text-align: center;*/\r\n            position: relative;\r\n            cursor: default;\r\n            height: 100%;\r\n            -moz-user-select: -moz-none;\r\n            -webkit-user-select: none;\r\n            overflow: hidden;\r\n        }\r\n        .grid-data {\r\n            overflow:hidden;\r\n        }\r\n        .grid-row {\r\n            box-sizing: border-box;\r\n            border-bottom: 1px solid #e0e0e0;\r\n            background-color: #fff;\r\n            position: relative;\r\n            -webkit-user-select: none;\r\n        }\r\n        .grid-row:hover {\r\n            background-color: #eeeeee;\r\n            cursor: pointer;\r\n        }\r\n        .grid-cell {\r\n            border-right: none;\r\n            color: #454545;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            padding-left: 6px;\r\n            padding-right: 6px;\r\n            height: 100%;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            font-size: 13px;\r\n            box-sizing: border-box;\r\n        }\r\n        .actions-bar {\r\n            /*border-top: 1px solid #cecece;*/\r\n            border-bottom: 1px solid #e0e0e0;\r\n            clear: both;\r\n            /*margin-top: 90px;*/\r\n            height: 28px;\r\n            background: whitesmoke;\r\n            color: #494949;\r\n            font-family: Arial, sans-serif;\r\n            font-size: 13px;\r\n            padding-left: 15px;\r\n            line-height: 25px;\r\n        }\r\n        .gantt-tree-content {\r\n            padding-left: 15px;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class GanttActivityComponent implements OnInit, DoCheck {\r\n    @Input() project: any;\r\n    @Input() options: any;\r\n\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    private upTriangle = '&#x25b2;'; // BLACK UP-POINTING TRIANGLE\r\n    private downTriangle = '&#x25bc;'; // BLACK DOWN-POINTING TRIANGLE\r\n\r\n    private start: Date;\r\n    private end: Date;\r\n    private timeScale: any;\r\n\r\n    private activityContainerSizes: any;\r\n\r\n    activityActions = {\r\n        expanded: false,\r\n        expandedIcon: this.downTriangle\r\n    };\r\n    containerHeight: any;\r\n    containerWidth: any;\r\n\r\n    ganttActivityHeight: any;\r\n    ganttActivityWidth: any;\r\n\r\n    private scale: any = {\r\n        start: null,\r\n        end: null\r\n    };\r\n\r\n    dimensions = {\r\n        height: 0,\r\n        width: 0\r\n    };\r\n\r\n    public gridColumns: any[] = [\r\n        { name: '', left: 0, width: 16 },\r\n        { name: 'Grupa asortymentÃ³w', left: 0, width: 330 }\r\n    ];\r\n\r\n    constructor(\r\n        public elem: ElementRef,\r\n        public ganttService: GanttService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        // Cache the project data and only work with that. Only show parent tasks by default\r\n        this.ganttService.TASK_CACHE = this.project.tasks;\r\n        this.ganttService.TIME_SCALE = this.ganttService.calculateScale(this.options.scale.start, this.options.scale.end);\r\n\r\n        this.start = this.options.scale.start;\r\n        this.end = this.options.scale.end;\r\n        this.containerWidth = this.calculateContainerWidth();\r\n        this.containerHeight = this.calculateContainerHeight();\r\n        this.activityContainerSizes = this.ganttService.calculateActivityContainerDimensions();\r\n\r\n        // important that these are called last as it relies on values calculated above.\r\n        this.setScale();\r\n        this.setDimensions();\r\n        this.setSizes();\r\n    }\r\n\r\n    /** Custom model check */\r\n    ngDoCheck() {\r\n        // do a check to see whether any new tasks have been added. If the task is a child then push into array if tree expanded?\r\n        this.ganttService.doTaskCheck(this.project.tasks);\r\n    }\r\n\r\n    /** On vertical scroll set the scroll top of grid and activity  */\r\n    onVerticalScroll(verticalScroll: any, ganttGrid: any, ganttActivityArea: any): void {\r\n        this.ganttService.scrollTop(verticalScroll, ganttGrid, ganttActivityArea);\r\n    }\r\n\r\n    toggleChildren(task) {\r\n        try {\r\n            this.onGridRowClick.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    /** On resize of browser window dynamically adjust gantt activity height and width */\r\n    onResize(event: any): void {\r\n        const activityContainerSizes = this.ganttService.calculateActivityContainerDimensions();\r\n        this.ganttActivityHeight = activityContainerSizes.height + 'px';\r\n        this.ganttActivityWidth = activityContainerSizes.width;\r\n    }\r\n\r\n    setScale() {\r\n        this.scale.start = this.start;\r\n        this.scale.end = this.end;\r\n    }\r\n\r\n    setDimensions() {\r\n        this.dimensions.height = this.containerHeight;\r\n        this.dimensions.width = this.containerWidth;\r\n    }\r\n\r\n    setGridRowStyle(): any {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px',\r\n            'line-height': this.ganttService.rowHeight + 'px'\r\n        };\r\n    }\r\n\r\n    setGridScaleStyle() {\r\n        const height = this.ganttService.rowHeight + 30;\r\n        return {\r\n            'height': height + 'px',\r\n            'line-height': height + 'px'\r\n        };\r\n    }\r\n\r\n    private calculateContainerHeight(): number {\r\n        return this.ganttService.TASK_CACHE.length * this.ganttService.rowHeight;\r\n    }\r\n\r\n    private calculateContainerWidth(): number {\r\n        return this.ganttService.TIME_SCALE.length * this.ganttService.cellWidth + this.ganttService.cellWidth;\r\n    }\r\n\r\n    private setSizes(): void {\r\n        this.ganttActivityHeight = this.activityContainerSizes.height + 'px';\r\n        this.ganttActivityWidth = this.activityContainerSizes.width;\r\n    }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\n\r\n@Component({\r\n    selector: 'time-scale',\r\n    template: `\r\n        <div class=\"time-scale\" [ngStyle]=\"setTimescaleStyle()\">\r\n            <div class=\"time-scale-line\" [ngStyle]=\"setTimescaleLineStyle('none')\">\r\n                <div class=\"time-scale-cell\" *ngFor=\"let date of timeScale; let i = index\"\r\n                    [ngClass]=\"(i % 2) ? 'weekend' : ''\" [ngStyle]=\"setTimescaleCellStyle()\">{{date | date: 'dd-MM'}}</div>\r\n            </div>\r\n            <div class=\"time-scale-line\" [ngStyle]=\"setTimescaleLineStyle('none')\">\r\n                <div class=\"time-scale-cell\" *ngFor=\"let date of timeScale; let i = index\"\r\n                [ngClass]=\"(i % 2) ? 'weekend' : ''\" [ngStyle]=\"setTimescaleCellStyle()\">{{i + 1}}</div>\r\n            </div>\r\n        </div>`,\r\n    styles: [`\r\n        .weekend {\r\n            background-color: whitesmoke;\r\n        }\r\n        .time-scale {\r\n            font-size: 12px;\r\n            background-color: #fff;\r\n            border-bottom: 1px solid #cecece;\r\n        }\r\n        .time-scale-line {\r\n            box-sizing: border-box;\r\n            border-bottom: 1px solid #cecece;\r\n        }\r\n        .time-scale-line:first-child {\r\n            border-top: none;\r\n        }\r\n        .time-scale-cell {\r\n            display: inline-block;\r\n            white-space: nowrap;\r\n            overflow: hidden;\r\n            border-right: 1px solid #cecece;\r\n            text-align: center;\r\n            height: 100%;\r\n        }`\r\n    ],\r\n    providers: [\r\n        GanttService\r\n    ]\r\n})\r\nexport class GanttTimeScaleComponent implements OnInit {\r\n    @Input() timeScale: any;\r\n    @Input() dimensions: any;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    setTimescaleStyle() {\r\n        return {\r\n            'width': (this.dimensions.width + 36) + 'px'\r\n        };\r\n    }\r\n\r\n    setTimescaleLineStyle(borderTop: string) {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px',\r\n            'line-height': this.ganttService.rowHeight + 'px',\r\n            'position': 'relative',\r\n            'border-top': borderTop\r\n        };\r\n    }\r\n\r\n    setTimescaleCellStyle() {\r\n        return {\r\n            'width': this.ganttService.cellWidth + 'px'\r\n        };\r\n    }\r\n\r\n    isDayWeekend(date: Date): boolean {\r\n        return this.ganttService.isDayWeekend(date);\r\n    }\r\n}\r\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\n\r\n@Component({\r\n    selector: 'activity-background',\r\n    template: `\r\n    <div #bg class=\"gantt-activity-bg\">\r\n        <div class=\"gantt-activity-row\"\r\n            [ngStyle]=\"setRowStyle()\"\r\n            *ngFor=\"let row of tasks\">\r\n\r\n            <div class=\"gantt-activity-cell\"\r\n                [ngStyle]=\"setCellStyle()\"\r\n                *ngFor=\"let cell of cells; let i = index; let l = last\" [ngClass]=\"(i % 2) ? 'weekend' : ''\" ></div>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n        .weekend {\r\n            background-color: whitesmoke;\r\n        }\r\n        .gantt-activity-bg {\r\n            overflow: hidden;\r\n        }\r\n        .gantt-activity-row {\r\n            border-bottom: 1px solid #ebebeb;\r\n            background-color: #fff;\r\n            box-sizing: border-box;\r\n        }\r\n        .gantt-activity-cell {\r\n            display: inline-block;\r\n            height: 100%;\r\n            border-right: 1px solid #ebebeb;\r\n        }\r\n    `]\r\n})\r\nexport class GanttActivityBackgroundComponent implements OnInit {\r\n    @Input() tasks: any;\r\n    @Input() timeScale: any;\r\n\r\n    @ViewChild('bg') bg: ElementRef;\r\n\r\n    rows: any[] = [];\r\n    cells: any[] = [];\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n        this.drawGrid();\r\n    }\r\n\r\n    isDayWeekend(date: Date): boolean {\r\n        return this.ganttService.isDayWeekend(date);\r\n    }\r\n\r\n    setRowStyle() {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px'\r\n        };\r\n    }\r\n\r\n    setCellStyle() {\r\n        return {\r\n            'width': this.ganttService.cellWidth + 'px'\r\n        };\r\n    }\r\n\r\n    private drawGrid(): void {\r\n        this.cells = this.timeScale;\r\n    }\r\n}\r\n","import { Component, OnInit, Input, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\n\r\n@Component({\r\n    selector: 'activity-bars',\r\n    template: `\r\n    <div class=\"gantt-activity-bars-area\"\r\n        [ngStyle]=\"{ 'height': containerHeight + 'px', 'width': containerWidth + 'px' }\">\r\n\r\n        <div #bar class=\"gantt-activity-line\"\r\n            *ngFor=\"let task of tasks; let i = index\" (click)=\"toggleChildren(task)\"\r\n            [ngStyle]=\"drawBar(task, i)\">\r\n\r\n            <div class=\"gantt-activity-content\"></div>\r\n            <div class=\"gantt-activity-link-control gantt-activity-right\" style=\"height: 26px; line-height: 30px\">\r\n                <div class=\"gantt-link-point\"></div>\r\n            </div>\r\n            <div class=\"gantt-activity-link-control gantt-activity-left\" style=\"height: 26px; line-height: 30px\">\r\n                <div class=\"gantt-link-point\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n    .gantt-activity-line {\r\n        /*border-radius: 2px;*/\r\n        position: absolute;\r\n        box-sizing: border-box;\r\n        background-color: rgb(18,195,244);\r\n        border: 1px solid #2196F3;\r\n        -webkit-user-select: none;\r\n    }\r\n    .gantt-activity-line:hover {\r\n        cursor: pointer;\r\n    }\r\n    .gantt-activity-progress {\r\n        text-align: center;\r\n        z-index: 0;\r\n        background: #2196F3;\r\n        position: absolute;\r\n        min-height: 18px;\r\n        display: block;\r\n        height: 18px;\r\n    }\r\n    .gantt-activity-progress-drag {\r\n        height: 8px;\r\n        width: 8px;\r\n        bottom: -4px;\r\n        margin-left: 4px;\r\n        background-position: bottom;\r\n        background-image: \"\";\r\n        background-repeat: no-repeat;\r\n        z-index: 2;\r\n    }\r\n    .gantt-activity-content {\r\n        font-size: 12px;\r\n        color: #fff;\r\n        width: 100%;\r\n        top: 0;\r\n        position: absolute;\r\n        white-space: nowrap;\r\n        text-align: center;\r\n        line-height: inherit;\r\n        overflow: hidden;\r\n        height: 100%;\r\n    }\r\n    .gantt-activity-link-control {\r\n        position: absolute;\r\n        width: 13px;\r\n        top: 0;\r\n    }\r\n    .gantt-activity-right {\r\n        right: 0;\r\n    }\r\n    .gantt-activity-left {\r\n        left: 0;\r\n    }\r\n    .gantt-activity-right:hover {\r\n        /*cursor:w-resize;*/\r\n    }\r\n    .gantt-activity-left:hover {\r\n        /*cursor:w-resize;*/\r\n    }\r\n    `],\r\n    providers: [\r\n        GanttService\r\n    ]\r\n})\r\nexport class GanttActivityBarsComponent implements OnInit {\r\n    @Input() timeScale: any;\r\n    @Input() dimensions: any;\r\n    @Input() tasks: any;\r\n\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    containerHeight = 0;\r\n    containerWidth = 0;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n        this.containerHeight = this.dimensions.height;\r\n        this.containerWidth = this.dimensions.width;\r\n    }\r\n\r\n    drawBar(task: any, index: number) {\r\n        let style = {};\r\n        style = this.ganttService.calculateBar(task, index, this.timeScale);\r\n\r\n        return style;\r\n    }\r\n\r\n    toggleChildren(task: any) {\r\n        try {\r\n            this.onGridRowClick.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    private addMouseEventListeners(dragFn: any) {\r\n        function stopFn() {\r\n            document.documentElement.removeEventListener('mousemove', dragFn, false);\r\n            document.documentElement.removeEventListener('mouseup', stopFn, false);\r\n            document.documentElement.removeEventListener('mouseleave', stopFn, false);\r\n        }\r\n\r\n        document.documentElement.addEventListener('mousemove', dragFn, false);\r\n        document.documentElement.addEventListener('mouseup', stopFn, false);\r\n        document.documentElement.addEventListener('mouseleave', stopFn, false);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { GanttActivityComponent } from './gantt-activity.component';\r\nimport { GanttTimeScaleComponent } from './time-scale/gantt-time-scale.component';\r\nimport { GanttActivityBackgroundComponent } from './background/activity-background.component';\r\nimport { GanttActivityBarsComponent } from './bars/activity-bars.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n    ],\r\n    exports: [\r\n        GanttActivityComponent,\r\n        GanttTimeScaleComponent,\r\n        GanttActivityBackgroundComponent,\r\n        GanttActivityBarsComponent\r\n    ],\r\n    declarations: [\r\n        GanttActivityComponent,\r\n        GanttTimeScaleComponent,\r\n        GanttActivityBackgroundComponent,\r\n        GanttActivityBarsComponent\r\n    ],\r\n    providers: [],\r\n})\r\nexport class GanttActivityModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { GanttComponent } from './gantt.component';\r\nimport { GanttHeaderComponent } from './header/gantt-header.component';\r\nimport { GanttFooterComponent } from './footer/gantt-footer.component';\r\nimport { GanttService } from './shared/services/gantt.service';\r\nimport { GanttActivityModule } from './activity/gantt-activity.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        GanttActivityModule,\r\n    ],\r\n    exports: [\r\n        GanttComponent\r\n    ],\r\n    declarations: [\r\n        GanttComponent,\r\n        GanttHeaderComponent,\r\n        GanttFooterComponent\r\n    ],\r\n    providers: [GanttService],\r\n})\r\nexport class GanttModule { }\r\n"],"names":[],"mappings":"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"}
