{"version":3,"file":"gantt.umd.js.map","sources":["ng://gantt/lib/shared/services/gantt-config.service.ts","ng://gantt/lib/shared/pipes/groupBy.pipe.ts","ng://gantt/lib/shared/services/gantt.service.ts","ng://gantt/lib/gantt.component.ts","ng://gantt/lib/header/gantt-header.component.ts","ng://gantt/lib/footer/gantt-footer.component.ts","ng://gantt/lib/shared/interfaces.ts","ng://gantt/lib/activity/gantt-activity.component.ts","ng://gantt/lib/activity/time-scale/gantt-time-scale.component.ts","ng://gantt/lib/activity/background/activity-background.component.ts","ng://gantt/lib/activity/bars/activity-bars.component.ts","ng://gantt/lib/activity/gantt-activity.module.ts","ng://gantt/lib/gantt.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GanttConfig {\r\n    public cellWidth: number = 76;\r\n    public rowHeight: number = 25;\r\n    public activityHeight: number = 300;\r\n    public barHeight = 20;\r\n    public barLineHeight = 20;\r\n    public barMoveable = false;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n/*\r\n * Group the array by given function\r\n * Takes an array argument that defaults to 1.\r\n * Usage:\r\n *   array | groupBy:func()\r\n * Example:\r\n *   {{ [ { id: '1'}] |  groupBy: }}\r\n *   formats to: []\r\n*/\r\n@Pipe({name: 'groupBy'})\r\nexport class GroupByPipe implements PipeTransform {\r\n  transform(array: any[], f: any): any[] {\r\n      var groups = {};\r\n      array.forEach((o: any) => {\r\n        var group = JSON.stringify(f(o));\r\n\r\n        groups[group] = groups[group] || [];\r\n        groups[group].push(o);\r\n      });\r\n      return Object.keys(groups).map((group: any) => {\r\n          return groups[group];\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { GanttConfig } from './gantt-config.service';\r\nimport { IBarStyle, Task, IScale, Zooming } from '../interfaces';\r\nimport { GroupByPipe } from '../../shared/pipes/groupBy.pipe';\r\n\r\n@Injectable()\r\nexport class GanttService {\r\n    public rowHeight: number = 0;\r\n    public hourCellWidth: number = 60; // change to 60 so minutes can been seen more easily\r\n    public hoursCellWidth: number = this.hourCellWidth * 25;\r\n    public cellWidth: number = 0;\r\n    public windowInnerWidth: number = 0;\r\n    public activityHeight: number = 0;\r\n    public barHeight: number = 0;\r\n    public barLineHeight: number = 0;\r\n    public barTop: number = 0;\r\n    public barMoveable: boolean = false;\r\n    public gridWidth: number = 560;\r\n    private barStyles: IBarStyle[] = [\r\n        { status: \"information\", backgroundColor: \"rgb(18,195, 244)\", border: \"1px solid #2196F3\", progressBackgroundColor: \"#2196F3\" },\r\n        { status: \"warning\", backgroundColor: \"#FFA726\", border: \"1px solid #EF6C00\", progressBackgroundColor: \"#EF6C00\" },\r\n        { status: \"error\", backgroundColor: \"#EF5350\", border: \"1px solid #C62828\", progressBackgroundColor: \"#C62828\" },\r\n        { status: \"completed\", backgroundColor: \"#66BB6A\", border: \"1px solid #2E7D32\", progressBackgroundColor: \"#2E7D32\" }\r\n    ];\r\n    public TASK_CACHE: any[];\r\n    public TIME_SCALE: any[];\r\n\r\n    constructor() {\r\n        let _ganttConfig = new GanttConfig();\r\n\r\n        this.rowHeight = _ganttConfig.rowHeight;\r\n        this.cellWidth = _ganttConfig.cellWidth;\r\n        this.activityHeight = _ganttConfig.activityHeight;\r\n        this.barHeight = _ganttConfig.barHeight;\r\n        this.barLineHeight = _ganttConfig.barLineHeight;\r\n        this.barTop = _ganttConfig.rowHeight;\r\n        this.barMoveable = _ganttConfig.barMoveable;\r\n    }\r\n\r\n    private calculateBarWidth(start: Date, end: Date, hours?: boolean): number {\r\n        if (typeof start === \"string\") {\r\n            start = new Date(start);\r\n        }\r\n\r\n        if (typeof end === \"string\") {\r\n            end = new Date(end);\r\n        }\r\n\r\n        let days = this.calculateDiffDays(start, end);\r\n        let width: number = days * this.cellWidth + days;\r\n\r\n        if (hours) {\r\n            width = days * this.hourCellWidth * 24 + days * 24;\r\n        }\r\n\r\n        return width;\r\n    }\r\n\r\n    private calculateBarLeft(start: Date, scale: any[], hours?: boolean): number {\r\n        var left: number = 0;\r\n        var hoursInDay: number = 24;\r\n\r\n        if (start != null) {\r\n            if (typeof start === \"string\") {\r\n                start = new Date();\r\n            }\r\n\r\n            for (var i = 0; i < scale.length; i++) {\r\n                if (start.getDate() === scale[i].getDate()) {\r\n                    if (hours) {\r\n                        left = i * hoursInDay * this.hourCellWidth + hoursInDay * i + this.calculateBarLeftDelta(start, hours);\r\n                    } else {\r\n                        left = i * this.cellWidth + i + this.calculateBarLeftDelta(start, hours);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return left;\r\n    }\r\n\r\n    /** Calculates the height of the gantt grid, activity and vertical scroll */\r\n    public calculateGanttHeight(): string {\r\n        return `${this.TASK_CACHE.length * this.rowHeight + this.rowHeight * 3}px`;\r\n    }\r\n\r\n    private calculateBarLeftDelta(start: Date, hours?: boolean): number {\r\n        var offset: number = 0;\r\n        var hoursInDay: number = 24;\r\n        var minutesInHour: number = 60;\r\n        var secondsInHour: number = 3600;\r\n        var startHours: number = start.getHours() + start.getMinutes() / minutesInHour + start.getSeconds() / secondsInHour;\r\n\r\n        if (hours) {\r\n            offset = this.hoursCellWidth / hoursInDay * startHours - startHours;\r\n        } else {\r\n            offset = this.cellWidth / hoursInDay * startHours;\r\n        }\r\n        return offset;\r\n    }\r\n\r\n    public isParent(treePath: string): boolean {\r\n\r\n        try {\r\n            var depth = treePath.split('/').length;\r\n\r\n            if (depth === 1) {\r\n                return true;\r\n            }\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public isChild(treePath: string) {\r\n        if (this.isParent(treePath)) {\r\n            return '0px';\r\n        }\r\n        return '20px';\r\n    }\r\n\r\n    /** Calculate the bar styles */\r\n    public calculateBar(task: any, index: number, scale: any, hours?: boolean) {\r\n        var barStyle = this.getBarStyle(task.status);\r\n        return {\r\n            'top': this.barTop * index + 2 + 'px',\r\n            'left': this.calculateBarLeft(task.start, scale, hours) + 'px',\r\n            'height': this.barHeight + 'px',\r\n            'line-height': this.barLineHeight + 'px',\r\n            'width': this.calculateBarWidth(task.start, task.end, hours) + 'px',\r\n            'background-color': barStyle[\"background-color\"],\r\n            'border': barStyle[\"border\"]\r\n        }\r\n    }\r\n\r\n    /** Get the bar style based on task status */\r\n    private getBarStyle(taskStatus: string = \"\"): any {\r\n        var style = {};\r\n\r\n        try {\r\n            taskStatus = taskStatus.toLowerCase();\r\n        } catch (err) {\r\n            taskStatus = \"\";\r\n        }\r\n\r\n        switch (taskStatus) {\r\n            case \"information\":\r\n                style[\"background-color\"] = this.barStyles[0].backgroundColor;\r\n                style[\"border\"] = this.barStyles[0].border;\r\n                break;\r\n            case \"warning\":\r\n                style[\"background-color\"] = this.barStyles[1].backgroundColor;\r\n                style[\"border\"] = this.barStyles[1].border;\r\n                break;\r\n            case \"error\":\r\n                style[\"background-color\"] = this.barStyles[2].backgroundColor;\r\n                style[\"border\"] = this.barStyles[2].border;\r\n                break;\r\n            case \"completed\":\r\n                style[\"background-color\"] = this.barStyles[3].backgroundColor;\r\n                style[\"border\"] = this.barStyles[3].border;\r\n                break;\r\n            default:\r\n                style[\"background-color\"] = \"rgb(18,195, 244)\";\r\n                style[\"border\"] = \"1px solid #2196F3\";\r\n                break;\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n    /** Get the progresss bar background colour based on task status */\r\n    public getBarProgressStyle(taskStatus: string = \"\"): any {\r\n        var style = {};\r\n\r\n        try {\r\n            taskStatus = taskStatus.toLowerCase();\r\n        } catch (err) {\r\n            taskStatus = \"\";\r\n        }\r\n\r\n        switch (taskStatus) {\r\n            case \"information\":\r\n                style[\"background-color\"] = this.barStyles[0].progressBackgroundColor;\r\n                break;\r\n            case \"warning\":\r\n                style[\"background-color\"] = this.barStyles[1].progressBackgroundColor;\r\n                break;\r\n            case \"error\":\r\n                style[\"background-color\"] = this.barStyles[2].progressBackgroundColor;\r\n                break;\r\n            case \"completed\":\r\n                style[\"background-color\"] = this.barStyles[3].progressBackgroundColor;\r\n                break;\r\n            default:\r\n                style[\"background-color\"] = this.barStyles[0].progressBackgroundColor;\r\n                break;\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n    /** Calculates the bar progress width in pixels given task percent complete */\r\n    public calculateBarProgress(width: number, percent: number): string {\r\n        if (typeof percent === \"number\") {\r\n            if (percent > 100) {\r\n                percent = 100;\r\n            }\r\n            let progress: number = (width / 100) * percent - 2;\r\n\r\n            return `${progress}px`;\r\n        }\r\n        return `${0}px`;\r\n    }\r\n\r\n    /** Calculates the difference in two dates and returns number of days */\r\n    public calculateDiffDays(start: Date, end: Date): number {\r\n        try {\r\n            let oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds /ms\r\n            let diffDays = Math.abs((start.getTime() - end.getTime()) / (oneDay));\r\n            let days = diffDays; // don't use Math.round as it will draw an incorrect bar\r\n\r\n            return days;\r\n        } catch (err) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /** Calculates the difference in two dates and returns number of hours */\r\n    public calculateDuration(task: any): string {\r\n        try {\r\n            if (task.start != null && task.end != null) {\r\n                let oneHour = 60 * 60 * 1000;\r\n                let diffHours = (Math.abs((task.start.getTime() - task.end.getTime()) / oneHour));\r\n                let duration = diffHours;\r\n\r\n                if (duration > 24) {\r\n                    return `${Math.round(duration / 24)} day(s)`; // duration in days\r\n                } else if (duration > 1) {\r\n                    return `${Math.round(duration)} hr(s)`; // duration in hours\r\n                } else {\r\n                    let minutes = duration * 60;\r\n\r\n                    if (minutes < 1) {\r\n                        return `${Math.round(minutes * 60)} second(s)`; // duration in seconds\r\n                    }\r\n                    return `${Math.round(minutes)} min(s)` // duration in minutes\r\n                }\r\n            }\r\n\r\n            return '';\r\n        } catch (err) {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    calculateTotalDuration(tasks: any[]): string {\r\n        try {\r\n            tasks = tasks.filter(t => t.parentId === t.id); // only calculate total duration with parent tasks\r\n\r\n            let totalHours = 0;\r\n            let oneHour = 60 * 60 * 1000;\r\n            for (let i = 0; i < tasks.length; i++) {\r\n                let start = tasks[i].start;\r\n                let end = tasks[i].end;\r\n\r\n                if (start != null && end != null) {\r\n                    let duration = Math.abs(tasks[i].end.getTime() - tasks[i].start.getTime()) / oneHour; // duration in hours\r\n                    totalHours += duration;\r\n                }\r\n            }\r\n\r\n            if (totalHours === 0) {\r\n                return '';\r\n            }\r\n\r\n            if (totalHours > 24) {\r\n                return `${Math.round(totalHours / 24)} day(s)`; // duration in days\r\n            } else if (totalHours > 1) {\r\n                return `${Math.round(totalHours)} hr(s)`; // duration in hours\r\n            } else {\r\n                let minutes = totalHours * 60;\r\n\r\n                if (minutes < 1) {\r\n                    return `${Math.round(minutes * 60)} second(s)`; // duration in seconds\r\n                }\r\n                return `${Math.round(minutes)} min(s)` // duration in minutes\r\n            }\r\n        } catch (err) {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /** Calculate the total percentage of a group of tasks */\r\n    calculateTotalPercentage(node: any): number {\r\n        var totalPercent: number = 0;\r\n        var children = node.children;\r\n\r\n        if (children.length > 0) {\r\n            children.forEach((child: any) => {\r\n                totalPercent += isNaN(child.percentComplete) ? 0 : child.percentComplete;\r\n            });\r\n\r\n            return Math.ceil(totalPercent / children.length);\r\n        } else {\r\n            return isNaN(node.percentComplete) ? 0 : node.percentComplete;\r\n        }\r\n    }\r\n\r\n    /** Calculate the total percent of the parent task */\r\n    calculateParentTotalPercentage(parent: any, tasks: any[]) {\r\n        var children = tasks.filter((task:any) => {\r\n            return task.parentId === parent.id && task.id != parent.id\r\n        }); // get only children tasks ignoring parent.\r\n\r\n        var totalPercent: number = 0;\r\n\r\n        if (children.length > 0) {\r\n            children.forEach((child:any) => {\r\n                totalPercent += isNaN(child.percentComplete) ? 0 : child.percentComplete;\r\n            });\r\n\r\n            return Math.ceil(totalPercent / children.length);\r\n        } else {\r\n            return isNaN(parent.percentComplete) ? 0 : parent.percentComplete;\r\n        }\r\n    }\r\n\r\n    /** Calculate the gantt scale range given the start and end date of tasks*/\r\n    public calculateScale(start: Date = new Date(), end: Date = this.addDays(start, 7)) {\r\n        let scale: any[] = [];\r\n\r\n        try {\r\n            while (start.getTime() <= end.getTime()) {\r\n                scale.push(start);\r\n                start = this.addDays(start, 1);\r\n            }\r\n            return scale;\r\n\r\n        } catch (err) {\r\n            return scale;\r\n        }\r\n    }\r\n\r\n    /** Determines whether given date is a weekend */\r\n    public isDayWeekend(date: Date): boolean {\r\n        let day = date.getDay();\r\n\r\n        if (day === 6 || day === 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /** Add x number of days to a date object */\r\n    public addDays(date: Date, days: number): Date {\r\n        let result = new Date(date);\r\n        result.setDate(result.getDate() + days);\r\n        return result;\r\n    }\r\n\r\n    //** Remove x number of days from a date object */\r\n    public removeDays(date: Date, days: number): Date {\r\n        let result = new Date(date);\r\n        result.setDate(result.getDate() - days);\r\n        return result;\r\n    }\r\n\r\n    /** Calculates the grid scale for gantt based on tasks start and end dates */\r\n    public calculateGridScale(tasks: Task[]): IScale {\r\n        var start: Date;\r\n        var end: Date;\r\n        var dates = tasks.map((task:any) => {\r\n            return {\r\n                start: new Date(task.start),\r\n                end: new Date(task.end)\r\n            }\r\n        });\r\n\r\n        start = new Date(Math.min.apply(null, dates.map(function (t) {\r\n            return t.start;\r\n        })));\r\n\r\n        end = new Date(Math.max.apply(null, dates.map(function (t) {\r\n            return t.end;\r\n        })));\r\n\r\n        return {\r\n            start: start,\r\n            end: end\r\n        }\r\n    }\r\n\r\n    /** Create an hours array for use in time scale component */\r\n    public getHours(cols: number): string[] {\r\n        var hours: string[] = [];\r\n\r\n        while (hours.length <= cols * 24) {\r\n            for (var i = 0; i <= 23; i++) {\r\n                if (i < 10) {\r\n                    hours.push('0' + i.toString());\r\n                } else {\r\n                    hours.push(i.toString());\r\n                }\r\n            }\r\n        }\r\n\r\n        return hours;\r\n    }\r\n\r\n    public getComputedStyle(element: any, attribute: any) {\r\n        return parseInt(document.defaultView.getComputedStyle(element)[attribute], 10);\r\n    }\r\n\r\n    //TODO(dale): determine whether this is needed\r\n    public calculateContainerWidth(): number {\r\n        this.windowInnerWidth = window.innerWidth;\r\n        let containerWidth = (innerWidth - 18);\r\n\r\n        return containerWidth;\r\n    }\r\n\r\n    public calculateActivityContainerDimensions(): any {\r\n        var scrollWidth: number = 18;\r\n        this.windowInnerWidth = window.innerWidth;\r\n        let width = this.windowInnerWidth - this.gridWidth - scrollWidth;\r\n\r\n        return { height: this.activityHeight, width: width };\r\n    }\r\n\r\n    /** Set the vertical scroll top positions for gantt */\r\n    public scrollTop(verticalScrollElem: any, ganttGridElem: any, ganttActivityAreaElem: any) {\r\n        let verticalScrollTop = verticalScrollElem.scrollTop;\r\n        let scroll = this.setScrollTop;\r\n\r\n        // debounce\r\n        if (verticalScrollTop !== null && verticalScrollTop !== undefined) {\r\n            setTimeout(function() {\r\n                scroll(verticalScrollTop, ganttActivityAreaElem);\r\n                scroll(ganttActivityAreaElem.scrollTop, ganttGridElem);\r\n\r\n            }, 50);\r\n        }\r\n    }\r\n\r\n    /** Group data by id , only supports one level*/\r\n    public groupData(tasks: any): any {\r\n        var merged:any = [];\r\n        var groups:any = new GroupByPipe().transform(tasks, (task:any) => {\r\n            return [task.treePath.split('/')[0]]\r\n        });\r\n        return merged.concat.apply([], groups);\r\n    }\r\n\r\n    /** Create tree of data */\r\n    public transformData(input: any): any {\r\n        var output:any = [];\r\n        for (var i = 0; i < input.length; i++) {\r\n            var chain:any = input[i].id.split('/');\r\n            var currentNode:any = output;\r\n            for (var j = 0; j < chain.length; j++) {\r\n                var wantedNode:any = chain[j];\r\n                var lastNode:any = currentNode;\r\n                for (var k = 0; k < currentNode.length; k++) {\r\n                    if (currentNode[k].name == wantedNode) {\r\n                        currentNode = currentNode[k].children;\r\n                        break;\r\n                    }\r\n                }\r\n                // If we couldn't find an item in this list of children\r\n                // that has the right name, create one:\r\n                if (lastNode == currentNode) {\r\n                    //TODO(dale): determine way to show percent complete on correct child  \r\n                    var newNode:any = currentNode[k] = {\r\n                        name: wantedNode,\r\n                        percentComplete: input[i].percentComplete,\r\n                        start: input[i].start,\r\n                        end: input[i].end,\r\n                        children: []\r\n                    };\r\n                    currentNode = newNode.children;\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n\r\n    /** Checks whether any new data needs to be added to task cache  */\r\n    public doTaskCheck(tasks: any[], treeExpanded: boolean): boolean {\r\n        var cachedTaskIds = this.TASK_CACHE.map((task:any) => { return task.id });\r\n        var itemsToCache: any[] = [];\r\n\r\n        if (treeExpanded) {\r\n            // push children and parent tasks that are not cached\r\n            tasks.filter((task:any) => {\r\n                return cachedTaskIds.indexOf(task.id) === -1\r\n            }).forEach((task:any) => {\r\n                itemsToCache.push(task);\r\n            })\r\n        } else {\r\n            // only look at tasks that are not cached\r\n            tasks.filter((task:any) => { \r\n                return cachedTaskIds.indexOf(task.id) === -1 && task.treePath.split('/').length === 1 \r\n            }).forEach((task:any) => {\r\n                itemsToCache.push(task);\r\n            });\r\n        }\r\n\r\n        itemsToCache.forEach((item:any) => {\r\n            this.TASK_CACHE.push(item);\r\n        });\r\n\r\n        if (itemsToCache.length > 0) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /** Set a id prefix so CSS3 query selector can work with ids that contain numbers */\r\n    public setIdPrefix(id: string): string {\r\n        return `_${id}`;\r\n    }\r\n\r\n    // /** Remove the id prefix to allow querying of data */\r\n    // public removeIdPrefix(id: string): string {\r\n    //     return id.substring(1, id.length - 1);\r\n    // }\r\n\r\n    /** Set the scroll top property of a native DOM element */\r\n    private setScrollTop(scrollTop: number, element: any): void {\r\n        if (element !== null && element !== undefined) {\r\n            element.scrollTop = scrollTop;\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { NgStyle } from '@angular/common';\r\nimport { GanttService } from './shared/services/gantt.service';\r\nimport { IGanttOptions, Project } from './shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'gantt',\r\n    template: `\r\n        <div style=\"width: 100%\">\r\n            <div class=\"gantt_container\" (window:resize)=\"onResize($event)\">\r\n                <gantt-header [name]=\"_project.name\" [startDate]=\"_project.startDate\"></gantt-header>\r\n                <gantt-activity [project]=\"_project\" [options]=\"_options\" (onGridRowClick)=\"gridRowClicked($event)\"></gantt-activity>\r\n                <gantt-footer [project]=\"_project\"></gantt-footer>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .gantt_container {\r\n            font-family: Arial;\r\n            font-size: 13px;\r\n            border: 1px solid #cecece;\r\n            position: relative;\r\n            white-space: nowrap;   \r\n            margin-top: 0px;\r\n        }\r\n    `],\r\n    providers: []\r\n})\r\nexport class GanttComponent implements OnInit {\r\n    _project: Project;\r\n    _options: IGanttOptions;\r\n\r\n    //TODO(dale): this may be causing an issue in the tree builder?\r\n    @Input()\r\n    set project(project: any) {\r\n        if (project) {\r\n            this._project = project;\r\n        } else {\r\n            this.setDefaultProject();\r\n        }\r\n    }\r\n    get project() { return this._project; }\r\n\r\n    @Input()\r\n    set options(options: any) {\r\n        if (options.scale) {\r\n            this._options = options;\r\n        } else {\r\n            this.setDefaultOptions();\r\n        }\r\n    }\r\n    get options() { return this._options; }\r\n\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    private ganttContainerWidth: number;\r\n\r\n    constructor(private ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n\r\n     }\r\n\r\n    setSizes(): void {\r\n        this.ganttContainerWidth = this.ganttService.calculateContainerWidth();\r\n    }\r\n\r\n    setDefaultOptions() {\r\n        var scale = this.ganttService.calculateGridScale(this._project.tasks);\r\n\r\n        this._options = {\r\n            scale: scale\r\n        };\r\n    }\r\n\r\n    setDefaultProject() {\r\n        this._project = {\r\n            id: '',\r\n            name: '',\r\n            startDate: null,\r\n            tasks: []\r\n        };\r\n    }\r\n\r\n    gridRowClicked(task: any) {\r\n        this.onGridRowClick.emit(task);\r\n    }\r\n\r\n    onResize($event: any): void {\r\n        this.setSizes();\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'gantt-header',\r\n    template: `\r\n        <div class=\"gantt-header\">\r\n            <div class=\"gantt-header-title\">\r\n                <div style=\"flex:1\">{{ name }}</div>\r\n                <div>Started: {{ startDate | date: 'medium'}}</div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-header {\r\n            background-color: whitesmoke;\r\n            height: 40px;\r\n            border-bottom: 1px solid #e0e0e0;\r\n        }\r\n\r\n        .gantt-header-title {\r\n            padding: 12px;   \r\n            display: flex;\r\n            flex-wrap:wrap;\r\n            font-family: Arial, Helvetica, sans-serif;\r\n            font-size: 16px;\r\n        }\r\n\r\n        .gantt-header-actions {\r\n            display: inline;\r\n            float: right;\r\n            padding: 6px;\r\n        }\r\n    `]\r\n})\r\nexport class GanttHeaderComponent {\r\n    @Input() name: any;\r\n    @Input() startDate: Date;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'gantt-footer',\r\n    template: `<div class=\"gantt-footer\"></div>`,\r\n    styles: [`\r\n        .gantt-footer {\r\n            background-color: whitesmoke;\r\n            height: 36px;\r\n            border-top: 1px solid #e0e0e0;\r\n        }\r\n\r\n        .gantt-footer-actions {\r\n            float:right;\r\n        }\r\n    `]\r\n})\r\nexport class GanttFooterComponent {\r\n    @Input() project: any;\r\n    constructor() { }\r\n}\r\n","export interface Project {\r\n    id: string;\r\n    name: string;\r\n    startDate?: Date;\r\n    tasks: Task[];\r\n}\r\n\r\nexport interface Task {\r\n    id: string;\r\n    treePath: string;\r\n    parentId: string;\r\n    name: string;\r\n    resource?: string;\r\n    start: Date;\r\n    end?: Date; \r\n    percentComplete?: number;\r\n    status?: string;\r\n}\r\n\r\nexport interface IGanttOptions {\r\n    scale?: IScale;\r\n    zooming?: string;\r\n}\r\n\r\nexport interface IScale {\r\n    start?: Date;\r\n    end?: Date;\r\n}\r\n\r\nexport interface IBarStyle {\r\n    status: string;\r\n    backgroundColor: string;\r\n    border: string;\r\n    progressBackgroundColor: string;\r\n}\r\n\r\nexport enum Zooming {\r\n    hours,\r\n    days,\r\n    weeks\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ElementRef, AfterViewInit, ViewChild, ChangeDetectionStrategy, OnChanges, DoCheck } from '@angular/core';\r\n\r\nimport { GanttService } from '../shared/services/gantt.service';\r\nimport { GanttConfig } from '../shared/services/gantt-config.service';\r\nimport { IGanttOptions, Zooming } from '../shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'gantt-activity',\r\n    template: `\r\n    <div class=\"actions-bar\">\r\n        <div style=\"float: right\">\r\n            <label>\r\n                <button (click)=\"zoomTasks('hours')\"\r\n                    style=\"background-color: whitesmoke; border: none; font-size: 16px; cursor: pointer\">Hour</button>\r\n            </label>\r\n            <label>\r\n                <button (click)=\"zoomTasks('days')\"\r\n                    style=\"background-color: whitesmoke; border: none; font-size: 16px; cursor: pointer\">Day</button>\r\n            </label>\r\n            <button (click)=\"expand()\"\r\n                style=\"background-color: whitesmoke; border: none; font-size: 21px; cursor: pointer\"\r\n                [innerHTML]=\"activityActions.expandedIcon\"></button>\r\n        </div>\r\n    </div>\r\n    <div class=\"grid\" #ganttGrid [ngStyle]=\"{ 'height': ganttActivityHeight, 'width': ganttService.gridWidth + 'px'}\">\r\n    <div class=\"grid-scale\" [ngStyle]=\"setGridScaleStyle()\">\r\n        <div class=\"grid-head-cell\"\r\n            *ngFor=\"let column of gridColumns\" [style.width]=\"column.width + 'px'\"\r\n            [style.left]=\"column.left + 'px'\">\r\n\r\n            <label>\r\n                {{column.name}}\r\n                <span *ngIf=\"column.name === 'Duration'\"\r\n                    style=\"font-weight:bold\">{{ ganttService.calculateTotalDuration(ganttService.TASK_CACHE) }}</span>\r\n            </label>\r\n        </div>\r\n        <div class=\"grid-head-cell\">\r\n            <button (click)=\"toggleAllChildren()\"\r\n                style=\"background-color: whitesmoke; border: none; font-size: 21px; cursor: pointer\">\r\n\r\n                {{ treeExpanded ? '&#x25b2;' : '&#x25bc;' }}\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"grid-data\"\r\n        #ganttGridData\r\n        [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight() }\">\r\n\r\n    <div #row\r\n        *ngFor=\"let data of ganttService.groupData(ganttService.TASK_CACHE)\"\r\n        (click)=\"toggleChildren(row, data)\" class=\"grid_row\"\r\n        [ngStyle]=\"setGridRowStyle(ganttService.isParent(data.treePath))\"\r\n        [attr.data-id]=\"ganttService.setIdPrefix(data.id)\"\r\n        [attr.data-isParent]=\"ganttService.isParent(data.treePath)\"\r\n        [attr.data-parentid]=\"ganttService.setIdPrefix(data.parentId)\">\r\n\r\n            <div class=\"grid-cell\" [ngStyle]=\"{ 'width': gridColumns[0].width + 'px' }\">\r\n                <div [innerHTML]=\"getStatusIcon(data.status, data.percentComplete)\"\r\n                    [style.color]=\"getStatusIconColor(data.status, data.percentComplete)\"></div>\r\n            </div>\r\n            <div class=\"grid-cell\"\r\n                [ngStyle]=\"{ 'width': gridColumns[1].width + 'px', 'padding-left': ganttService.isChild(data.treePath) }\">\r\n\r\n                <div class=\"gantt-tree-content\">{{data.name}}</div>\r\n            </div>\r\n            <div class=\"grid-cell\" [ngStyle]=\"{ 'width': gridColumns[2].width + 'px' }\">\r\n                <div>{{ data.percentComplete }}</div>\r\n            </div>\r\n            <div class=\"grid-cell\" [ngStyle]=\"{ 'width': gridColumns[3].width + 'px'}\">\r\n                <div> {{ ganttService.calculateDuration(data) }}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <div class=\"gantt-activity\"\r\n        (window:resize)=\"onResize($event)\"\r\n        [ngStyle]=\"{ 'height': ganttActivityHeight, 'width': ganttActivityWidth - 18 + 'px'}\">\r\n\r\n        <time-scale [zoom]=\"zoom\"\r\n            [zoomLevel]=\"zoomLevel\"\r\n            [timeScale]=\"ganttService.TIME_SCALE\"\r\n            [dimensions]=\"dimensions\"></time-scale>\r\n        <div class=\"gantt-activity-area\"\r\n            #ganttActivityArea\r\n            [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight(), 'width': containerWidth + 'px'}\">\r\n\r\n            <activity-background [zoom]=\"zoom\"\r\n                [zoomLevel]=\"zoomLevel\"\r\n                [timeScale]=\"ganttService.TIME_SCALE\"\r\n                [tasks]=\"ganttService.TASK_CACHE\"></activity-background>\r\n            <activity-bars [zoom]=\"zoom\"\r\n                [zoomLevel]=\"zoomLevel\"\r\n                [timeScale]=\"ganttService.TIME_SCALE\"\r\n                [dimensions]=\"dimensions\"\r\n                [tasks]=\"ganttService.TASK_CACHE\"></activity-bars>\r\n        </div>\r\n    </div>\r\n    <div class=\"gantt-vertical-scroll\"\r\n        #verticalScroll\r\n        (scroll)=\"onVerticalScroll(verticalScroll, ganttGrid, ganttActivityArea)\"\r\n        [ngStyle]=\"{'display': activityActions.expanded === true ? 'none' : 'block' }\">\r\n\r\n        <div [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight() }\"></div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-activity {\r\n            /*overflow-x: hidden;*/\r\n            overflow-x: auto;\r\n            height: 250px;\r\n            overflow-y: hidden;\r\n            overflow-x: scroll;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            position:relative;\r\n        }\r\n        .gantt-activity-area {\r\n            position: relative;\r\n            overflow-x: hidden;\r\n            overflow-y: hidden;\r\n            -webkit-user-select: none;\r\n        }\r\n        .gantt-vertical-scroll {\r\n            background-color: transparent;\r\n            overflow-x: hidden;\r\n            overflow-y: scroll;\r\n            position: absolute;\r\n            right: 0;\r\n            display: block;\r\n            height: 283px;\r\n            width: 18px;\r\n            top: 70px;\r\n        }\r\n        .grid {\r\n            overflow-x: hidden;\r\n            overflow-y: hidden;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            border-right: 1px solid #cecece;\r\n        }\r\n        .grid-scale {\r\n            color: #6b6b6b;\r\n            font-size: 12px;\r\n            border-bottom: 1px solid #e0e0e0;\r\n            background-color: whitesmoke;\r\n        }\r\n        .grid-head-cell {\r\n            /*color: #a6a6a6;*/\r\n            border-top: none !important;\r\n            border-right: none !important;\r\n            line-height: inherit;\r\n            box-sizing: border-box;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            border-right: 1px solid #cecece;\r\n            /*text-align: center;*/\r\n            position: relative;\r\n            cursor: default;\r\n            height: 100%;\r\n            -moz-user-select: -moz-none;\r\n            -webkit-user-select: none;\r\n            overflow: hidden;\r\n        }\r\n        .grid-data {\r\n            overflow:hidden;\r\n        }\r\n        .grid-row {\r\n            box-sizing: border-box;\r\n            border-bottom: 1px solid #e0e0e0;\r\n            background-color: #fff;\r\n            position: relative;\r\n            -webkit-user-select: none;\r\n        }\r\n        .grid-row:hover {\r\n            background-color: #eeeeee;\r\n        }\r\n        .grid-cell {\r\n            border-right: none;\r\n            color: #454545;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            padding-left: 6px;\r\n            padding-right: 6px;\r\n            height: 100%;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            font-size: 13px;\r\n            box-sizing: border-box;\r\n        }\r\n        .actions-bar {\r\n            /*border-top: 1px solid #cecece;*/\r\n            border-bottom: 1px solid #e0e0e0;\r\n            clear: both;\r\n            /*margin-top: 90px;*/\r\n            height: 28px;\r\n            background: whitesmoke;\r\n            color: #494949;\r\n            font-family: Arial, sans-serif;\r\n            font-size: 13px;\r\n            padding-left: 15px;\r\n            line-height: 25px;\r\n        }\r\n        .gantt-tree-content {\r\n            padding-left:15px;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class GanttActivityComponent implements OnInit, DoCheck {\r\n    @Input() project: any;\r\n    @Input() options: any;\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    private upTriangle: string = '&#x25b2;' // BLACK UP-POINTING TRIANGLE\r\n    private downTriangle: string = '&#x25bc;'; // BLACK DOWN-POINTING TRIANGLE\r\n\r\n    zoom: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    activityActions = {\r\n        expanded: false,\r\n        expandedIcon: this.downTriangle\r\n    };\r\n\r\n    private timeScale: any;\r\n\r\n    private start: Date;\r\n    private end: Date;\r\n    containerHeight: any;\r\n    containerWidth: any;\r\n\r\n    private activityContainerSizes: any;\r\n\r\n    ganttActivityHeight: any;\r\n    ganttActivityWidth: any;\r\n\r\n    zoomLevel: string = Zooming[Zooming.hours];\r\n\r\n    treeExpanded = false;\r\n\r\n    private scale: any = {\r\n        start: null,\r\n        end: null\r\n    };\r\n\r\n    dimensions = {\r\n        height: 0,\r\n        width: 0\r\n    };\r\n\r\n    private data: any[] = [];\r\n\r\n    public gridColumns: any[] = [\r\n        { name: '', left: 0, width: 16 },\r\n        { name: 'Task', left: 20, width: 330 },\r\n        { name: '%', left: 8, width: 40 },\r\n        { name: 'Duration', left: 14, width: 140 }\r\n    ];\r\n\r\n    constructor(\r\n        public elem: ElementRef,\r\n        public ganttService: GanttService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        // Cache the project data and only work with that. Only show parent tasks by default\r\n        this.ganttService.TASK_CACHE = this.project.tasks.slice(0).filter((item: any) => {\r\n            return item.treePath.split('/').length === 1;\r\n        });\r\n        this.ganttService.TIME_SCALE = this.ganttService.calculateScale(this.options.scale.start, this.options.scale.end);\r\n\r\n        this.zoomLevel = this.options.zooming;\r\n        this.start = this.options.scale.start;\r\n        this.end = this.options.scale.end;\r\n        this.containerWidth = this.calculateContainerWidth();\r\n        this.containerHeight = this.calculateContainerHeight();\r\n        this.activityContainerSizes = this.ganttService.calculateActivityContainerDimensions();\r\n\r\n        // important that these are called last as it relies on values calculated above.\r\n        this.setScale();\r\n        this.setDimensions();\r\n        this.setSizes();\r\n\r\n        this.expand(); // default to expanded\r\n    }\r\n\r\n    /** Custom model check */\r\n    ngDoCheck() {\r\n        // do a check to see whether any new tasks have been added. If the task is a child then push into array if tree expanded?\r\n        var tasksAdded = this.ganttService.doTaskCheck(this.project.tasks, this.treeExpanded);\r\n\r\n        // only force expand if tasks are added and tree is already expanded\r\n        if (tasksAdded && this.activityActions.expanded) {\r\n            this.expand(true);\r\n        }\r\n    }\r\n\r\n    /** On vertical scroll set the scroll top of grid and activity  */\r\n    onVerticalScroll(verticalScroll: any, ganttGrid: any, ganttActivityArea: any): void {\r\n        this.ganttService.scrollTop(verticalScroll, ganttGrid, ganttActivityArea);\r\n    }\r\n\r\n    /** Removes or adds children for given parent tasks back into DOM by updating TASK_CACHE */\r\n    toggleChildren(rowElem: any, task: any) {\r\n        try {\r\n            let isParent: boolean = \"true\" === rowElem.getAttribute('data-isparent');\r\n            let parentId: string = rowElem.getAttribute('data-parentid').replace(\"_\", \"\"); // remove id prefix\r\n            let children: any = document.querySelectorAll('[data-parentid=' + rowElem.getAttribute('data-parentid') + '][data-isparent=false]');\r\n\r\n            // use the task cache to allow deleting of items without polluting the project.tasks array\r\n            if (isParent) {\r\n                // remove children from the DOM as we don't want them if we are collapsing the parent\r\n                if (children.length > 0) {\r\n                    let childrenIds: any[] = this.ganttService.TASK_CACHE.filter((task: any) => {\r\n                        return task.parentId == parentId && task.treePath.split('/').length > 1;\r\n                    }).map((item: any) => { return item.id });\r\n\r\n                    childrenIds.forEach((item: any) => {\r\n                        var removedIndex = this.ganttService.TASK_CACHE.map((item: any) => { return item.id }).indexOf(item);\r\n\r\n                        this.ganttService.TASK_CACHE.splice(removedIndex, 1);\r\n                    });\r\n\r\n                    if (this.activityActions.expanded) {\r\n                        this.expand(true);\r\n                    }\r\n\r\n                } else {\r\n                    // CHECK the project cache to see if this parent id has any children\r\n                    // and if so push them back into array so DOM is updated\r\n                    let childrenTasks: any[] = this.project.tasks.filter((task: any) => {\r\n                        return task.parentId === parentId && task.treePath.split('/').length > 1;\r\n                    });\r\n\r\n                    childrenTasks.forEach((task: any) => {\r\n                        this.ganttService.TASK_CACHE.push(task);\r\n                    });\r\n\r\n                    if (this.activityActions.expanded) {\r\n                        this.expand(true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.onGridRowClick.emit(task);\r\n\r\n        } catch (err) { }\r\n    }\r\n\r\n    /** Removes or adds children tasks back into DOM by updating TASK_CACHE */\r\n    toggleAllChildren() {\r\n        try {\r\n            var children: any = document.querySelectorAll('[data-isparent=false]');\r\n            var childrenIds: string[] = Array.prototype.slice.call(children).map((item: any) => {\r\n                return item.getAttribute('data-id').replace(\"_\", \"\"); // remove id prefix\r\n            });\r\n\r\n            // push all the children array items into cache\r\n            if (this.treeExpanded) {\r\n                if (children.length > 0) {\r\n                    let childrenIds: string[] = this.ganttService.TASK_CACHE.filter((task: any) => {\r\n                        return task.treePath.split('/').length > 1;\r\n                    }).map((item: any) => { return item.id });\r\n\r\n                    childrenIds.forEach((item: any) => {\r\n                        var removedIndex = this.ganttService.TASK_CACHE.map((item: any) => { return item.id }).indexOf(item);\r\n                        this.ganttService.TASK_CACHE.splice(removedIndex, 1);\r\n                    });\r\n                }\r\n\r\n                this.treeExpanded = false;\r\n\r\n                if (this.activityActions.expanded) {\r\n                    this.expand(true);\r\n                }\r\n            } else {\r\n                // get all children tasks in project input\r\n                let childrenTasks: any[] = this.project.tasks.filter((task: any) => {\r\n                    return task.treePath.split('/').length > 1;\r\n                });\r\n\r\n                if (children.length > 0) {\r\n                    // filter out these children as they already exist in task cache\r\n                    childrenTasks = childrenTasks.filter((task: any) => {\r\n                        return childrenIds.indexOf(task.id) === -1;\r\n                    });\r\n                }\r\n\r\n                childrenTasks.forEach((task: any) => {\r\n                    this.ganttService.TASK_CACHE.push(task);\r\n                });\r\n\r\n                this.treeExpanded = true;\r\n\r\n                if (this.activityActions.expanded) {\r\n                    this.expand(true);\r\n                }\r\n            }\r\n        } catch (err) { }\r\n    }\r\n\r\n    /** On resize of browser window dynamically adjust gantt activity height and width */\r\n    onResize(event: any): void {\r\n        let activityContainerSizes = this.ganttService.calculateActivityContainerDimensions();\r\n        if (this.activityActions.expanded) {\r\n            this.ganttActivityHeight = this.ganttService.TASK_CACHE.length * this.ganttService.rowHeight + this.ganttService.rowHeight * 3 + 'px';\r\n        } else {\r\n            this.ganttActivityHeight = activityContainerSizes.height + 'px';;\r\n        }\r\n\r\n        this.ganttActivityWidth = activityContainerSizes.width;\r\n    }\r\n\r\n    setScale() {\r\n        this.scale.start = this.start;\r\n        this.scale.end = this.end;\r\n    }\r\n\r\n    setDimensions() {\r\n        this.dimensions.height = this.containerHeight;\r\n        this.dimensions.width = this.containerWidth;\r\n    }\r\n\r\n    setGridRowStyle(isParent: boolean): any {\r\n        if (isParent) {\r\n            return {\r\n                'height': this.ganttService.rowHeight + 'px',\r\n                'line-height': this.ganttService.rowHeight + 'px',\r\n                'font-weight': 'bold',\r\n                'cursor': 'pointer'\r\n            };\r\n        }\r\n\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px',\r\n            'line-height': this.ganttService.rowHeight + 'px'\r\n        };\r\n    }\r\n\r\n    /** Set the zoom level e.g hours, days */\r\n    zoomTasks(level: string) {\r\n        this.zoomLevel = level;\r\n        this.zoom.emit(this.zoomLevel);\r\n        this.containerWidth = this.calculateContainerWidth();\r\n        this.setDimensions();\r\n        document.querySelector('.gantt_activity').scrollLeft = 0 // reset scroll left, replace with @ViewChild?\r\n    }\r\n\r\n    /** Expand the gantt grid and activity area height */\r\n    expand(force?: boolean): void {\r\n        var verticalScroll = document.querySelector('.gantt_vertical_scroll');\r\n        var ganttActivityHeight: string = `${this.ganttService.TASK_CACHE.length * this.ganttService.rowHeight + this.ganttService.rowHeight * 3}px`;\r\n\r\n        if (force && this.activityActions.expanded) {\r\n            this.ganttActivityHeight = ganttActivityHeight;\r\n        } else if (this.activityActions.expanded) {\r\n            this.activityActions.expanded = false;\r\n            this.activityActions.expandedIcon = this.downTriangle;\r\n            this.ganttActivityHeight = '300px';\r\n        } else {\r\n            verticalScroll.scrollTop = 0;\r\n\r\n            this.activityActions.expanded = true;\r\n            this.activityActions.expandedIcon = this.upTriangle;\r\n            this.ganttActivityHeight = ganttActivityHeight;\r\n        }\r\n    }\r\n\r\n    /** Get the status icon unicode string */\r\n    getStatusIcon(status: string, percentComplete: number): string {\r\n        var checkMarkIcon: string = '&#x2714;';\r\n        var upBlackPointer: string = '&#x25b2;';\r\n        var crossMarkIcon: string = '&#x2718;';\r\n\r\n        if (status === \"Completed\" || percentComplete === 100 && status !== \"Error\") {\r\n            return checkMarkIcon;\r\n        } else if (status === \"Warning\") {\r\n            return upBlackPointer;\r\n        } else if (status === \"Error\") {\r\n            return crossMarkIcon;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /** Get the status icon color */\r\n    getStatusIconColor(status: string, percentComplete: number): string {\r\n        if (status === \"Completed\" || percentComplete === 100 && status !== \"Error\") {\r\n            return 'green';\r\n        } else if (status === \"Warning\") {\r\n            return 'orange';\r\n        } else if (status === \"Error\") {\r\n            return 'red';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    setGridScaleStyle() {\r\n        var height = this.ganttService.rowHeight;\r\n\r\n        if (this.zoomLevel === Zooming[Zooming.hours]) {\r\n            height *= 2;\r\n        }\r\n\r\n        return {\r\n            'height': height + 'px',\r\n            'line-height': height + 'px',\r\n            'width': this.ganttService.gridWidth + 'px'\r\n        };\r\n    }\r\n\r\n    private calculateContainerHeight(): number {\r\n        return this.ganttService.TASK_CACHE.length * this.ganttService.rowHeight;\r\n    }\r\n\r\n    private calculateContainerWidth(): number {\r\n        if (this.zoomLevel === Zooming[Zooming.hours]) {\r\n            return this.ganttService.TIME_SCALE.length * this.ganttService.hourCellWidth * 24 + this.ganttService.hourCellWidth\r\n        } else {\r\n            return this.ganttService.TIME_SCALE.length * this.ganttService.cellWidth + this.ganttService.cellWidth;\r\n        }\r\n    }\r\n\r\n    private setSizes(): void {\r\n        this.ganttActivityHeight = this.activityContainerSizes.height + 'px';\r\n        this.ganttActivityWidth = this.activityContainerSizes.width;\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, ViewChild } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\nimport { Zooming } from '../../shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'time-scale',\r\n    template: `\r\n        <div class=\"time-scale\" [ngStyle]=\"setTimescaleStyle()\">\r\n            <div class=\"time-scale-line\" [ngStyle]=\"setTimescaleLineStyle('none')\">\r\n                <div class=\"time-scale-cell\" *ngFor=\"let date of timeScale\" \r\n                    [ngStyle]=\"setTimescaleCellStyle()\"\r\n                    [ngClass]=\"(isDayWeekend(date)) ? 'weekend' : ''\">{{date | date: 'dd-MM-yyyy'}}</div>\r\n            </div>\r\n            <div *ngIf=\"zoomLevel === 'hours'\" class=\"time-scale-line\" [ngStyle]=\"setTimescaleLineStyle('1px solid #cecece')\">\r\n                <div class=\"time-scale-cell\"\r\n                    *ngFor=\"let hour of getHours()\"\r\n                    [ngStyle]=\"{ 'width': ganttService.hourCellWidth + 'px' }\">{{hour}}</div>\r\n            </div>\r\n        </div>`,\r\n    styles: [`\r\n        .weekend {\r\n            background-color: whitesmoke;\r\n        }\r\n        .time-scale {\r\n            font-size: 12px;\r\n            border-bottom: 1px solid #cecece;\r\n            background-color: #fff;\r\n        }\r\n        .time-scale-line {\r\n            box-sizing: border-box;\r\n        }\r\n        .time-scale-line:first-child {\r\n            border-top: none;\r\n        }\r\n        .time-scale-cell {\r\n            display: inline-block;\r\n            white-space: nowrap;\r\n            overflow: hidden;\r\n            border-right: 1px solid #cecece;\r\n            text-align: center;\r\n            height: 100%;\r\n        }`\r\n    ],\r\n    providers: [\r\n        GanttService\r\n    ]\r\n})\r\nexport class GanttTimeScaleComponent implements OnInit {\r\n    @Input() timeScale: any;\r\n    @Input() dimensions: any;\r\n    @Input() zoom: any;\r\n    @Input() zoomLevel: any;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n        this.zoom.subscribe((zoomLevel: string) => {\r\n            this.zoomLevel = zoomLevel;\r\n        });\r\n    }\r\n\r\n    setTimescaleStyle() {\r\n        return {\r\n            'width': this.dimensions.width + 'px'\r\n        };\r\n    }\r\n\r\n    setTimescaleLineStyle(borderTop: string) {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px',\r\n            'line-height': this.ganttService.rowHeight + 'px',\r\n            'position': 'relative',\r\n            'border-top': borderTop\r\n        };\r\n    }\r\n\r\n    setTimescaleCellStyle() {\r\n        var width = this.ganttService.cellWidth;\r\n        var hoursInDay = 24;\r\n        var hourSeperatorPixels = 23; // we don't include the first \r\n\r\n        if (this.zoomLevel ===  Zooming[Zooming.hours]) {\r\n            width = this.ganttService.hourCellWidth * hoursInDay + hourSeperatorPixels; \r\n        }\r\n\r\n        return {\r\n            'width': width + 'px'\r\n        };\r\n    }\r\n\r\n    isDayWeekend(date: Date): boolean {\r\n        return this.ganttService.isDayWeekend(date);\r\n    }\r\n\r\n    getHours(): string[] {\r\n        return this.ganttService.getHours(this.timeScale.length);\r\n    }\r\n}","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\nimport { Zooming } from '../../shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'activity-background',\r\n    template: `\r\n    <div #bg class=\"gantt-activity-bg\">\r\n        <div class=\"gantt-activity-row\"\r\n            [ngStyle]=\"setRowStyle()\"\r\n            *ngFor=\"let row of ganttService.groupData(tasks)\">\r\n\r\n            <div class=\"gantt-activity-cell\"\r\n                [ngStyle]=\"setCellStyle()\"\r\n                *ngFor=\"let cell of cells; let l = last\"\r\n                [ngClass]=\"[(isDayWeekend(cell)) ? 'weekend' : '', l ? 'last-column-cell' : '']\"></div>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-activity-bg {\r\n            overflow: hidden;\r\n        }\r\n        .gantt-activity-row {\r\n            border-bottom: 1px solid #ebebeb;\r\n            background-color: #fff;\r\n            box-sizing: border-box;\r\n        }\r\n        .gantt-activity-cell {\r\n            display: inline-block;\r\n            height: 100%;\r\n            border-right: 1px solid #ebebeb;\r\n        }\r\n        .weekend {\r\n            background-color: whitesmoke;\r\n        }\r\n    `]\r\n})\r\nexport class GanttActivityBackgroundComponent implements OnInit {\r\n    @Input() tasks: any;\r\n    @Input() timeScale: any;\r\n    @Input() zoom: any;\r\n    @Input() zoomLevel: string;\r\n\r\n    @ViewChild('bg') bg: ElementRef;\r\n\r\n    rows: any[] = [];\r\n    cells: any[] = [];\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n        this.drawGrid();\r\n\r\n        this.zoom.subscribe((zoomLevel: string) => {\r\n            this.zoomLevel = zoomLevel;\r\n            this.drawGrid();\r\n        });\r\n    }\r\n\r\n    isDayWeekend(date: Date): boolean {\r\n        return this.ganttService.isDayWeekend(date);\r\n    }\r\n\r\n    setRowStyle() {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px'\r\n        };\r\n    }\r\n\r\n    setCellStyle() {\r\n        var width = this.ganttService.cellWidth;\r\n\r\n        if (this.zoomLevel === Zooming[Zooming.hours]) {\r\n            width = this.ganttService.hourCellWidth;\r\n        }\r\n\r\n        return {\r\n            'width': width + 'px'\r\n        };\r\n    }\r\n\r\n    private drawGrid(): void {\r\n        if (this.zoomLevel === Zooming[Zooming.hours]) {\r\n            this.cells = [];\r\n\r\n            this.timeScale.forEach((date: any) => {\r\n                for (var i = 0; i <= 23; i++) {\r\n                    this.cells.push(date);\r\n                }\r\n            });\r\n        } else {\r\n            this.cells = this.timeScale;\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, Input, ElementRef } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\nimport { Zooming } from '../../shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'activity-bars',\r\n    template: `\r\n    <div class=\"gantt-activity-bars-area\" \r\n        [ngStyle]=\"{ 'height': containerHeight + 'px', 'width': containerWidth + 'px' }\">\r\n\r\n        <div #bar class=\"gantt-activity-line\"\r\n            *ngFor=\"let task of ganttService.groupData(tasks); let i = index\"\r\n            [ngStyle]=\"drawBar(task, i)\">\r\n\r\n            <div class=\"gantt-activity-progress\" [ngStyle]=\"drawProgress(task, bar)\"></div>\r\n            <div class=\"gantt-activity-progress_drag\" style=\"left: 518px\"></div>\r\n            <div class=\"gantt-activity-content\"></div>\r\n            <div class=\"gantt-activity-link-control gantt-activity-right\" style=\"height: 26px; line-height: 30px\">\r\n                <div class=\"gantt-link-point\"></div>\r\n            </div>\r\n            <div class=\"gantt-activity-link-control gantt-activity-left\" style=\"height: 26px; line-height: 30px\">\r\n                <div class=\"gantt-link-point\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n    .gantt-activity-line {\r\n        /*border-radius: 2px;*/\r\n        position: absolute;\r\n        box-sizing: border-box;\r\n        background-color: rgb(18,195,244);\r\n        border: 1px solid #2196F3;\r\n        -webkit-user-select: none;\r\n    }\r\n    .gantt-activity-line:hover {\r\n        /*cursor: move;*/\r\n    }\r\n    .gantt-activity-progress {\r\n        text-align: center;\r\n        z-index: 0;\r\n        background: #2196F3;\r\n        position: absolute;\r\n        min-height: 18px;\r\n        display: block;\r\n        height: 18px;\r\n    }\r\n    .gantt-activity-progress-drag {\r\n        height: 8px;\r\n        width: 8px;\r\n        bottom: -4px;\r\n        margin-left: 4px;\r\n        background-position: bottom;\r\n        background-image: \"\";\r\n        background-repeat: no-repeat;\r\n        z-index: 2;\r\n    }\r\n    .gantt-activity-content {\r\n        font-size: 12px;\r\n        color: #fff;\r\n        width: 100%;\r\n        top: 0;\r\n        position: absolute;\r\n        white-space: nowrap;\r\n        text-align: center;\r\n        line-height: inherit;\r\n        overflow: hidden;\r\n        height: 100%;\r\n    }\r\n    .gantt-activity-link-control {\r\n        position: absolute;\r\n        width: 13px;\r\n        top: 0;\r\n    }\r\n    .gantt-activity-right {\r\n        right: 0;\r\n    }\r\n    .gantt-activity-left {\r\n        left: 0;\r\n    }\r\n    .gantt-activity-right:hover {\r\n        cursor:w-resize;\r\n    }\r\n    .gantt-activity-left:hover {\r\n        cursor:w-resize;\r\n    }\r\n    `],\r\n    providers: [\r\n        GanttService\r\n    ]\r\n})\r\nexport class GanttActivityBarsComponent implements OnInit {\r\n    @Input() timeScale: any;\r\n    @Input() dimensions: any;\r\n    @Input() tasks: any;\r\n    @Input() zoom: any;\r\n    @Input() zoomLevel: any;\r\n\r\n    containerHeight: number = 0;\r\n    containerWidth: number = 0;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n        this.containerHeight = this.dimensions.height;\r\n        this.containerWidth = this.dimensions.width;\r\n\r\n        this.zoom.subscribe((zoomLevel: string) => {\r\n            this.zoomLevel = zoomLevel;\r\n        });;\r\n    }\r\n\r\n    //TODO(dale): the ability to move bars needs reviewing and there are a few quirks\r\n    expandLeft($event: any, bar: any) {\r\n        $event.stopPropagation();\r\n\r\n        let ganttService = this.ganttService;\r\n        let startX = $event.clientX;\r\n        let startBarWidth = bar.style.width;\r\n        let startBarLeft = bar.style.left;\r\n\r\n        function doDrag(e: any) {\r\n            let cellWidth = ganttService.cellWidth;\r\n            let barWidth = startBarWidth - e.clientX + startX;\r\n            let days = Math.round(barWidth / cellWidth);\r\n\r\n            bar.style.width = days * cellWidth + days;\r\n            bar.style.left = (startBarLeft - (days * cellWidth) - days);\r\n        }\r\n\r\n        this.addMouseEventListeners(doDrag);\r\n\r\n        return false;\r\n    }\r\n\r\n    expandRight($event: any, bar: any) {\r\n        $event.stopPropagation();\r\n\r\n        let ganttService = this.ganttService;\r\n        let startX = $event.clientX;\r\n        let startBarWidth = bar.style.width;\r\n        let startBarEndDate = bar.task.end;\r\n        let startBarLeft = bar.style.left;\r\n\r\n        function doDrag(e: any) {\r\n            let cellWidth = ganttService.cellWidth;\r\n            let barWidth = startBarWidth + e.clientX - startX;\r\n            let days = Math.round(barWidth / cellWidth);\r\n\r\n            if (barWidth < cellWidth) {\r\n                barWidth = cellWidth;\r\n                days = Math.round(barWidth / cellWidth);\r\n            }\r\n            bar.style.width = ((days * cellWidth) + days); // rounds to the nearest cell\r\n        }\r\n\r\n        this.addMouseEventListeners(doDrag);\r\n\r\n        return false;\r\n    }\r\n\r\n    move($event: any, bar: any) {\r\n        $event.stopPropagation();\r\n\r\n        let ganttService = this.ganttService;\r\n        let startX = $event.clientX;\r\n        let startBarLeft = bar.style.left;\r\n\r\n        function doDrag(e: any) {\r\n            let cellWidth = ganttService.cellWidth;\r\n            let barLeft = startBarLeft + e.clientX - startX;\r\n            let days = Math.round(barLeft / cellWidth);\r\n\r\n            // TODO: determine how many days the bar can be moved\r\n            // if (days < maxDays) {\r\n            bar.style.left = ((days * cellWidth) + days); // rounded to nearest cell\r\n\r\n            // keep bar in bounds of grid\r\n            if (barLeft < 0) {\r\n                bar.style.left = 0;\r\n            }\r\n            // }\r\n            // TODO: it needs to take into account the max number of days.\r\n            // TODO: it needs to take into account the current days.\r\n            // TODO: it needs to take into account the right boundary.\r\n        }\r\n\r\n        this.addMouseEventListeners(doDrag);\r\n\r\n        return false;\r\n    }\r\n\r\n    drawBar(task: any, index: number) {\r\n        let style = {};\r\n\r\n        if (this.zoomLevel === Zooming[Zooming.hours]) {\r\n            style = this.ganttService.calculateBar(task, index, this.timeScale, true);\r\n        } else {\r\n            style = this.ganttService.calculateBar(task, index, this.timeScale);\r\n        }\r\n        return style;\r\n    }\r\n\r\n    drawProgress(task: any, bar: any): any {\r\n        var barStyle = this.ganttService.getBarProgressStyle(task.status);\r\n        var width = this.ganttService.calculateBarProgress(this.ganttService.getComputedStyle(bar, 'width'), task.percentComplete);\r\n\r\n        return {\r\n            'width': width,\r\n            'background-color': barStyle[\"background-color\"],\r\n        };\r\n    }\r\n\r\n    private addMouseEventListeners(dragFn: any) {\r\n\r\n        function stopFn() {\r\n            document.documentElement.removeEventListener('mousemove', dragFn, false);\r\n            document.documentElement.removeEventListener('mouseup', stopFn, false);\r\n            document.documentElement.removeEventListener('mouseleave', stopFn, false);\r\n        }\r\n\r\n        document.documentElement.addEventListener('mousemove', dragFn, false);\r\n        document.documentElement.addEventListener('mouseup', stopFn, false);\r\n        document.documentElement.addEventListener('mouseleave', stopFn, false);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { GanttActivityComponent } from './gantt-activity.component';\r\nimport { GanttTimeScaleComponent } from './time-scale/gantt-time-scale.component';\r\nimport { GanttActivityBackgroundComponent } from './background/activity-background.component';\r\nimport { GanttActivityBarsComponent } from './bars/activity-bars.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n    ],\r\n    exports: [\r\n        GanttActivityComponent,\r\n        GanttTimeScaleComponent,\r\n        GanttActivityBackgroundComponent,\r\n        GanttActivityBarsComponent\r\n    ],\r\n    declarations: [\r\n        GanttActivityComponent,\r\n        GanttTimeScaleComponent,\r\n        GanttActivityBackgroundComponent,\r\n        GanttActivityBarsComponent\r\n    ],\r\n    providers: [],\r\n})\r\nexport class GanttActivityModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { GanttComponent } from './gantt.component';\r\nimport { GanttHeaderComponent } from './header/gantt-header.component';\r\nimport { GanttFooterComponent } from './footer/gantt-footer.component';\r\nimport { GanttService } from './shared/services/gantt.service';\r\nimport { GanttActivityModule } from './activity/gantt-activity.module';\r\n\r\nimport { GroupByPipe } from './shared/pipes/groupBy.pipe';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        GanttActivityModule,\r\n    ],\r\n    exports: [\r\n        GanttComponent\r\n    ],\r\n    declarations: [\r\n        GanttComponent,\r\n        GanttHeaderComponent,\r\n        GanttFooterComponent,\r\n        GroupByPipe\r\n    ],\r\n    providers: [GanttService],\r\n})\r\nexport class GanttModule { }"],"names":["Injectable","Pipe","EventEmitter","Component","Input","Output","ChangeDetectionStrategy","ElementRef","ViewChild","NgModule","CommonModule","FormsModule"],"mappings":"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"}
