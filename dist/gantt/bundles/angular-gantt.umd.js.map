{"version":3,"file":"angular-gantt.umd.js","sources":["ng://angular-gantt/lib/shared/services/gantt-config.service.ts","ng://angular-gantt/lib/shared/services/gantt.service.ts","ng://angular-gantt/lib/activity/time-scale/gantt-time-scale.component.ts","ng://angular-gantt/lib/activity/background/activity-background.component.ts","ng://angular-gantt/lib/activity/bars/activity-bars.component.ts","ng://angular-gantt/lib/activity/gantt-activity.component.ts","ng://angular-gantt/lib/gantt.component.ts","ng://angular-gantt/lib/header/gantt-header.component.ts","ng://angular-gantt/lib/footer/gantt-footer.component.ts","ng://angular-gantt/lib/activity/gantt-activity.module.ts","ng://angular-gantt/lib/gantt.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GanttConfig {\r\n    public cellWidth = 38;\r\n    public rowHeight = 30;\r\n    public activityHeight = 420;\r\n    public barHeight = 25;\r\n    public barLineHeight = 35;\r\n    public barMoveable = false;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { GanttConfig } from './gantt-config.service';\r\nimport { Task, IScale } from '../interfaces';\r\n\r\n@Injectable()\r\nexport class GanttService {\r\n    public rowHeight = 0;\r\n    public hourCellWidth = 60; // change to 60 so minutes can been seen more easily\r\n    public hoursCellWidth = this.hourCellWidth * 25;\r\n    public cellWidth = 0;\r\n    public windowInnerWidth = 0;\r\n    public activityHeight = 0;\r\n    public barHeight = 0;\r\n    public barLineHeight = 0;\r\n    public barTop = 0;\r\n    public barMoveable = false;\r\n    public gridWidth = 0; //188\r\n    public gridHeight = 332;\r\n    public TASK_CACHE: any[];\r\n    public TIME_SCALE: any[];\r\n    public MONTH_SCALE: any[];\r\n\r\n    constructor() {\r\n        const ganttConfig = new GanttConfig();\r\n\r\n        this.rowHeight = ganttConfig.rowHeight;\r\n        this.cellWidth = ganttConfig.cellWidth;\r\n        this.activityHeight = ganttConfig.activityHeight;\r\n        this.barHeight = ganttConfig.barHeight;\r\n        this.barLineHeight = ganttConfig.barLineHeight;\r\n        this.barTop = ganttConfig.rowHeight;\r\n        this.barMoveable = ganttConfig.barMoveable;\r\n    }\r\n\r\n    private calculateBarWidth(start: Date, end: Date): number {\r\n        if (typeof start === 'string') {\r\n            start = new Date(start);\r\n        }\r\n\r\n        if (typeof end === 'string') {\r\n            end = new Date(end);\r\n        }\r\n\r\n        const days = this.calculateDiffDays(start, end);\r\n        const width: number = (days * this.cellWidth + days) / 7;\r\n        return width;\r\n    }\r\n\r\n    private calculateBarLeft(start: Date, scale: any[]): number {\r\n        let left = 0;\r\n\r\n        if (start != null) {\r\n            if (typeof start === 'string') {\r\n                start = new Date();\r\n            }\r\n\r\n            for (let i = 0; i < scale.length; i++) {\r\n                if (start.getTime() >= scale[i].getTime() && start.getTime() < scale[i + 1].getTime()) {\r\n                    // left = i * this.cellWidth + i + this.calculateBarLeftDelta(start) +\r\n                    //    ((7 / (scale[i + 1].getDate() - start.getDate()) / 7) * this.cellWidth) - this.cellWidth / 7;\r\n                    left = i * this.cellWidth + ((this.cellWidth) * this.calculateDiffDays(scale[i], start) / 7) +\r\n                        i + this.calculateBarLeftDelta(start);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return left;\r\n    }\r\n\r\n    /** Calculates the height of the gantt grid, activity and vertical scroll */\r\n    public calculateGanttHeight(): string {\r\n        return `${this.TASK_CACHE.length * this.rowHeight}px`;\r\n    }\r\n\r\n    private calculateBarLeftDelta(start: Date): number {\r\n        let offset = 0;\r\n        const hoursInDay = 24;\r\n        const minutesInHour = 60;\r\n        const secondsInHour = 3600;\r\n        const startHours: number =\r\n            (start.getHours() + start.getMinutes() / minutesInHour + start.getSeconds() / secondsInHour);\r\n\r\n        offset = this.cellWidth / hoursInDay * startHours;\r\n        return offset;\r\n    }\r\n\r\n    /** Calculate the bar styles */\r\n    public calculateBar(task: any, index: number, scale: any) {\r\n        const barStyle = this.getBarStyle(task.color);\r\n        return {\r\n            'top': this.barTop * index + 2 + 'px',\r\n            'left': this.calculateBarLeft(task.start, scale) + 'px',\r\n            'height': this.barHeight + 'px',\r\n            'line-height': this.barLineHeight + 'px',\r\n            'width': this.calculateBarWidth(task.start, task.end) + 'px',\r\n            'background-color': barStyle[\"background-color\"],\r\n            'border-left': barStyle[\"border-left\"]\r\n        };\r\n    }\r\n\r\n    /** Get the bar style based on task status */\r\n    private getBarStyle(color: any): any {\r\n        const style = {};\r\n        style[\"background-color\"] = color.secondary;\r\n        style[\"border-left\"] = `5px solid ${color.primary}`;\r\n\r\n        return style;\r\n    }\r\n\r\n    /** Calculates the difference in two dates and returns number of days */\r\n    public calculateDiffDays(start: Date, end: Date): number {\r\n        try {\r\n            const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds /ms\r\n            const diffDays = Math.abs((start.getTime() - end.getTime()) / (oneDay));\r\n            const days = diffDays; // don't use Math.round as it will draw an incorrect bar\r\n            return days;\r\n        } catch (err) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /** Calculate the gantt scale range given the start and end date of tasks*/\r\n    public calculateScale(start: Date = new Date(), end: Date = this.addDays(start, 7)) {\r\n        const scale: any[] = [];\r\n        try {\r\n            while (start.getTime() <= end.getTime()) {\r\n                scale.push(start);\r\n                start = this.addDays(start, 7);\r\n            }\r\n            return scale;\r\n\r\n        } catch (err) {\r\n            return scale;\r\n        }\r\n    }\r\n\r\n    public calculateMonthScale(start: Date = new Date(), end: Date = this.addDays(start, 7)) {\r\n        let scale: any[] = [];\r\n        try {\r\n            // while (start.getTime() <= end.getTime()) {\r\n            //     scale.push({ start: start, width: this.calculateCellMonthWidth(start, end) });\r\n            //     start = this.addDays(start, new Date(start.getFullYear(), start.getMonth() + 1, 0).getDate());\r\n            // }\r\n            scale = this.calculateCellMonthWidth(start, end);\r\n            return scale;\r\n\r\n        } catch (err) {\r\n            return scale;\r\n        }\r\n    }\r\n\r\n    /** Determines whether given date is a weekend */\r\n    public isDayWeekend(date: Date): boolean {\r\n        const day = date.getDay();\r\n        if (day === 6 || day === 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /** Add x number of days to a date object */\r\n    public addDays(date: Date, days: number): Date {\r\n        const result = new Date(date);\r\n        result.setDate(result.getDate() + days);\r\n        return result;\r\n    }\r\n\r\n    //** Remove x number of days from a date object */\r\n    public removeDays(date: Date, days: number): Date {\r\n        const result = new Date(date);\r\n        result.setDate(result.getDate() - days);\r\n        return result;\r\n    }\r\n\r\n    /** Calculates the grid scale for gantt based on tasks start and end dates */\r\n    public calculateGridScale(tasks: Task[]): IScale {\r\n        let start: Date;\r\n        let end: Date;\r\n        const dates = tasks.map((task: any) => {\r\n            return {\r\n                start: new Date(task.start),\r\n                end: new Date(task.end)\r\n            };\r\n        });\r\n\r\n        start = new Date(Math.min.apply(null, dates.map((t) => {\r\n            return t.start;\r\n        })));\r\n\r\n        end = new Date(Math.max.apply(null, dates.map((t) => {\r\n            return t.end;\r\n        })));\r\n\r\n        return {\r\n            start: start,\r\n            end: end\r\n        };\r\n    }\r\n\r\n    public getComputedStyle(element: any, attribute: any) {\r\n        return parseInt(document.defaultView.getComputedStyle(element)[attribute], 10);\r\n    }\r\n\r\n    //TODO(dale): determine whether this is needed\r\n    public calculateContainerWidth(): number {\r\n        this.windowInnerWidth = window.innerWidth;\r\n        const containerWidth = this.gridWidth - 18;\r\n        return containerWidth;\r\n    }\r\n\r\n    public calculateContainerHeight(): number {\r\n        const containerHeight = (innerHeight - 18);\r\n        return containerHeight;\r\n    }\r\n\r\n    public calculateActivityContainerDimensions(): any {\r\n        const scrollWidth = 18;\r\n        this.windowInnerWidth = window.innerWidth;\r\n        const width = window.innerWidth - this.gridWidth - scrollWidth;\r\n\r\n        return { height: this.activityHeight, width: width };\r\n    }\r\n\r\n    public calculateGanttActivityWidth(elem: HTMLElement): any {\r\n        return `calc(100% - ${(elem.offsetWidth + 1)}px)`;\r\n    }\r\n\r\n    public calculateGanttActivityHeight(elem: HTMLElement): any {\r\n        return `${elem.offsetHeight}px`;\r\n    }\r\n\r\n    public calculateCellMonthWidth(minDate: Date, maxDate: Date) {\r\n        var i, result = [];\r\n        var startDate = minDate;\r\n        var endDate = maxDate;\r\n        var monthDiff = this.calculateDiffMonths(startDate, endDate);\r\n        var dayDiff = this.calculateDiffDays(startDate, endDate);\r\n\r\n        for (i = 0; i < monthDiff; i++) {\r\n            var startOfMonth = i === 0 ? startDate : new Date(startDate.getFullYear(), i, 1);\r\n            var endOfMonth = i === monthDiff - 1 ? endDate : new Date(startDate.getFullYear(), i + 1, 0);\r\n            var dayInMonth = this.calculateDiffDays(startOfMonth, endOfMonth) + (i !== monthDiff - 1 && 1);\r\n            var width = Math.floor(dayInMonth / dayDiff * 2E3) * 1.025;\r\n\r\n            result.push({ start: startOfMonth, end: endOfMonth, width: width });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private calculateDiffMonths(start, end) {\r\n        var months = end.getMonth() - start.getMonth() + (12 * (end.getFullYear() - start.getFullYear()));\r\n\r\n        if(end.getDate() < start.getDate()) {\r\n            var newFrom = new Date(end.getFullYear(), end.getMonth(),start.getDate());\r\n            if (end < newFrom  && end.getMonth() == newFrom.getMonth() && end.getYear() % 4 != 0) {\r\n                months--;\r\n            }\r\n        }\r\n\r\n        return months + 1;\r\n    }\r\n\r\n    /** Set the vertical scroll top positions for gantt */\r\n    public scrollTop(verticalScrollElem: any, ganttGridElem: any, ganttActivityAreaElem: any) {\r\n        const verticalScrollTop = verticalScrollElem.scrollTop;\r\n        const scroll = this.setScrollTop;\r\n\r\n        // debounce\r\n        if (verticalScrollTop !== null && verticalScrollTop !== undefined) {\r\n            scroll(verticalScrollTop, ganttActivityAreaElem);\r\n            scroll(ganttActivityAreaElem.scrollTop, ganttGridElem);\r\n        }\r\n    }\r\n\r\n    /** Group data by id , only supports one level*/\r\n    public groupData(tasks: any): any {\r\n        return tasks;\r\n    }\r\n\r\n    /** Checks whether any new data needs to be added to task cache  */\r\n    public doTaskCheck(tasks: any[], scale: any): boolean {\r\n        // const cachedTaskIds = this.TASK_CACHE.map((task: any) => { return task.id });\r\n        // const itemsToCache: any[] = [];\r\n\r\n        // only look at tasks that are not cached\r\n        // tasks.filter((task: any) => {\r\n        //     return cachedTaskIds.indexOf(task.id) === -1;\r\n        // }).forEach((task: any) => {\r\n        //     itemsToCache.push(task);\r\n        // });\r\n\r\n        // itemsToCache.forEach((item: any) => {\r\n        //     this.TASK_CACHE.push(item);\r\n        // });\r\n\r\n        // if (itemsToCache.length > 0) {\r\n        //     return true;\r\n        // }\r\n\r\n        this.TASK_CACHE = tasks;\r\n\r\n        this.TIME_SCALE = this.calculateScale(scale.start, scale.end);\r\n        this.MONTH_SCALE = this.calculateMonthScale(scale.start, scale.end);\r\n\r\n        return true;\r\n    }\r\n\r\n    /** Set a id prefix so CSS3 query selector can work with ids that contain numbers */\r\n    public setIdPrefix(id: string): string {\r\n        return `_${id}`;\r\n    }\r\n\r\n    // /** Remove the id prefix to allow querying of data */\r\n    // public removeIdPrefix(id: string): string {\r\n    //     return id.substring(1, id.length - 1);\r\n    // }\r\n\r\n    /** Set the scroll top property of a native DOM element */\r\n    public setScrollTop(scrollTop: number, element: any): void {\r\n        if (element !== null && element !== undefined) {\r\n            element.scrollTop = scrollTop;\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\nimport { IScale } from '../../shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'time-scale',\r\n    template: `\r\n        <div class=\"time-scale\" [ngStyle]=\"setTimescaleStyle()\">\r\n            <!--<div class=\"time-scale-line\" [ngStyle]=\"setTimescaleMonthLineStyle('none')\">\r\n                <div class=\"time-scale-cell\" *ngFor=\"let scale of timeScaleMonth; let i = index\"\r\n                    [ngClass]=\"(i % 2) ? 'weekend' : ''\" [style.width.px]=\"scale.width\">{{scale.start | date: 'dd-MM'}}</div>\r\n            </div>-->\r\n            <div class=\"time-scale-line\" [ngStyle]=\"setTimescaleWeekendLineStyle('none')\">\r\n                <div class=\"time-scale-cell\" *ngFor=\"let date of timeScaleWeekend; let i = index\"\r\n                    [ngClass]=\"(i % 2) ? 'weekend' : ''\" [ngStyle]=\"setTimescaleWeekendCellStyle()\">{{date | date: 'dd-MM'}}</div>\r\n            </div>\r\n            <div class=\"time-scale-line\" [ngStyle]=\"setTimescaleWeekendLineStyle('none')\">\r\n                <div class=\"time-scale-cell\" *ngFor=\"let date of timeScaleWeekend; let i = index\"\r\n                [ngClass]=\"(i % 2) ? 'weekend' : ''\" [ngStyle]=\"setTimescaleWeekendCellStyle()\">{{i + 1}}</div>\r\n            </div>\r\n        </div>`,\r\n    styles: [`\r\n        .weekend {\r\n            background-color: whitesmoke;\r\n        }\r\n        .time-scale {\r\n            font-size: 12px;\r\n            background-color: #fff;\r\n            border-bottom: 1px solid #cecece;\r\n        }\r\n        .time-scale-line {\r\n            box-sizing: border-box;\r\n            border-bottom: 1px solid #cecece;\r\n        }\r\n        .time-scale-line:first-child {\r\n            border-top: none;\r\n        }\r\n        .time-scale-cell {\r\n            display: inline-block;\r\n            white-space: nowrap;\r\n            overflow: hidden;\r\n            border-right: 1px solid #cecece;\r\n            text-align: center;\r\n            height: 100%;\r\n        }`\r\n    ],\r\n    providers: [\r\n        GanttService\r\n    ]\r\n})\r\nexport class GanttTimeScaleComponent implements OnInit {\r\n    @Input() timeScaleMonth: any;\r\n    @Input() timeScaleWeekend: any;\r\n    @Input() dimensions: any;\r\n    @Input() scale: IScale;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    setTimescaleStyle() {\r\n        return {\r\n            'width': (this.dimensions.width + 36) + 'px'\r\n        };\r\n    }\r\n\r\n    setTimescaleMonthLineStyle(borderTop: string) {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px',\r\n            'line-height': this.ganttService.rowHeight + 'px',\r\n            'position': 'relative',\r\n            'border-top': borderTop\r\n        };\r\n    }\r\n\r\n    setTimescaleMonthCellStyle() {\r\n        return {\r\n            'width': this.ganttService.cellWidth + 'px'\r\n        };\r\n    }\r\n\r\n    setTimescaleWeekendLineStyle(borderTop: string) {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px',\r\n            'line-height': this.ganttService.rowHeight + 'px',\r\n            'position': 'relative',\r\n            'border-top': borderTop\r\n        };\r\n    }\r\n\r\n    setTimescaleWeekendCellStyle() {\r\n        return {\r\n            'width': this.ganttService.cellWidth + 'px'\r\n        };\r\n    }\r\n\r\n    isDayWeekend(date: Date): boolean {\r\n        return this.ganttService.isDayWeekend(date);\r\n    }\r\n}\r\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\n\r\n@Component({\r\n    selector: 'activity-background',\r\n    template: `\r\n    <div #bg class=\"gantt-activity-bg\">\r\n        <div class=\"gantt-activity-row\"\r\n            [ngStyle]=\"setRowStyle()\"\r\n            *ngFor=\"let row of tasks\">\r\n\r\n            <div class=\"gantt-activity-cell\"\r\n                [ngStyle]=\"setCellStyle()\"\r\n                *ngFor=\"let cell of cells; let i = index; let l = last\" [ngClass]=\"(i % 2) ? 'weekend' : ''\" ></div>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n        .weekend {\r\n            background-color: whitesmoke;\r\n        }\r\n        .gantt-activity-bg {\r\n            overflow: hidden;\r\n        }\r\n        .gantt-activity-row {\r\n            border-bottom: 1px solid #ebebeb;\r\n            background-color: #fff;\r\n            box-sizing: border-box;\r\n        }\r\n        .gantt-activity-cell {\r\n            display: inline-block;\r\n            height: 100%;\r\n            border-right: 1px solid #ebebeb;\r\n        }\r\n    `]\r\n})\r\nexport class GanttActivityBackgroundComponent implements OnInit {\r\n    @Input() tasks: any;\r\n    @Input() timeScale: any;\r\n\r\n    @ViewChild('bg') bg: ElementRef;\r\n\r\n    rows: any[] = [];\r\n    cells: any[] = [];\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n        this.drawGrid();\r\n    }\r\n\r\n    isDayWeekend(date: Date): boolean {\r\n        return this.ganttService.isDayWeekend(date);\r\n    }\r\n\r\n    setRowStyle() {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px'\r\n        };\r\n    }\r\n\r\n    setCellStyle() {\r\n        return {\r\n            'width': this.ganttService.cellWidth + 'px'\r\n        };\r\n    }\r\n\r\n    private drawGrid(): void {\r\n        this.cells = this.timeScale;\r\n    }\r\n}\r\n","import { Component, OnInit, Input, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\n\r\n@Component({\r\n    selector: 'activity-bars',\r\n    template: `\r\n    <div class=\"gantt-activity-bars-area\"\r\n        [ngStyle]=\"{ 'height': containerHeight + 'px', 'width': containerWidth + 'px' }\">\r\n\r\n        <div #bar class=\"gantt-activity-line\"\r\n            *ngFor=\"let task of tasks; let i = index\" (click)=\"gridRowClicked(task)\"\r\n            [ngStyle]=\"drawBar(task, i)\">\r\n\r\n            <div #popoverTrigger=\"mdePopoverTrigger\"\r\n                [mdePopoverTriggerFor]=\"taskPopover\"\r\n                [mdePopoverBackdropCloseOnClick]=\"false\"\r\n                mdePopoverOffsetX=\"-15\"\r\n                mdePopoverOffsetY=\"0\"\r\n                (opened)=\"popoverOpened(task)\">\r\n\r\n                <mde-popover #taskPopover=\"mdePopover\"\r\n                    [mdePopoverEnterDelay]=\"100\"\r\n                    [mdePopoverLeaveDelay]=\"0\"\r\n                    [mdePopoverPositionY]=\"'above'\"\r\n                    [mdePopoverOverlapTrigger]=\"false\"\r\n                    [mdePopoverDisableAnimation]=\"false\"\r\n                    [mdeFocusTrapEnabled]=\"false\"\r\n                    [mdePopoverArrowWidth]=\"12\"\r\n                    [mdePopoverArrowColor]=\"task.color?.primary\"\r\n                    mdePopoverPlacement=\"bottom\">\r\n\r\n                    <ng-container *ngTemplateOutlet=\"templatePopoverTask; context: {task: task}\"></ng-container>\r\n                </mde-popover>\r\n\r\n                <div class=\"gantt-activity-content\"></div>\r\n                <div class=\"gantt-activity-link-control gantt-activity-right\" style=\"height: 26px; line-height: 30px\">\r\n                    <div class=\"gantt-link-point\"></div>\r\n                </div>\r\n                <div class=\"gantt-activity-link-control gantt-activity-left\" style=\"height: 26px; line-height: 30px\">\r\n                    <div class=\"gantt-link-point\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #templatePopoverTask let-data=\"task\">\r\n        <mat-card *ngIf=\"data\" class=\"mat-elevation-z6\" \r\n            [ngStyle]=\"{ \r\n                borderBottomColor: data.color?.primary,\r\n                borderBottomWidth: '.25em',\r\n                borderBottomStyle: 'solid' \r\n            }\" style=\"width: 320px; max-width: 320px;\">\r\n\r\n            <mat-card-header>\r\n                <div mat-card-avatar [ngStyle]=\"{ borderColor: data.color?.primary }\" style=\"width: 0; height: unset; margin-bottom: .7em; border-radius: 0; border-style: solid;\"></div>\r\n                <mat-card-title>\r\n                    <span style=\"font-size: 80%;\">{{data.name}}</span>\r\n                </mat-card-title>\r\n                <mat-card-subtitle>\r\n                    <span>{{data.start | date:'yyyy-MM-dd'}} - {{data.end | date:'yyyy-MM-dd'}}</span>\r\n                </mat-card-subtitle>\r\n                <mat-card-subtitle>\r\n                    <span style=\"padding-left: .75em; padding-right: 1em; font-stretch: condensed;\">&#x336;</span>\r\n                    <span>{{data.resource}}</span>\r\n                </mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <footer *ngIf=\"data.description\">\r\n                    <span [innerHTML]=\"data.description\"></span>\r\n                </footer>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </ng-template>\r\n    `,\r\n    styles: [`\r\n    .gantt-activity-line {\r\n        /*border-radius: 2px;*/\r\n        position: absolute;\r\n        box-sizing: border-box;\r\n        -webkit-user-select: none;\r\n    }\r\n    .gantt-activity-line:hover {\r\n        cursor: pointer;\r\n    }\r\n    .gantt-activity-content {\r\n        font-size: 12px;\r\n        color: #fff;\r\n        width: 100%;\r\n        top: 0;\r\n        position: absolute;\r\n        white-space: nowrap;\r\n        text-align: center;\r\n        line-height: inherit;\r\n        overflow: hidden;\r\n        height: 100%;\r\n    }\r\n    .gantt-activity-link-control {\r\n        position: absolute;\r\n        width: 13px;\r\n        top: 0;\r\n    }\r\n    .gantt-activity-right {\r\n        right: 0;\r\n    }\r\n    .gantt-activity-left {\r\n        left: 0;\r\n    }\r\n    .gantt-activity-right:hover {\r\n        /*cursor:w-resize;*/\r\n    }\r\n    .gantt-activity-left:hover {\r\n        /*cursor:w-resize;*/\r\n    }\r\n    `],\r\n    providers: [\r\n        GanttService\r\n    ]\r\n})\r\nexport class GanttActivityBarsComponent implements OnInit {\r\n    @Input() timeScale: any;\r\n    @Input() dimensions: any;\r\n    @Input() tasks: any;\r\n\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onPopoverOpen: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    containerHeight = 0;\r\n    containerWidth = 0;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n        this.containerHeight = this.dimensions.height;\r\n        this.containerWidth = this.dimensions.width;\r\n    }\r\n\r\n    drawBar(task: any, index: number) {\r\n        let style = {};\r\n        style = this.ganttService.calculateBar(task, index, this.timeScale);\r\n\r\n        return style;\r\n    }\r\n\r\n    gridRowClicked(task: any) {\r\n        try {\r\n            this.onGridRowClick.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    popoverOpened(task: any) {\r\n        try {\r\n            this.onPopoverOpen.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    private addMouseEventListeners(dragFn: any) {\r\n        function stopFn() {\r\n            document.documentElement.removeEventListener('mousemove', dragFn, false);\r\n            document.documentElement.removeEventListener('mouseup', stopFn, false);\r\n            document.documentElement.removeEventListener('mouseleave', stopFn, false);\r\n        }\r\n\r\n        document.documentElement.addEventListener('mousemove', dragFn, false);\r\n        document.documentElement.addEventListener('mouseup', stopFn, false);\r\n        document.documentElement.addEventListener('mouseleave', stopFn, false);\r\n    }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ElementRef,  ChangeDetectionStrategy, OnChanges, DoCheck } from '@angular/core';\r\n\r\nimport { GanttService } from '../shared/services/gantt.service';\r\nimport { IGridColumn, IGanttOptions, Project, IScale } from '../shared/interfaces';\r\nimport { EventManager } from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector: 'gantt-activity',\r\n    template: `\r\n\r\n    <div class=\"grid\" #ganttGrid>\r\n        <div class=\"grid-scale\" [ngStyle]=\"setGridScaleStyle()\">\r\n            <div class=\"grid-head-cell\"\r\n                *ngFor=\"let column of gridColumns\" [style.width]=\"column.width + 'px'\"\r\n                [style.left]=\"column.left + 'px'\">\r\n\r\n                <label>\r\n                    {{column.name}}\r\n                </label>\r\n            </div>\r\n        </div>\r\n        <div class=\"grid-data\"\r\n            #ganttGridData\r\n            [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight() }\">\r\n\r\n            <div #row\r\n                *ngFor=\"let data of ganttService.TASK_CACHE\" class=\"grid-row\"\r\n                [ngStyle]=\"setGridRowStyle()\">\r\n\r\n                <mde-popover #appPopover=\"mdePopover\"\r\n                    [mdePopoverEnterDelay]=\"100\"\r\n                    [mdePopoverLeaveDelay]=\"0\"\r\n                    [mdePopoverPositionY]=\"'above'\"\r\n                    [mdePopoverOverlapTrigger]=\"false\"\r\n                    [mdePopoverDisableAnimation]=\"false\"\r\n                    [mdePopoverArrowWidth]=\"8\"\r\n                    [mdePopoverArrowColor]=\"'black'\"\r\n                    mdePopoverPlacement=\"bottom\">\r\n\r\n                    <mat-card style=\"max-width: 340px; padding: 3px 8px;\r\n                        color: #ffffff;\r\n                        text-align: center;\r\n                        background-color: #000000;\r\n                        border-radius: 4px;\">\r\n                        <span style=\"z-index: 1070;\r\n                            display: block;\r\n                            font-family: 'Lato','Helvetica Neue',Helvetica,Arial,sans-serif;\r\n                            font-style: normal;\r\n                            font-weight: normal;\r\n                            letter-spacing: normal;\r\n                            line-break: auto;\r\n                            line-height: 1.42857143;\r\n                            text-align: left;\r\n                            text-align: start;\r\n                            text-decoration: none;\r\n                            text-shadow: none;\r\n                            text-transform: none;\r\n                            white-space: normal;\r\n                            word-break: normal;\r\n                            word-spacing: normal;\r\n                            word-wrap: normal;\r\n                            font-size: 13px;\">{{data.name}}</span>\r\n                    </mat-card>\r\n                </mde-popover>\r\n\r\n                <div class=\"grid-cell\"\r\n                    [mdePopoverTriggerFor]=\"appPopover\"\r\n                    [mdePopoverBackdropCloseOnClick]=\"false\"\r\n                    mdePopoverOffsetX=\"25\"\r\n                    mdePopoverOffsetY=\"0\"\r\n                    [ngStyle]=\"{ 'width': gridColumns[1].width + 'px', 'padding-left': 0 }\">\r\n\r\n                    <div class=\"gantt-tree-content\">\r\n                        <span [ngStyle]=\"{ borderLeftColor: data.color.primary, borderLeftWidth: .35 + 'em', \r\n                            borderLeftStyle: 'solid', paddingRight: .5 + 'em'}\"></span>\r\n                        <span>{{data.name}}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"gantt-activity\" #ganttActivity\r\n        (wheel)=\"doWheel($event, ganttActivity)\"\r\n        (window:resize)=\"onResize($event)\"\r\n        [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight() + 60, 'width': calculateColumnsWidth() }\">\r\n\r\n        <time-scale [timeScaleMonth]=\"ganttService.MONTH_SCALE\"\r\n            [timeScaleWeekend]=\"ganttService.TIME_SCALE\"\r\n            [dimensions]=\"dimensions\"\r\n            [scale]=\"options.scale\"></time-scale>\r\n        <div class=\"gantt-activity-area\"\r\n            #ganttActivityArea\r\n            [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight(), 'width': containerWidth + 36 + 'px' }\">\r\n\r\n            <activity-background [timeScale]=\"ganttService.TIME_SCALE\"\r\n                [tasks]=\"ganttService.TASK_CACHE\"></activity-background>\r\n            <activity-bars [timeScale]=\"ganttService.TIME_SCALE\"\r\n                [dimensions]=\"dimensions\"\r\n                [tasks]=\"ganttService.TASK_CACHE\"\r\n                (onGridRowClick)=\"gridRowClick($event)\"\r\n                (onPopoverOpen)=\"popoverOpen($event)\"></activity-bars>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-activity {\r\n            overflow-y: hidden;\r\n            overflow-x: scroll;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            position: relative;\r\n        }\r\n        .gantt-activity-area {\r\n            position: relative;\r\n            overflow-x: hidden;\r\n            overflow-y: hidden;\r\n            -webkit-user-select: none;\r\n        }\r\n        .gantt-vertical-scroll {\r\n            background-color: transparent;\r\n            overflow-x: hidden;\r\n            overflow-y: scroll;\r\n            position: absolute;\r\n            right: -10px;\r\n            display: block;\r\n            top: -1px;\r\n            border: 1px solid #cecece;\r\n        }\r\n        .grid {\r\n            overflow-x: hidden;\r\n            overflow-y: hidden;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            border-right: 1px solid #cecece;\r\n        }\r\n        .grid-scale {\r\n            color: #6b6b6b;\r\n            font-size: 12px;\r\n            border-bottom: 1px solid #e0e0e0;\r\n            background-color: whitesmoke;\r\n        }\r\n        .grid-head-cell {\r\n            /*color: #a6a6a6;*/\r\n            border-top: none !important;\r\n            border-right: none !important;\r\n            line-height: inherit;\r\n            box-sizing: border-box;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            border-right: 1px solid #cecece;\r\n            /*text-align: center;*/\r\n            position: relative;\r\n            cursor: default;\r\n            height: 100%;\r\n            -moz-user-select: -moz-none;\r\n            -webkit-user-select: none;\r\n            overflow: hidden;\r\n        }\r\n        .grid-data {\r\n            overflow: hidden;\r\n        }\r\n        .grid-row {\r\n            box-sizing: border-box;\r\n            border-bottom: 1px solid #e0e0e0;\r\n            background-color: #fff;\r\n            position: relative;\r\n            -webkit-user-select: none;\r\n        }\r\n        .grid-row:hover {\r\n            background-color: #eeeeee;\r\n            cursor: pointer;\r\n        }\r\n        .grid-cell {\r\n            border-right: none;\r\n            color: #454545;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            padding-left: 6px;\r\n            padding-right: 6px;\r\n            height: 100%;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            font-size: 13px;\r\n            box-sizing: border-box;\r\n        }\r\n        .actions-bar {\r\n            /*border-top: 1px solid #cecece;*/\r\n            border-bottom: 1px solid #e0e0e0;\r\n            clear: both;\r\n            /*margin-top: 90px;*/\r\n            height: 28px;\r\n            background: whitesmoke;\r\n            color: #494949;\r\n            font-family: Arial, sans-serif;\r\n            font-size: 13px;\r\n            padding-left: 15px;\r\n            line-height: 25px;\r\n        }\r\n        .gantt-tree-content {\r\n            padding-left: 15px;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class GanttActivityComponent implements OnInit, DoCheck {\r\n    @Input() project: Project;\r\n    @Input() options: IGanttOptions;\r\n\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onPopoverOpen: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    private start: Date;\r\n    private end: Date;\r\n    private timeScale: any;\r\n\r\n    private scale: IScale = {\r\n        start: null,\r\n        end: null\r\n    };\r\n\r\n    private activityContainerSizes: any;\r\n\r\n    containerHeight: any;\r\n    containerWidth: any;\r\n\r\n    ganttActivityHeight: any;\r\n    ganttActivityWidth: any;\r\n\r\n    dimensions = {\r\n        height: 0,\r\n        width: 0\r\n    };\r\n\r\n    gridColumns: IGridColumn[] = [\r\n        { name: '', left: 0, width: 16 },\r\n        { name: 'Zadanie', left: 0, width: 330 }\r\n    ];\r\n\r\n    constructor(\r\n        public elem: ElementRef,\r\n        public ganttService: GanttService) {\r\n    }\r\n\r\n    doWheel(event, elem: HTMLElement) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        // chome\r\n        if (event.wheelDelta) {\r\n            if ((event.wheelDelta || event.detail) > 0) {\r\n                elem.scrollLeft -= 100;\r\n            } else {\r\n                elem.scrollLeft += 100;\r\n            }\r\n        // firefox\r\n        } else {\r\n            if (event.deltaY > 0) {\r\n                elem.scrollLeft += 100;\r\n            } else {\r\n                elem.scrollLeft -= 100;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        // Cache the project data and only work with that. Only show parent tasks by default\r\n        this.ganttService.TASK_CACHE = this.project.tasks;\r\n        this.ganttService.TIME_SCALE = this.ganttService.calculateScale(this.options.scale.start, this.options.scale.end);\r\n\r\n        this.start = this.options.scale.start;\r\n        this.end = this.options.scale.end;\r\n        this.containerWidth = this.calculateContainerWidth();\r\n        this.containerHeight = this.calculateContainerHeight();\r\n        this.activityContainerSizes = this.ganttService.calculateActivityContainerDimensions();\r\n\r\n        this.gridColumns = this.options.gridColumns ? this.options.gridColumns : this.gridColumns;\r\n\r\n        // important that these are called last as it relies on values calculated above.\r\n        this.setScale();\r\n        this.setDimensions();\r\n        this.setSizes();\r\n    }\r\n\r\n    /** Custom model check */\r\n    ngDoCheck() {\r\n        // do a check to see whether any new tasks have been added. If the task is a child then push into array if tree expanded?\r\n        this.ganttService.doTaskCheck(this.project.tasks, this.options.scale);\r\n    }\r\n\r\n    /** On vertical scroll set the scroll top of grid and activity  */\r\n    onVerticalScroll(verticalScroll: any, ganttGrid: any, ganttActivityArea: any): void {\r\n        this.ganttService.scrollTop(verticalScroll, ganttGrid, ganttActivityArea);\r\n    }\r\n\r\n    gridRowClick(task) {\r\n        try {\r\n            this.onGridRowClick.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    popoverOpen(task) {\r\n        try {\r\n            this.onPopoverOpen.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    /** On resize of browser window dynamically adjust gantt activity height and width */\r\n    onResize(event: any): void {\r\n        const activityContainerSizes = this.ganttService.calculateActivityContainerDimensions();\r\n        this.ganttActivityHeight = activityContainerSizes.height + 'px';\r\n        this.ganttActivityWidth = activityContainerSizes.width;\r\n    }\r\n\r\n    setScale() {\r\n        this.scale.start = this.start;\r\n        this.scale.end = this.end;\r\n    }\r\n\r\n    setDimensions() {\r\n        this.dimensions.height = this.containerHeight;\r\n        this.dimensions.width = this.containerWidth;\r\n    }\r\n\r\n    setGridRowStyle(): any {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px',\r\n            'line-height': this.ganttService.rowHeight + 'px'\r\n        };\r\n    }\r\n\r\n    setGridScaleStyle() {\r\n        const height = this.ganttService.rowHeight + 30;\r\n        return {\r\n            'height': height + 'px',\r\n            'line-height': height + 'px'\r\n        };\r\n    }\r\n\r\n    calculateColumnsWidth() {\r\n        const ganttActivityWidth = this.gridColumns.map(column => { return column.width }).reduce((pv, cv) => pv + cv, 0) + 1;\r\n        return `calc(100% - ${(ganttActivityWidth)}px)`;\r\n    }\r\n\r\n    private calculateContainerHeight(): number {\r\n        return this.ganttService.TASK_CACHE.length * this.ganttService.rowHeight;\r\n    }\r\n\r\n    private calculateContainerWidth(): number {\r\n        return this.ganttService.TIME_SCALE.length * this.ganttService.cellWidth + this.ganttService.cellWidth;\r\n    }\r\n\r\n    private setSizes(): void {\r\n        this.ganttActivityHeight = this.activityContainerSizes.height + 'px';\r\n        this.ganttActivityWidth = this.activityContainerSizes.width;\r\n    }\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { NgStyle } from '@angular/common';\r\nimport { GanttService } from './shared/services/gantt.service';\r\nimport { IGanttOptions, Project } from './shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'gantt',\r\n    template: `\r\n        <div [ngStyle]=\"{ 'width': '100%' }\">\r\n            <div class=\"gantt-container\" (window:resize)=\"onResize($event)\">\r\n                <!--<gantt-header [name]=\"_project.name\" [startDate]=\"_project.startDate\"></gantt-header>-->\r\n                <gantt-activity [project]=\"_project\" [options]=\"_options\" (onGridRowClick)=\"gridRowClicked($event)\" (onPopoverOpen)=\"popoverOpened($event)\"></gantt-activity>\r\n                <!--<gantt-footer [project]=\"_project\"></gantt-footer>-->\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-container {\r\n            font-family: Arial;\r\n            font-size: 13px;\r\n            border: 1px solid #cecece;\r\n            position: relative;\r\n            white-space: nowrap;\r\n            margin-top: 0px;\r\n        }\r\n    `],\r\n    providers: []\r\n})\r\nexport class GanttComponent implements OnInit {\r\n    _project: Project;\r\n    _options: IGanttOptions;\r\n\r\n    @Input()\r\n    set project(project: any) {\r\n        if (project) {\r\n            this._project = project;\r\n        } else {\r\n            this.setDefaultProject();\r\n        }\r\n    }\r\n    get project() { return this._project; }\r\n\r\n    @Input()\r\n    set options(options: any) {\r\n        if (options.scale) {\r\n            this._options = options;\r\n        } else {\r\n            this.setDefaultOptions();\r\n        }\r\n    }\r\n    get options() { return this._options; }\r\n\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onPopoverOpen: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    ganttContainerWidth: number;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    setSizes(): void {\r\n        this.ganttContainerWidth = this.ganttService.calculateContainerWidth();\r\n    }\r\n\r\n    setDefaultOptions() {\r\n        const scale = this.ganttService.calculateGridScale(this._project.tasks);\r\n        const gridColumns = [\r\n            { name: '', left: 0, width: 16 },\r\n            { name: 'Zadanie', left: 0, width: 330 }\r\n        ];\r\n\r\n        this._options = {\r\n            scale,\r\n            gridColumns\r\n        };\r\n    }\r\n\r\n    setDefaultProject() {\r\n        this._project = {\r\n            name: '',\r\n            startDate: null,\r\n            tasks: []\r\n        };\r\n    }\r\n\r\n    gridRowClicked(task: any) {\r\n        this.onGridRowClick.emit(task);\r\n    }\r\n\r\n    popoverOpened(task: any) {\r\n        this.onPopoverOpen.emit(task);\r\n    }\r\n\r\n    onResize($event: any): void {\r\n        this.setSizes();\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'gantt-header',\r\n    template: `\r\n        <div class=\"gantt-header\">\r\n            <div class=\"gantt-header-title\">\r\n                <div style=\"flex:1\">{{ name }}</div>\r\n                <div>Started: {{ startDate | date: 'medium'}}</div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-header {\r\n            background-color: whitesmoke;\r\n            height: 40px;\r\n            border-bottom: 1px solid #e0e0e0;\r\n        }\r\n        .gantt-header-title {\r\n            padding: 12px;\r\n            display: flex;\r\n            flex-wrap:wrap;\r\n            font-family: Arial, Helvetica, sans-serif;\r\n            font-size: 16px;\r\n        }\r\n        .gantt-header-actions {\r\n            display: inline;\r\n            float: right;\r\n            padding: 6px;\r\n        }\r\n    `]\r\n})\r\nexport class GanttHeaderComponent {\r\n    @Input() name: any;\r\n    @Input() startDate: Date;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'gantt-footer',\r\n    template: `<div class=\"gantt-footer\"></div>`,\r\n    styles: [`\r\n        .gantt-footer {\r\n            background-color: whitesmoke;\r\n            height: 36px;\r\n            border-top: 1px solid #e0e0e0;\r\n        }\r\n        .gantt-footer-actions {\r\n            float: right;\r\n        }\r\n    `]\r\n})\r\nexport class GanttFooterComponent {\r\n    @Input() project: any;\r\n    constructor() { }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MdePopoverModule } from \"@material-extended/mde\";\r\n\r\nimport { GanttActivityComponent } from \"./gantt-activity.component\";\r\nimport { GanttTimeScaleComponent } from \"./time-scale/gantt-time-scale.component\";\r\nimport { GanttActivityBackgroundComponent } from \"./background/activity-background.component\";\r\nimport { GanttActivityBarsComponent } from \"./bars/activity-bars.component\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatCardModule, MdePopoverModule],\r\n  exports: [\r\n    GanttActivityComponent,\r\n    GanttTimeScaleComponent,\r\n    GanttActivityBackgroundComponent,\r\n    GanttActivityBarsComponent,\r\n  ],\r\n  declarations: [\r\n    GanttActivityComponent,\r\n    GanttTimeScaleComponent,\r\n    GanttActivityBackgroundComponent,\r\n    GanttActivityBarsComponent,\r\n  ],\r\n  providers: [],\r\n})\r\nexport class GanttActivityModule {}\r\n","import {\r\n  NgModule,\r\n  CUSTOM_ELEMENTS_SCHEMA,\r\n  ModuleWithProviders,\r\n} from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport { GanttComponent } from \"./gantt.component\";\r\nimport { GanttHeaderComponent } from \"./header/gantt-header.component\";\r\nimport { GanttFooterComponent } from \"./footer/gantt-footer.component\";\r\nimport { GanttService } from \"./shared/services/gantt.service\";\r\nimport { GanttActivityModule } from \"./activity/gantt-activity.module\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, GanttActivityModule],\r\n  exports: [GanttComponent],\r\n  declarations: [GanttComponent, GanttHeaderComponent, GanttFooterComponent],\r\n  providers: [GanttService],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class GanttModule {\r\n  static forRoot(): ModuleWithProviders<GanttModule> {\r\n    return {\r\n      ngModule: GanttModule,\r\n    };\r\n  }\r\n}\r\n"],"names":["Injectable","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","Component","Input","i0.ɵɵelement","ViewChild","i0.ɵɵelementContainer","i0.ɵɵlistener","i0.ɵɵtextInterpolate2","EventEmitter","Output","i0.ɵɵstyleProp","i0.ɵɵtextInterpolate1","ChangeDetectionStrategy","CommonModule","MatCardModule","MdePopoverModule","NgModule","FormsModule","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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"}