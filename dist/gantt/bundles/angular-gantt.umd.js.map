{"version":3,"file":"angular-gantt.umd.js.map","sources":["ng://angular-gantt/lib/shared/services/gantt-config.service.ts","ng://angular-gantt/lib/shared/services/gantt.service.ts","ng://angular-gantt/lib/gantt.component.ts","ng://angular-gantt/lib/header/gantt-header.component.ts","ng://angular-gantt/lib/footer/gantt-footer.component.ts","ng://angular-gantt/lib/activity/gantt-activity.component.ts","ng://angular-gantt/lib/activity/time-scale/gantt-time-scale.component.ts","ng://angular-gantt/lib/activity/background/activity-background.component.ts","ng://angular-gantt/lib/activity/bars/activity-bars.component.ts","ng://angular-gantt/lib/activity/gantt-activity.module.ts","ng://angular-gantt/lib/gantt.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GanttConfig {\r\n    public cellWidth = 38;\r\n    public rowHeight = 30;\r\n    public activityHeight = 420;\r\n    public barHeight = 25;\r\n    public barLineHeight = 35;\r\n    public barMoveable = false;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { GanttConfig } from './gantt-config.service';\r\nimport { Task, IScale } from '../interfaces';\r\n\r\n@Injectable()\r\nexport class GanttService {\r\n    public rowHeight = 0;\r\n    public hourCellWidth = 60; // change to 60 so minutes can been seen more easily\r\n    public hoursCellWidth = this.hourCellWidth * 25;\r\n    public cellWidth = 0;\r\n    public windowInnerWidth = 0;\r\n    public activityHeight = 0;\r\n    public barHeight = 0;\r\n    public barLineHeight = 0;\r\n    public barTop = 0;\r\n    public barMoveable = false;\r\n    public gridWidth = 0; //188\r\n    public gridHeight = 332;\r\n    public TASK_CACHE: any[];\r\n    public TIME_SCALE: any[];\r\n\r\n    constructor() {\r\n        const ganttConfig = new GanttConfig();\r\n\r\n        this.rowHeight = ganttConfig.rowHeight;\r\n        this.cellWidth = ganttConfig.cellWidth;\r\n        this.activityHeight = ganttConfig.activityHeight;\r\n        this.barHeight = ganttConfig.barHeight;\r\n        this.barLineHeight = ganttConfig.barLineHeight;\r\n        this.barTop = ganttConfig.rowHeight;\r\n        this.barMoveable = ganttConfig.barMoveable;\r\n    }\r\n\r\n    private calculateBarWidth(start: Date, end: Date): number {\r\n        if (typeof start === 'string') {\r\n            start = new Date(start);\r\n        }\r\n\r\n        if (typeof end === 'string') {\r\n            end = new Date(end);\r\n        }\r\n\r\n        const days = this.calculateDiffDays(start, end);\r\n        const width: number = (days / 7 * this.cellWidth + days / 7);\r\n        return width;\r\n    }\r\n\r\n    private calculateBarLeft(start: Date, scale: any[]): number {\r\n        let left = 0;\r\n\r\n        if (start != null) {\r\n            if (typeof start === 'string') {\r\n                start = new Date();\r\n            }\r\n\r\n            for (var i = 0; i < scale.length; i++) {\r\n                if ((start.getTime() >= scale[i].getTime() && start.getTime() < scale[i + 1].getTime())) {\r\n                    \r\n                    left = i * this.cellWidth + i + this.calculateBarLeftDelta(start) + ((7 / (scale[i + 1].getDate() - start.getDate()) / 7) * this.cellWidth) - this.cellWidth / 7;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return left;\r\n    }\r\n\r\n    /** Calculates the height of the gantt grid, activity and vertical scroll */\r\n    public calculateGanttHeight(): string {\r\n        return `${this.TASK_CACHE.length * this.rowHeight}px`;\r\n    }\r\n\r\n    private calculateBarLeftDelta(start: Date): number {\r\n        let offset = 0;\r\n        const hoursInDay = 24;\r\n        const minutesInHour = 60;\r\n        const secondsInHour = 3600;\r\n        const startHours: number =\r\n            start.getHours() + start.getMinutes() / minutesInHour + start.getSeconds() / secondsInHour;\r\n\r\n        offset = this.cellWidth / hoursInDay * startHours;\r\n        return offset;\r\n    }\r\n\r\n    /** Calculate the bar styles */\r\n    public calculateBar(task: any, index: number, scale: any) {\r\n        const barStyle = this.getBarStyle(task.color);\r\n        return {\r\n            'top': this.barTop * index + 2 + 'px',\r\n            'left': this.calculateBarLeft(task.start, scale) + 'px',\r\n            'height': this.barHeight + 'px',\r\n            'line-height': this.barLineHeight + 'px',\r\n            'width': this.calculateBarWidth(task.start, task.end) + 'px',\r\n            'background-color': barStyle[\"background-color\"],\r\n            'border-left': barStyle[\"border-left\"]\r\n        };\r\n    }\r\n\r\n    /** Get the bar style based on task status */\r\n    private getBarStyle(color: any): any {\r\n        const style = {};\r\n        style[\"background-color\"] = color.secondary;\r\n        style[\"border-left\"] = `5px solid ${color.primary}`;\r\n\r\n        return style;\r\n    }\r\n\r\n    /** Calculates the difference in two dates and returns number of days */\r\n    public calculateDiffDays(start: Date, end: Date): number {\r\n        try {\r\n            const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds /ms\r\n            const diffDays = Math.abs((start.getTime() - end.getTime()) / (oneDay));\r\n            const days = diffDays; // don't use Math.round as it will draw an incorrect bar\r\n            return days;\r\n        } catch (err) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /** Calculate the gantt scale range given the start and end date of tasks*/\r\n    public calculateScale(start: Date = new Date(), end: Date = this.addDays(start, 7)) {\r\n        const scale: any[] = [];\r\n        try {\r\n            while (start.getTime() <= end.getTime()) {\r\n                scale.push(start);\r\n                start = this.addDays(start, 7);\r\n            }\r\n            return scale;\r\n\r\n        } catch (err) {\r\n            return scale;\r\n        }\r\n    }\r\n\r\n    /** Determines whether given date is a weekend */\r\n    public isDayWeekend(date: Date): boolean {\r\n        const day = date.getDay();\r\n        if (day === 6 || day === 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /** Add x number of days to a date object */\r\n    public addDays(date: Date, days: number): Date {\r\n        const result = new Date(date);\r\n        result.setDate(result.getDate() + days);\r\n        return result;\r\n    }\r\n\r\n    //** Remove x number of days from a date object */\r\n    public removeDays(date: Date, days: number): Date {\r\n        const result = new Date(date);\r\n        result.setDate(result.getDate() - days);\r\n        return result;\r\n    }\r\n\r\n    /** Calculates the grid scale for gantt based on tasks start and end dates */\r\n    public calculateGridScale(tasks: Task[]): IScale {\r\n        let start: Date;\r\n        let end: Date;\r\n        const dates = tasks.map((task: any) => {\r\n            return {\r\n                start: new Date(task.start),\r\n                end: new Date(task.end)\r\n            };\r\n        });\r\n\r\n        start = new Date(Math.min.apply(null, dates.map((t) => {\r\n            return t.start;\r\n        })));\r\n\r\n        end = new Date(Math.max.apply(null, dates.map((t) => {\r\n            return t.end;\r\n        })));\r\n\r\n        return {\r\n            start: start,\r\n            end: end\r\n        };\r\n    }\r\n\r\n    public getComputedStyle(element: any, attribute: any) {\r\n        return parseInt(document.defaultView.getComputedStyle(element)[attribute], 10);\r\n    }\r\n\r\n    //TODO(dale): determine whether this is needed\r\n    public calculateContainerWidth(): number {\r\n        this.windowInnerWidth = window.innerWidth;\r\n        const containerWidth = this.gridWidth - 18;\r\n        return containerWidth;\r\n    }\r\n\r\n    public calculateContainerHeight(): number {\r\n        const containerHeight = (innerHeight - 18);\r\n        return containerHeight;\r\n    }\r\n\r\n    public calculateActivityContainerDimensions(): any {\r\n        const scrollWidth = 18;\r\n        this.windowInnerWidth = window.innerWidth;\r\n        const width = window.innerWidth - this.gridWidth - scrollWidth;\r\n\r\n        const height = window.innerHeight - this.gridHeight;\r\n\r\n        return { height: this.activityHeight, width: width };\r\n    }\r\n\r\n    public calculateGanttActivityWidth(ganttActions: HTMLElement, ganttGridElem: HTMLElement): any {\r\n        return `${ganttActions.offsetWidth - ganttGridElem.offsetWidth}px`;\r\n    }\r\n\r\n    public calculateGanttActivityHeight(ganttGridElem: HTMLElement): any {\r\n        return `${ganttGridElem.offsetHeight}px`;\r\n    }\r\n\r\n    /** Set the vertical scroll top positions for gantt */\r\n    public scrollTop(verticalScrollElem: any, ganttGridElem: any, ganttActivityAreaElem: any) {\r\n        const verticalScrollTop = verticalScrollElem.scrollTop;\r\n        const scroll = this.setScrollTop;\r\n\r\n        // debounce\r\n        if (verticalScrollTop !== null && verticalScrollTop !== undefined) {\r\n            scroll(verticalScrollTop, ganttActivityAreaElem);\r\n            scroll(ganttActivityAreaElem.scrollTop, ganttGridElem);\r\n        }\r\n    }\r\n\r\n    /** Group data by id , only supports one level*/\r\n    public groupData(tasks: any): any {\r\n        return tasks;\r\n    }\r\n\r\n    /** Checks whether any new data needs to be added to task cache  */\r\n    public doTaskCheck(tasks: any[], scale: any): boolean {\r\n        // const cachedTaskIds = this.TASK_CACHE.map((task: any) => { return task.id });\r\n        // const itemsToCache: any[] = [];\r\n\r\n        // only look at tasks that are not cached\r\n        // tasks.filter((task: any) => {\r\n        //     return cachedTaskIds.indexOf(task.id) === -1;\r\n        // }).forEach((task: any) => {\r\n        //     itemsToCache.push(task);\r\n        // });\r\n\r\n        // itemsToCache.forEach((item: any) => {\r\n        //     this.TASK_CACHE.push(item);\r\n        // });\r\n\r\n        // if (itemsToCache.length > 0) {\r\n        //     return true;\r\n        // }\r\n\r\n        this.TASK_CACHE = tasks;\r\n\r\n        this.TIME_SCALE = this.calculateScale(scale.start, scale.end);\r\n\r\n        return true;\r\n    }\r\n\r\n    /** Set a id prefix so CSS3 query selector can work with ids that contain numbers */\r\n    public setIdPrefix(id: string): string {\r\n        return `_${id}`;\r\n    }\r\n\r\n    // /** Remove the id prefix to allow querying of data */\r\n    // public removeIdPrefix(id: string): string {\r\n    //     return id.substring(1, id.length - 1);\r\n    // }\r\n\r\n    /** Set the scroll top property of a native DOM element */\r\n    public setScrollTop(scrollTop: number, element: any): void {\r\n        if (element !== null && element !== undefined) {\r\n            element.scrollTop = scrollTop;\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { NgStyle } from '@angular/common';\r\nimport { GanttService } from './shared/services/gantt.service';\r\nimport { IGanttOptions, Project } from './shared/interfaces';\r\n\r\n@Component({\r\n    selector: 'gantt',\r\n    template: `\r\n        <div [ngStyle]=\"{ 'width': '100%' }\">\r\n            <div class=\"gantt-container\" (window:resize)=\"onResize($event)\">\r\n                <!--<gantt-header [name]=\"_project.name\" [startDate]=\"_project.startDate\"></gantt-header>-->\r\n                <gantt-activity [project]=\"_project\" [options]=\"_options\" (onGridRowClick)=\"gridRowClicked($event)\" (onPopoverOpen)=\"popoverOpened($event)\"></gantt-activity>\r\n                <!--<gantt-footer [project]=\"_project\"></gantt-footer>-->\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-container {\r\n            font-family: Arial;\r\n            font-size: 13px;\r\n            border: 1px solid #cecece;\r\n            position: relative;\r\n            white-space: nowrap;\r\n            margin-top: 0px;\r\n        }\r\n    `],\r\n    providers: []\r\n})\r\nexport class GanttComponent implements OnInit {\r\n    _project: Project;\r\n    _options: IGanttOptions;\r\n\r\n    @Input()\r\n    set project(project: any) {\r\n        if (project) {\r\n            this._project = project;\r\n        } else {\r\n            this.setDefaultProject();\r\n        }\r\n    }\r\n    get project() { return this._project; }\r\n\r\n    @Input()\r\n    set options(options: any) {\r\n        if (options.scale) {\r\n            this._options = options;\r\n        } else {\r\n            this.setDefaultOptions();\r\n        }\r\n    }\r\n    get options() { return this._options; }\r\n\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onPopoverOpen: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    ganttContainerWidth: number;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    setSizes(): void {\r\n        this.ganttContainerWidth = this.ganttService.calculateContainerWidth();\r\n    }\r\n\r\n    setDefaultOptions() {\r\n        const scale = this.ganttService.calculateGridScale(this._project.tasks);\r\n        this._options = {\r\n            scale\r\n        };\r\n    }\r\n\r\n    setDefaultProject() {\r\n        this._project = {\r\n            name: '',\r\n            startDate: null,\r\n            tasks: []\r\n        };\r\n    }\r\n\r\n    gridRowClicked(task: any) {\r\n        this.onGridRowClick.emit(task);\r\n    }\r\n\r\n    popoverOpened(task: any) {\r\n        this.onPopoverOpen.emit(task);\r\n    }\r\n\r\n    onResize($event: any): void {\r\n        this.setSizes();\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'gantt-header',\r\n    template: `\r\n        <div class=\"gantt-header\">\r\n            <div class=\"gantt-header-title\">\r\n                <div style=\"flex:1\">{{ name }}</div>\r\n                <div>Started: {{ startDate | date: 'medium'}}</div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-header {\r\n            background-color: whitesmoke;\r\n            height: 40px;\r\n            border-bottom: 1px solid #e0e0e0;\r\n        }\r\n        .gantt-header-title {\r\n            padding: 12px;\r\n            display: flex;\r\n            flex-wrap:wrap;\r\n            font-family: Arial, Helvetica, sans-serif;\r\n            font-size: 16px;\r\n        }\r\n        .gantt-header-actions {\r\n            display: inline;\r\n            float: right;\r\n            padding: 6px;\r\n        }\r\n    `]\r\n})\r\nexport class GanttHeaderComponent {\r\n    @Input() name: any;\r\n    @Input() startDate: Date;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'gantt-footer',\r\n    template: `<div class=\"gantt-footer\"></div>`,\r\n    styles: [`\r\n        .gantt-footer {\r\n            background-color: whitesmoke;\r\n            height: 36px;\r\n            border-top: 1px solid #e0e0e0;\r\n        }\r\n        .gantt-footer-actions {\r\n            float: right;\r\n        }\r\n    `]\r\n})\r\nexport class GanttFooterComponent {\r\n    @Input() project: any;\r\n    constructor() { }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ElementRef,  ChangeDetectionStrategy, OnChanges, DoCheck } from '@angular/core';\r\n\r\nimport { GanttService } from '../shared/services/gantt.service';\r\n\r\n@Component({\r\n    selector: 'gantt-activity',\r\n    template: `\r\n    <div class=\"grid\" #ganttGrid>\r\n        <div class=\"grid-scale\" [ngStyle]=\"setGridScaleStyle()\">\r\n            <div class=\"grid-head-cell\"\r\n                *ngFor=\"let column of gridColumns\" [style.width]=\"column.width + 'px'\"\r\n                [style.left]=\"column.left + 'px'\">\r\n\r\n                <label>\r\n                    {{column.name}}\r\n                </label>\r\n            </div>\r\n        </div>\r\n        <div class=\"grid-data\"\r\n            #ganttGridData\r\n            [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight() }\">\r\n\r\n            <div #row\r\n                *ngFor=\"let data of ganttService.TASK_CACHE\" class=\"grid-row\"\r\n                [ngStyle]=\"setGridRowStyle()\">\r\n\r\n                <div class=\"grid-cell\"\r\n                    [ngStyle]=\"{ 'width': gridColumns[1].width + 'px', 'padding-left': 0 }\">\r\n\r\n                    <div class=\"gantt-tree-content\">\r\n                        <span [ngStyle]=\"{ borderLeftColor: data.color.primary, borderLeftWidth: .35 + 'em', \r\n                            borderLeftStyle: 'solid', paddingRight: .5 + 'em'}\"></span>\r\n                        <span>{{data.name}}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"gantt-activity\"\r\n        (window:resize)=\"onResize($event)\"\r\n        [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight() + 60, 'width': 'calc(100% - ' + (ganttGridData.offsetWidth + 1) + 'px)' }\">\r\n\r\n        <time-scale [timeScale]=\"ganttService.TIME_SCALE\"\r\n            [dimensions]=\"dimensions\"></time-scale>\r\n        <div class=\"gantt-activity-area\"\r\n            #ganttActivityArea\r\n            [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight(), 'width': containerWidth + 36 + 'px' }\">\r\n\r\n            <activity-background [timeScale]=\"ganttService.TIME_SCALE\"\r\n                [tasks]=\"ganttService.TASK_CACHE\"></activity-background>\r\n            <activity-bars [timeScale]=\"ganttService.TIME_SCALE\"\r\n                [dimensions]=\"dimensions\"\r\n                [tasks]=\"ganttService.TASK_CACHE\"\r\n                (onGridRowClick)=\"gridRowClick($event)\"\r\n                (onPopoverOpen)=\"popoverOpen($event)\"></activity-bars>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n        .gantt-activity {\r\n            overflow-y: hidden;\r\n            overflow-x: scroll;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            position: relative;\r\n        }\r\n        .gantt-activity-area {\r\n            position: relative;\r\n            overflow-x: hidden;\r\n            overflow-y: hidden;\r\n            -webkit-user-select: none;\r\n        }\r\n        .gantt-vertical-scroll {\r\n            background-color: transparent;\r\n            overflow-x: hidden;\r\n            overflow-y: scroll;\r\n            position: absolute;\r\n            right: -10px;\r\n            display: block;\r\n            top: -1px;\r\n            border: 1px solid #cecece;\r\n        }\r\n        .grid {\r\n            overflow-x: hidden;\r\n            overflow-y: hidden;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            border-right: 1px solid #cecece;\r\n        }\r\n        .grid-scale {\r\n            color: #6b6b6b;\r\n            font-size: 12px;\r\n            border-bottom: 1px solid #e0e0e0;\r\n            background-color: whitesmoke;\r\n        }\r\n        .grid-head-cell {\r\n            /*color: #a6a6a6;*/\r\n            border-top: none !important;\r\n            border-right: none !important;\r\n            line-height: inherit;\r\n            box-sizing: border-box;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            border-right: 1px solid #cecece;\r\n            /*text-align: center;*/\r\n            position: relative;\r\n            cursor: default;\r\n            height: 100%;\r\n            -moz-user-select: -moz-none;\r\n            -webkit-user-select: none;\r\n            overflow: hidden;\r\n        }\r\n        .grid-data {\r\n            overflow: hidden;\r\n        }\r\n        .grid-row {\r\n            box-sizing: border-box;\r\n            border-bottom: 1px solid #e0e0e0;\r\n            background-color: #fff;\r\n            position: relative;\r\n            -webkit-user-select: none;\r\n        }\r\n        .grid-row:hover {\r\n            background-color: #eeeeee;\r\n            cursor: pointer;\r\n        }\r\n        .grid-cell {\r\n            border-right: none;\r\n            color: #454545;\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            padding-left: 6px;\r\n            padding-right: 6px;\r\n            height: 100%;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            font-size: 13px;\r\n            box-sizing: border-box;\r\n        }\r\n        .actions-bar {\r\n            /*border-top: 1px solid #cecece;*/\r\n            border-bottom: 1px solid #e0e0e0;\r\n            clear: both;\r\n            /*margin-top: 90px;*/\r\n            height: 28px;\r\n            background: whitesmoke;\r\n            color: #494949;\r\n            font-family: Arial, sans-serif;\r\n            font-size: 13px;\r\n            padding-left: 15px;\r\n            line-height: 25px;\r\n        }\r\n        .gantt-tree-content {\r\n            padding-left: 15px;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class GanttActivityComponent implements OnInit, DoCheck {\r\n    @Input() project: any;\r\n    @Input() options: any;\r\n\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onPopoverOpen: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    private start: Date;\r\n    private end: Date;\r\n    private timeScale: any;\r\n\r\n    private activityContainerSizes: any;\r\n\r\n    containerHeight: any;\r\n    containerWidth: any;\r\n\r\n    ganttActivityHeight: any;\r\n    ganttActivityWidth: any;\r\n\r\n    private scale: any = {\r\n        start: null,\r\n        end: null\r\n    };\r\n\r\n    dimensions = {\r\n        height: 0,\r\n        width: 0\r\n    };\r\n\r\n    public gridColumns: any[] = [\r\n        { name: '', left: 0, width: 16 },\r\n        { name: 'Grupa asortymentÃ³w', left: 0, width: 330 }\r\n    ];\r\n\r\n    constructor(\r\n        public elem: ElementRef,\r\n        public ganttService: GanttService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        // Cache the project data and only work with that. Only show parent tasks by default\r\n        this.ganttService.TASK_CACHE = this.project.tasks;\r\n        this.ganttService.TIME_SCALE = this.ganttService.calculateScale(this.options.scale.start, this.options.scale.end);\r\n\r\n        this.start = this.options.scale.start;\r\n        this.end = this.options.scale.end;\r\n        this.containerWidth = this.calculateContainerWidth();\r\n        this.containerHeight = this.calculateContainerHeight();\r\n        this.activityContainerSizes = this.ganttService.calculateActivityContainerDimensions();\r\n\r\n        // important that these are called last as it relies on values calculated above.\r\n        this.setScale();\r\n        this.setDimensions();\r\n        this.setSizes();\r\n    }\r\n\r\n    /** Custom model check */\r\n    ngDoCheck() {\r\n        // do a check to see whether any new tasks have been added. If the task is a child then push into array if tree expanded?\r\n        this.ganttService.doTaskCheck(this.project.tasks, this.options.scale);\r\n    }\r\n\r\n    /** On vertical scroll set the scroll top of grid and activity  */\r\n    onVerticalScroll(verticalScroll: any, ganttGrid: any, ganttActivityArea: any): void {\r\n        this.ganttService.scrollTop(verticalScroll, ganttGrid, ganttActivityArea);\r\n    }\r\n\r\n    gridRowClick(task) {\r\n        try {\r\n            this.onGridRowClick.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    popoverOpen(task) {\r\n        try {\r\n            this.onPopoverOpen.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    /** On resize of browser window dynamically adjust gantt activity height and width */\r\n    onResize(event: any): void {\r\n        const activityContainerSizes = this.ganttService.calculateActivityContainerDimensions();\r\n        this.ganttActivityHeight = activityContainerSizes.height + 'px';\r\n        this.ganttActivityWidth = activityContainerSizes.width;\r\n    }\r\n\r\n    setScale() {\r\n        this.scale.start = this.start;\r\n        this.scale.end = this.end;\r\n    }\r\n\r\n    setDimensions() {\r\n        this.dimensions.height = this.containerHeight;\r\n        this.dimensions.width = this.containerWidth;\r\n    }\r\n\r\n    setGridRowStyle(): any {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px',\r\n            'line-height': this.ganttService.rowHeight + 'px'\r\n        };\r\n    }\r\n\r\n    setGridScaleStyle() {\r\n        const height = this.ganttService.rowHeight + 30;\r\n        return {\r\n            'height': height + 'px',\r\n            'line-height': height + 'px'\r\n        };\r\n    }\r\n\r\n    private calculateContainerHeight(): number {\r\n        return this.ganttService.TASK_CACHE.length * this.ganttService.rowHeight;\r\n    }\r\n\r\n    private calculateContainerWidth(): number {\r\n        return this.ganttService.TIME_SCALE.length * this.ganttService.cellWidth + this.ganttService.cellWidth;\r\n    }\r\n\r\n    private setSizes(): void {\r\n        this.ganttActivityHeight = this.activityContainerSizes.height + 'px';\r\n        this.ganttActivityWidth = this.activityContainerSizes.width;\r\n    }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\n\r\n@Component({\r\n    selector: 'time-scale',\r\n    template: `\r\n        <div class=\"time-scale\" [ngStyle]=\"setTimescaleStyle()\">\r\n            <div class=\"time-scale-line\" [ngStyle]=\"setTimescaleLineStyle('none')\">\r\n                <div class=\"time-scale-cell\" *ngFor=\"let date of timeScale; let i = index\"\r\n                    [ngClass]=\"(i % 2) ? 'weekend' : ''\" [ngStyle]=\"setTimescaleCellStyle()\">{{date | date: 'dd-MM'}}</div>\r\n            </div>\r\n            <div class=\"time-scale-line\" [ngStyle]=\"setTimescaleLineStyle('none')\">\r\n                <div class=\"time-scale-cell\" *ngFor=\"let date of timeScale; let i = index\"\r\n                [ngClass]=\"(i % 2) ? 'weekend' : ''\" [ngStyle]=\"setTimescaleCellStyle()\">{{i + 1}}</div>\r\n            </div>\r\n        </div>`,\r\n    styles: [`\r\n        .weekend {\r\n            background-color: whitesmoke;\r\n        }\r\n        .time-scale {\r\n            font-size: 12px;\r\n            background-color: #fff;\r\n            border-bottom: 1px solid #cecece;\r\n        }\r\n        .time-scale-line {\r\n            box-sizing: border-box;\r\n            border-bottom: 1px solid #cecece;\r\n        }\r\n        .time-scale-line:first-child {\r\n            border-top: none;\r\n        }\r\n        .time-scale-cell {\r\n            display: inline-block;\r\n            white-space: nowrap;\r\n            overflow: hidden;\r\n            border-right: 1px solid #cecece;\r\n            text-align: center;\r\n            height: 100%;\r\n        }`\r\n    ],\r\n    providers: [\r\n        GanttService\r\n    ]\r\n})\r\nexport class GanttTimeScaleComponent implements OnInit {\r\n    @Input() timeScale: any;\r\n    @Input() dimensions: any;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    setTimescaleStyle() {\r\n        return {\r\n            'width': (this.dimensions.width + 36) + 'px'\r\n        };\r\n    }\r\n\r\n    setTimescaleLineStyle(borderTop: string) {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px',\r\n            'line-height': this.ganttService.rowHeight + 'px',\r\n            'position': 'relative',\r\n            'border-top': borderTop\r\n        };\r\n    }\r\n\r\n    setTimescaleCellStyle() {\r\n        return {\r\n            'width': this.ganttService.cellWidth + 'px'\r\n        };\r\n    }\r\n\r\n    isDayWeekend(date: Date): boolean {\r\n        return this.ganttService.isDayWeekend(date);\r\n    }\r\n}\r\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\n\r\n@Component({\r\n    selector: 'activity-background',\r\n    template: `\r\n    <div #bg class=\"gantt-activity-bg\">\r\n        <div class=\"gantt-activity-row\"\r\n            [ngStyle]=\"setRowStyle()\"\r\n            *ngFor=\"let row of tasks\">\r\n\r\n            <div class=\"gantt-activity-cell\"\r\n                [ngStyle]=\"setCellStyle()\"\r\n                *ngFor=\"let cell of cells; let i = index; let l = last\" [ngClass]=\"(i % 2) ? 'weekend' : ''\" ></div>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n        .weekend {\r\n            background-color: whitesmoke;\r\n        }\r\n        .gantt-activity-bg {\r\n            overflow: hidden;\r\n        }\r\n        .gantt-activity-row {\r\n            border-bottom: 1px solid #ebebeb;\r\n            background-color: #fff;\r\n            box-sizing: border-box;\r\n        }\r\n        .gantt-activity-cell {\r\n            display: inline-block;\r\n            height: 100%;\r\n            border-right: 1px solid #ebebeb;\r\n        }\r\n    `]\r\n})\r\nexport class GanttActivityBackgroundComponent implements OnInit {\r\n    @Input() tasks: any;\r\n    @Input() timeScale: any;\r\n\r\n    @ViewChild('bg') bg: ElementRef;\r\n\r\n    rows: any[] = [];\r\n    cells: any[] = [];\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n        this.drawGrid();\r\n    }\r\n\r\n    isDayWeekend(date: Date): boolean {\r\n        return this.ganttService.isDayWeekend(date);\r\n    }\r\n\r\n    setRowStyle() {\r\n        return {\r\n            'height': this.ganttService.rowHeight + 'px'\r\n        };\r\n    }\r\n\r\n    setCellStyle() {\r\n        return {\r\n            'width': this.ganttService.cellWidth + 'px'\r\n        };\r\n    }\r\n\r\n    private drawGrid(): void {\r\n        this.cells = this.timeScale;\r\n    }\r\n}\r\n","import { Component, OnInit, Input, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { GanttService } from '../../shared/services/gantt.service';\r\n\r\n@Component({\r\n    selector: 'activity-bars',\r\n    template: `\r\n    <div class=\"gantt-activity-bars-area\"\r\n        [ngStyle]=\"{ 'height': containerHeight + 'px', 'width': containerWidth + 'px' }\">\r\n\r\n        <div #bar class=\"gantt-activity-line\"\r\n            *ngFor=\"let task of tasks; let i = index\" (click)=\"gridRowClicked(task)\"\r\n            [ngStyle]=\"drawBar(task, i)\">\r\n\r\n            <div #popoverTrigger=\"mdePopoverTrigger\"\r\n                [mdePopoverTriggerFor]=\"taskPopover\"\r\n                [mdePopoverBackdropCloseOnClick]=\"false\"\r\n                mdePopoverOffsetX=\"-15\"\r\n                mdePopoverOffsetY=\"0\"\r\n                (opened)=\"popoverOpened(task)\">\r\n\r\n                <mde-popover #taskPopover=\"mdePopover\" \r\n                    [mdePopoverEnterDelay]=\"100\"\r\n                    [mdePopoverLeaveDelay]=\"0\"\r\n                    [mdePopoverPositionY]=\"'above'\"\r\n                    [mdePopoverOverlapTrigger]=\"false\"\r\n                    [mdePopoverDisableAnimation]=\"false\"\r\n                    [mdeFocusTrapEnabled]=\"false\"\r\n                    [mdePopoverArrowWidth]=\"12\"\r\n                    [mdePopoverArrowColor]=\"task.color?.primary\"\r\n                    mdePopoverPlacement=\"bottom\">\r\n\r\n                    <ng-container *ngTemplateOutlet=\"templatePopoverTask; context: {task: task}\"></ng-container>\r\n                </mde-popover>\r\n\r\n                <div class=\"gantt-activity-content\"></div>\r\n                <div class=\"gantt-activity-link-control gantt-activity-right\" style=\"height: 26px; line-height: 30px\">\r\n                    <div class=\"gantt-link-point\"></div>\r\n                </div>\r\n                <div class=\"gantt-activity-link-control gantt-activity-left\" style=\"height: 26px; line-height: 30px\">\r\n                    <div class=\"gantt-link-point\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #templatePopoverTask let-data=\"task\">\r\n        <mat-card *ngIf=\"data\" class=\"mat-elevation-z6\" \r\n            [ngStyle]=\"{ \r\n                borderBottomColor: data.color?.primary,\r\n                borderBottomWidth: '.25em',\r\n                borderBottomStyle: 'solid' \r\n            }\" style=\"width: 320px; max-width: 320px;\">\r\n\r\n            <mat-card-header>\r\n                <div mat-card-avatar [ngStyle]=\"{ borderColor: data.color?.primary }\" style=\"width: 0; height: calc(10vh - 30px); border-radius: 0; border-style: solid;\"></div>\r\n                <mat-card-title>\r\n                    <span style=\"font-size: 80%;\">{{data.name}}</span>\r\n                </mat-card-title>\r\n                <mat-card-subtitle>\r\n                    <span>{{data.start | date:'yyyy-MM-dd'}} - {{data.end | date:'yyyy-MM-dd'}}</span>\r\n                </mat-card-subtitle>\r\n                <mat-card-subtitle>\r\n                    <span style=\"padding-left: .75em; padding-right: 1em; font-stretch: condensed;\">&#x336;</span>\r\n                    <span>{{data.resource}}</span>\r\n                </mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <footer *ngIf=\"data.description\">\r\n                    <span [innerHTML]=\"data.description\"></span>\r\n                </footer>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </ng-template>\r\n    `,\r\n    styles: [`\r\n    .gantt-activity-line {\r\n        /*border-radius: 2px;*/\r\n        position: absolute;\r\n        box-sizing: border-box;\r\n        -webkit-user-select: none;\r\n    }\r\n    .gantt-activity-line:hover {\r\n        cursor: pointer;\r\n    }\r\n    .gantt-activity-content {\r\n        font-size: 12px;\r\n        color: #fff;\r\n        width: 100%;\r\n        top: 0;\r\n        position: absolute;\r\n        white-space: nowrap;\r\n        text-align: center;\r\n        line-height: inherit;\r\n        overflow: hidden;\r\n        height: 100%;\r\n    }\r\n    .gantt-activity-link-control {\r\n        position: absolute;\r\n        width: 13px;\r\n        top: 0;\r\n    }\r\n    .gantt-activity-right {\r\n        right: 0;\r\n    }\r\n    .gantt-activity-left {\r\n        left: 0;\r\n    }\r\n    .gantt-activity-right:hover {\r\n        /*cursor:w-resize;*/\r\n    }\r\n    .gantt-activity-left:hover {\r\n        /*cursor:w-resize;*/\r\n    }\r\n    `],\r\n    providers: [\r\n        GanttService\r\n    ]\r\n})\r\nexport class GanttActivityBarsComponent implements OnInit {\r\n    @Input() timeScale: any;\r\n    @Input() dimensions: any;\r\n    @Input() tasks: any;\r\n\r\n    @Output() onGridRowClick: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onPopoverOpen: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    containerHeight = 0;\r\n    containerWidth = 0;\r\n\r\n    constructor(public ganttService: GanttService) { }\r\n\r\n    ngOnInit() {\r\n        this.containerHeight = this.dimensions.height;\r\n        this.containerWidth = this.dimensions.width;\r\n    }\r\n\r\n    drawBar(task: any, index: number) {\r\n        let style = {};\r\n        style = this.ganttService.calculateBar(task, index, this.timeScale);\r\n\r\n        return style;\r\n    }\r\n\r\n    gridRowClicked(task: any) {\r\n        try {\r\n            this.onGridRowClick.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    popoverOpened(task: any) {\r\n        try {\r\n            this.onPopoverOpen.emit(task);\r\n        } catch (err) { }\r\n    }\r\n\r\n    private addMouseEventListeners(dragFn: any) {\r\n        function stopFn() {\r\n            document.documentElement.removeEventListener('mousemove', dragFn, false);\r\n            document.documentElement.removeEventListener('mouseup', stopFn, false);\r\n            document.documentElement.removeEventListener('mouseleave', stopFn, false);\r\n        }\r\n\r\n        document.documentElement.addEventListener('mousemove', dragFn, false);\r\n        document.documentElement.addEventListener('mouseup', stopFn, false);\r\n        document.documentElement.addEventListener('mouseleave', stopFn, false);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatCardModule } from '@angular/material';\r\nimport { MdePopoverModule } from '@material-extended/mde';\r\n\r\nimport { GanttActivityComponent } from './gantt-activity.component';\r\nimport { GanttTimeScaleComponent } from './time-scale/gantt-time-scale.component';\r\nimport { GanttActivityBackgroundComponent } from './background/activity-background.component';\r\nimport { GanttActivityBarsComponent } from './bars/activity-bars.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatCardModule,\r\n        MdePopoverModule\r\n    ],\r\n    exports: [\r\n        GanttActivityComponent,\r\n        GanttTimeScaleComponent,\r\n        GanttActivityBackgroundComponent,\r\n        GanttActivityBarsComponent\r\n    ],\r\n    declarations: [\r\n        GanttActivityComponent,\r\n        GanttTimeScaleComponent,\r\n        GanttActivityBackgroundComponent,\r\n        GanttActivityBarsComponent\r\n    ],\r\n    providers: [],\r\n})\r\nexport class GanttActivityModule { }\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { GanttComponent } from './gantt.component';\r\nimport { GanttHeaderComponent } from './header/gantt-header.component';\r\nimport { GanttFooterComponent } from './footer/gantt-footer.component';\r\nimport { GanttService } from './shared/services/gantt.service';\r\nimport { GanttActivityModule } from './activity/gantt-activity.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        GanttActivityModule,\r\n    ],\r\n    exports: [\r\n        GanttComponent\r\n    ],\r\n    declarations: [\r\n        GanttComponent,\r\n        GanttHeaderComponent,\r\n        GanttFooterComponent\r\n    ],\r\n    providers: [GanttService],\r\n    schemas: [\r\n        CUSTOM_ELEMENTS_SCHEMA\r\n    ]\r\n})\r\nexport class GanttModule { }\r\n"],"names":["Injectable","EventEmitter","Component","Input","Output","ChangeDetectionStrategy","ElementRef","ViewChild","NgModule","CommonModule","MatCardModule","MdePopoverModule","FormsModule","CUSTOM_ELEMENTS_SCHEMA"],"mappings":";;;;;;;;;;AAAA,IAEA;QAAA;YAEW,cAAS,GAAG,EAAE,CAAC;YACf,cAAS,GAAG,EAAE,CAAC;YACf,mBAAc,GAAG,GAAG,CAAC;YACrB,cAAS,GAAG,EAAE,CAAC;YACf,kBAAa,GAAG,EAAE,CAAC;YACnB,gBAAW,GAAG,KAAK,CAAC;SAC9B;;oBARAA,eAAU;;QAQX,kBAAC;KARD,IAQC;;;;;;ACVD;QAqBI;YAfO,cAAS,GAAG,CAAC,CAAC;YACd,kBAAa,GAAG,EAAE,CAAC;;YACnB,mBAAc,GAAG,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACzC,cAAS,GAAG,CAAC,CAAC;YACd,qBAAgB,GAAG,CAAC,CAAC;YACrB,mBAAc,GAAG,CAAC,CAAC;YACnB,cAAS,GAAG,CAAC,CAAC;YACd,kBAAa,GAAG,CAAC,CAAC;YAClB,WAAM,GAAG,CAAC,CAAC;YACX,gBAAW,GAAG,KAAK,CAAC;YACpB,cAAS,GAAG,CAAC,CAAC;;YACd,eAAU,GAAG,GAAG,CAAC;;gBAKd,WAAW,GAAG,IAAI,WAAW,EAAE;YAErC,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;YACvC,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;YACvC,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,cAAc,CAAC;YACjD,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;YACvC,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,aAAa,CAAC;YAC/C,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,SAAS,CAAC;YACpC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;SAC9C;;;;;;;QAEO,wCAAiB;;;;;;YAAzB,UAA0B,KAAW,EAAE,GAAS;gBAC5C,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC3B,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC3B;gBAED,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;oBACzB,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;iBACvB;;oBAEK,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,GAAG,CAAC;;oBACzC,KAAK,IAAY,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,CAAC,CAAC;gBAC5D,OAAO,KAAK,CAAC;aAChB;;;;;;;QAEO,uCAAgB;;;;;;YAAxB,UAAyB,KAAW,EAAE,KAAY;;oBAC1C,IAAI,GAAG,CAAC;gBAEZ,IAAI,KAAK,IAAI,IAAI,EAAE;oBACf,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;wBAC3B,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;qBACtB;oBAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACnC,KAAK,KAAK,CAAC,OAAO,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,KAAK,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG;4BAErF,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;4BACjK,MAAM;yBACT;qBACJ;iBACJ;gBACD,OAAO,IAAI,CAAC;aACf;;;;;;QAGM,2CAAoB;;;;YAA3B;gBACI,OAAU,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,OAAI,CAAC;aACzD;;;;;;QAEO,4CAAqB;;;;;YAA7B,UAA8B,KAAW;;oBACjC,MAAM,GAAG,CAAC;;oBACR,UAAU,GAAG,EAAE;;oBACf,aAAa,GAAG,EAAE;;oBAClB,aAAa,GAAG,IAAI;;oBACpB,UAAU,GACZ,KAAK,CAAC,QAAQ,EAAE,GAAG,KAAK,CAAC,UAAU,EAAE,GAAG,aAAa,GAAG,KAAK,CAAC,UAAU,EAAE,GAAG,aAAa;gBAE9F,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,UAAU,GAAG,UAAU,CAAC;gBAClD,OAAO,MAAM,CAAC;aACjB;;;;;;;;;QAGM,mCAAY;;;;;;;YAAnB,UAAoB,IAAS,EAAE,KAAa,EAAE,KAAU;;oBAC9C,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC7C,OAAO;oBACH,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,GAAG,IAAI;oBACrC,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,IAAI;oBACvD,QAAQ,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI;oBAC/B,aAAa,EAAE,IAAI,CAAC,aAAa,GAAG,IAAI;oBACxC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI;oBAC5D,kBAAkB,EAAE,QAAQ,CAAC,kBAAkB,CAAC;oBAChD,aAAa,EAAE,QAAQ,CAAC,aAAa,CAAC;iBACzC,CAAC;aACL;;;;;;;;QAGO,kCAAW;;;;;;YAAnB,UAAoB,KAAU;;oBACpB,KAAK,GAAG,EAAE;gBAChB,KAAK,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC;gBAC5C,KAAK,CAAC,aAAa,CAAC,GAAG,eAAa,KAAK,CAAC,OAAS,CAAC;gBAEpD,OAAO,KAAK,CAAC;aAChB;;;;;;;;QAGM,wCAAiB;;;;;;YAAxB,UAAyB,KAAW,EAAE,GAAS;gBAC3C,IAAI;;wBACM,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;;;wBAC5B,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,KAAK,MAAM,CAAC,CAAC;;wBACjE,IAAI,GAAG,QAAQ;oBACrB,OAAO,IAAI,CAAC;iBACf;gBAAC,OAAO,GAAG,EAAE;oBACV,OAAO,CAAC,CAAC;iBACZ;aACJ;;;;;;;;QAGM,qCAAc;;;;;;YAArB,UAAsB,KAAwB,EAAE,GAAkC;gBAA5D,sBAAA;oBAAA,YAAkB,IAAI,EAAE;;gBAAE,oBAAA;oBAAA,MAAY,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC;;;oBACxE,KAAK,GAAU,EAAE;gBACvB,IAAI;oBACA,OAAO,KAAK,CAAC,OAAO,EAAE,IAAI,GAAG,CAAC,OAAO,EAAE,EAAE;wBACrC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAClB,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;qBAClC;oBACD,OAAO,KAAK,CAAC;iBAEhB;gBAAC,OAAO,GAAG,EAAE;oBACV,OAAO,KAAK,CAAC;iBAChB;aACJ;;;;;;;QAGM,mCAAY;;;;;YAAnB,UAAoB,IAAU;;oBACpB,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE;gBACzB,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;oBACxB,OAAO,IAAI,CAAC;iBACf;gBACD,OAAO,KAAK,CAAC;aAChB;;;;;;;;QAGM,8BAAO;;;;;;YAAd,UAAe,IAAU,EAAE,IAAY;;oBAC7B,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;gBAC7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;gBACxC,OAAO,MAAM,CAAC;aACjB;;;;;;;;QAGM,iCAAU;;;;;;;YAAjB,UAAkB,IAAU,EAAE,IAAY;;oBAChC,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;gBAC7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;gBACxC,OAAO,MAAM,CAAC;aACjB;;;;;;;QAGM,yCAAkB;;;;;YAAzB,UAA0B,KAAa;;oBAC/B,KAAW;;oBACX,GAAS;;oBACP,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,UAAC,IAAS;oBAC9B,OAAO;wBACH,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;wBAC3B,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;qBAC1B,CAAC;iBACL,CAAC;gBAEF,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,UAAC,CAAC;oBAC9C,OAAO,CAAC,CAAC,KAAK,CAAC;iBAClB,CAAC,CAAC,CAAC,CAAC;gBAEL,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,UAAC,CAAC;oBAC5C,OAAO,CAAC,CAAC,GAAG,CAAC;iBAChB,CAAC,CAAC,CAAC,CAAC;gBAEL,OAAO;oBACH,KAAK,EAAE,KAAK;oBACZ,GAAG,EAAE,GAAG;iBACX,CAAC;aACL;;;;;;QAEM,uCAAgB;;;;;YAAvB,UAAwB,OAAY,EAAE,SAAc;gBAChD,OAAO,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;aAClF;;;;;;QAGM,8CAAuB;;;;;YAA9B;gBACI,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,UAAU,CAAC;;oBACpC,cAAc,GAAG,IAAI,CAAC,SAAS,GAAG,EAAE;gBAC1C,OAAO,cAAc,CAAC;aACzB;;;;QAEM,+CAAwB;;;YAA/B;;oBACU,eAAe,IAAI,WAAW,GAAG,EAAE,CAAC;gBAC1C,OAAO,eAAe,CAAC;aAC1B;;;;QAEM,2DAAoC;;;YAA3C;;oBACU,WAAW,GAAG,EAAE;gBACtB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,UAAU,CAAC;;oBACpC,KAAK,GAAG,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,GAAG,WAAW;;oBAExD,MAAM,GAAG,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU;gBAEnD,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;aACxD;;;;;;QAEM,kDAA2B;;;;;YAAlC,UAAmC,YAAyB,EAAE,aAA0B;gBACpF,OAAU,YAAY,CAAC,WAAW,GAAG,aAAa,CAAC,WAAW,OAAI,CAAC;aACtE;;;;;QAEM,mDAA4B;;;;YAAnC,UAAoC,aAA0B;gBAC1D,OAAU,aAAa,CAAC,YAAY,OAAI,CAAC;aAC5C;;;;;;;;;QAGM,gCAAS;;;;;;;YAAhB,UAAiB,kBAAuB,EAAE,aAAkB,EAAE,qBAA0B;;oBAC9E,iBAAiB,GAAG,kBAAkB,CAAC,SAAS;;oBAChD,MAAM,GAAG,IAAI,CAAC,YAAY;;gBAGhC,IAAI,iBAAiB,KAAK,IAAI,IAAI,iBAAiB,KAAK,SAAS,EAAE;oBAC/D,MAAM,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;oBACjD,MAAM,CAAC,qBAAqB,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;iBAC1D;aACJ;;;;;;;QAGM,gCAAS;;;;;YAAhB,UAAiB,KAAU;gBACvB,OAAO,KAAK,CAAC;aAChB;;;;;;;;QAGM,kCAAW;;;;;;YAAlB,UAAmB,KAAY,EAAE,KAAU;;;;;;;;;;;;;;;gBAmBvC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBAExB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;gBAE9D,OAAO,IAAI,CAAC;aACf;;;;;;;QAGM,kCAAW;;;;;YAAlB,UAAmB,EAAU;gBACzB,OAAO,MAAI,EAAI,CAAC;aACnB;;;;;;;;;;;;;;;;QAQM,mCAAY;;;;;;;;;;;YAAnB,UAAoB,SAAiB,EAAE,OAAY;gBAC/C,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;oBAC3C,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;iBACjC;aACJ;;oBA9QJA,eAAU;;;;QA+QX,mBAAC;KA/QD;;;;;;ACJA;QAyDI,wBAAmB,YAA0B;YAA1B,iBAAY,GAAZ,YAAY,CAAc;YALnC,mBAAc,GAAsB,IAAIC,iBAAY,EAAO,CAAC;YAC5D,kBAAa,GAAsB,IAAIA,iBAAY,EAAO,CAAC;SAInB;QAzBlD,sBACI,mCAAO;;;gBAOX,cAAgB,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE;;;;gBARvC,UACY,OAAY;gBACpB,IAAI,OAAO,EAAE;oBACT,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;iBAC3B;qBAAM;oBACH,IAAI,CAAC,iBAAiB,EAAE,CAAC;iBAC5B;aACJ;;;WAAA;QAGD,sBACI,mCAAO;;;gBAOX,cAAgB,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE;;;;gBARvC,UACY,OAAY;gBACpB,IAAI,OAAO,CAAC,KAAK,EAAE;oBACf,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;iBAC3B;qBAAM;oBACH,IAAI,CAAC,iBAAiB,EAAE,CAAC;iBAC5B;aACJ;;;WAAA;;;;QAUD,iCAAQ;;;YAAR;aACC;;;;QAED,iCAAQ;;;YAAR;gBACI,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,uBAAuB,EAAE,CAAC;aAC1E;;;;QAED,0CAAiB;;;YAAjB;;oBACU,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;gBACvE,IAAI,CAAC,QAAQ,GAAG;oBACZ,KAAK,OAAA;iBACR,CAAC;aACL;;;;QAED,0CAAiB;;;YAAjB;gBACI,IAAI,CAAC,QAAQ,GAAG;oBACZ,IAAI,EAAE,EAAE;oBACR,SAAS,EAAE,IAAI;oBACf,KAAK,EAAE,EAAE;iBACZ,CAAC;aACL;;;;;QAED,uCAAc;;;;YAAd,UAAe,IAAS;gBACpB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClC;;;;;QAED,sCAAa;;;;YAAb,UAAc,IAAS;gBACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjC;;;;;QAED,iCAAQ;;;;YAAR,UAAS,MAAW;gBAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;;oBAtFJC,cAAS,SAAC;wBACP,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,qiBAQT;wBAWD,SAAS,EAAE,EAAE;iCAVJ,uPASR;qBAEJ;;;;;wBAzBQ,YAAY;;;;8BA8BhBC,UAAK;8BAULA,UAAK;qCAULC,WAAM;oCACNA,WAAM;;QAuCX,qBAAC;KAvFD;;;;;;ACLA;QAEA;SAiCC;;oBAjCAF,cAAS,SAAC;wBACP,QAAQ,EAAE,cAAc;wBACxB,QAAQ,EAAE,+PAOT;iCACQ,sfAkBR;qBACJ;;;2BAEIC,UAAK;gCACLA,UAAK;;QACV,2BAAC;KAjCD;;;;;;ACFA;QAkBI;SAAiB;;oBAhBpBD,cAAS,SAAC;wBACP,QAAQ,EAAE,cAAc;wBACxB,QAAQ,EAAE,oCAAkC;iCACnC,qOASR;qBACJ;;;;;8BAEIC,UAAK;;QAEV,2BAAC;KAjBD;;;;;;ACFA;QAgMI,gCACW,IAAgB,EAChB,YAA0B;YAD1B,SAAI,GAAJ,IAAI,CAAY;YAChB,iBAAY,GAAZ,YAAY,CAAc;YAhC3B,mBAAc,GAAsB,IAAIF,iBAAY,EAAO,CAAC;YAC5D,kBAAa,GAAsB,IAAIA,iBAAY,EAAO,CAAC;YAc7D,UAAK,GAAQ;gBACjB,KAAK,EAAE,IAAI;gBACX,GAAG,EAAE,IAAI;aACZ,CAAC;YAEF,eAAU,GAAG;gBACT,MAAM,EAAE,CAAC;gBACT,KAAK,EAAE,CAAC;aACX,CAAC;YAEK,gBAAW,GAAU;gBACxB,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;gBAChC,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE;aACtD,CAAC;SAKD;;;;QAED,yCAAQ;;;YAAR;;gBAEI,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;gBAClD,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAElH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;gBACtC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;gBAClC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBACrD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;gBACvD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC,oCAAoC,EAAE,CAAC;;gBAGvF,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;;;;;;QAGD,0CAAS;;;;YAAT;;gBAEI,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACzE;;;;;;;;;QAGD,iDAAgB;;;;;;;YAAhB,UAAiB,cAAmB,EAAE,SAAc,EAAE,iBAAsB;gBACxE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,cAAc,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC;aAC7E;;;;;QAED,6CAAY;;;;YAAZ,UAAa,IAAI;gBACb,IAAI;oBACA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAClC;gBAAC,OAAO,GAAG,EAAE,GAAG;aACpB;;;;;QAED,4CAAW;;;;YAAX,UAAY,IAAI;gBACZ,IAAI;oBACA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACjC;gBAAC,OAAO,GAAG,EAAE,GAAG;aACpB;;;;;;;QAGD,yCAAQ;;;;;YAAR,UAAS,KAAU;;oBACT,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC,oCAAoC,EAAE;gBACvF,IAAI,CAAC,mBAAmB,GAAG,sBAAsB,CAAC,MAAM,GAAG,IAAI,CAAC;gBAChE,IAAI,CAAC,kBAAkB,GAAG,sBAAsB,CAAC,KAAK,CAAC;aAC1D;;;;QAED,yCAAQ;;;YAAR;gBACI,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC9B,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;aAC7B;;;;QAED,8CAAa;;;YAAb;gBACI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC;gBAC9C,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;aAC/C;;;;QAED,gDAAe;;;YAAf;gBACI,OAAO;oBACH,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI;oBAC5C,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI;iBACpD,CAAC;aACL;;;;QAED,kDAAiB;;;YAAjB;;oBACU,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,EAAE;gBAC/C,OAAO;oBACH,QAAQ,EAAE,MAAM,GAAG,IAAI;oBACvB,aAAa,EAAE,MAAM,GAAG,IAAI;iBAC/B,CAAC;aACL;;;;;QAEO,yDAAwB;;;;YAAhC;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;aAC5E;;;;;QAEO,wDAAuB;;;;YAA/B;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;aAC1G;;;;;QAEO,yCAAQ;;;;YAAhB;gBACI,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,GAAG,IAAI,CAAC;gBACrE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC;aAC/D;;oBApRJC,cAAS,SAAC;wBACP,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,uvEAmDT;wBAmGD,eAAe,EAAEG,4BAAuB,CAAC,OAAO;iCAlGvC,y5FAiGR;qBAEJ;;;;;wBA7JwDC,eAAU;wBAE1D,YAAY;;;;8BA6JhBH,UAAK;8BACLA,UAAK;qCAELC,WAAM;oCACNA,WAAM;;QAsHX,6BAAC;KArRD;;;;;;ACJA;QAiDI,iCAAmB,YAA0B;YAA1B,iBAAY,GAAZ,YAAY,CAAc;SAAK;;;;QAElD,0CAAQ;;;YAAR;aACC;;;;QAED,mDAAiB;;;YAAjB;gBACI,OAAO;oBACH,OAAO,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,EAAE,IAAI,IAAI;iBAC/C,CAAC;aACL;;;;;QAED,uDAAqB;;;;YAArB,UAAsB,SAAiB;gBACnC,OAAO;oBACH,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI;oBAC5C,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI;oBACjD,UAAU,EAAE,UAAU;oBACtB,YAAY,EAAE,SAAS;iBAC1B,CAAC;aACL;;;;QAED,uDAAqB;;;YAArB;gBACI,OAAO;oBACH,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI;iBAC9C,CAAC;aACL;;;;;QAED,8CAAY;;;;YAAZ,UAAa,IAAU;gBACnB,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aAC/C;;oBA1EJF,cAAS,SAAC;wBACP,QAAQ,EAAE,YAAY;wBACtB,QAAQ,EAAE,iuBAUC;wBA0BX,SAAS,EAAE;4BACP,YAAY;yBACf;iCA3BQ,mqBAuBH;qBAKT;;;;;wBA3CQ,YAAY;;;;gCA6ChBC,UAAK;iCACLA,UAAK;;QA+BV,8BAAC;KA3ED;;;;;;ACHA;QA6CI,0CAAmB,YAA0B;YAA1B,iBAAY,GAAZ,YAAY,CAAc;YAH7C,SAAI,GAAU,EAAE,CAAC;YACjB,UAAK,GAAU,EAAE,CAAC;SAEgC;;;;QAElD,mDAAQ;;;YAAR;gBACI,IAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;;;;;QAED,uDAAY;;;;YAAZ,UAAa,IAAU;gBACnB,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aAC/C;;;;QAED,sDAAW;;;YAAX;gBACI,OAAO;oBACH,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI;iBAC/C,CAAC;aACL;;;;QAED,uDAAY;;;YAAZ;gBACI,OAAO;oBACH,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI;iBAC9C,CAAC;aACL;;;;;QAEO,mDAAQ;;;;YAAhB;gBACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;aAC/B;;oBAlEJD,cAAS,SAAC;wBACP,QAAQ,EAAE,qBAAqB;wBAC/B,QAAQ,EAAE,uaAWT;iCACQ,qdAiBR;qBACJ;;;;;wBAlCQ,YAAY;;;;4BAoChBC,UAAK;gCACLA,UAAK;yBAELI,cAAS,SAAC,IAAI;;QA8BnB,uCAAC;KAnED;;;;;;ACHA;QAiII,oCAAmB,YAA0B;YAA1B,iBAAY,GAAZ,YAAY,CAAc;YANnC,mBAAc,GAAsB,IAAIN,iBAAY,EAAO,CAAC;YAC5D,kBAAa,GAAsB,IAAIA,iBAAY,EAAO,CAAC;YAErE,oBAAe,GAAG,CAAC,CAAC;YACpB,mBAAc,GAAG,CAAC,CAAC;SAE+B;;;;QAElD,6CAAQ;;;YAAR;gBACI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;gBAC9C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;aAC/C;;;;;;QAED,4CAAO;;;;;YAAP,UAAQ,IAAS,EAAE,KAAa;;oBACxB,KAAK,GAAG,EAAE;gBACd,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;gBAEpE,OAAO,KAAK,CAAC;aAChB;;;;;QAED,mDAAc;;;;YAAd,UAAe,IAAS;gBACpB,IAAI;oBACA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAClC;gBAAC,OAAO,GAAG,EAAE,GAAG;aACpB;;;;;QAED,kDAAa;;;;YAAb,UAAc,IAAS;gBACnB,IAAI;oBACA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACjC;gBAAC,OAAO,GAAG,EAAE,GAAG;aACpB;;;;;;QAEO,2DAAsB;;;;;YAA9B,UAA+B,MAAW;;;;gBACtC,SAAS,MAAM;oBACX,QAAQ,CAAC,eAAe,CAAC,mBAAmB,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;oBACzE,QAAQ,CAAC,eAAe,CAAC,mBAAmB,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;oBACvE,QAAQ,CAAC,eAAe,CAAC,mBAAmB,CAAC,YAAY,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;iBAC7E;gBAED,QAAQ,CAAC,eAAe,CAAC,gBAAgB,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;gBACtE,QAAQ,CAAC,eAAe,CAAC,gBAAgB,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;gBACpE,QAAQ,CAAC,eAAe,CAAC,gBAAgB,CAAC,YAAY,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;aAC1E;;oBAlKJC,cAAS,SAAC;wBACP,QAAQ,EAAE,eAAe;wBACzB,QAAQ,EAAE,wuGAoET;wBAyCD,SAAS,EAAE;4BACP,YAAY;yBACf;iCA1CQ,i4BAuCR;qBAIJ;;;;;wBApHQ,YAAY;;;;gCAsHhBC,UAAK;iCACLA,UAAK;4BACLA,UAAK;qCAELC,WAAM;oCACNA,WAAM;;QA0CX,iCAAC;KAnKD;;;;;;ACHA;QAWA;SAoBoC;;oBApBnCI,aAAQ,SAAC;wBACN,OAAO,EAAE;4BACLC,mBAAY;4BACZC,sBAAa;4BACbC,oBAAgB;yBACnB;wBACD,OAAO,EAAE;4BACL,sBAAsB;4BACtB,uBAAuB;4BACvB,gCAAgC;4BAChC,0BAA0B;yBAC7B;wBACD,YAAY,EAAE;4BACV,sBAAsB;4BACtB,uBAAuB;4BACvB,gCAAgC;4BAChC,0BAA0B;yBAC7B;wBACD,SAAS,EAAE,EAAE;qBAChB;;QACkC,0BAAC;KApBpC;;;;;;ACXA;QAUA;SAmB4B;;oBAnB3BH,aAAQ,SAAC;wBACN,OAAO,EAAE;4BACLC,mBAAY;4BACZG,iBAAW;4BACX,mBAAmB;yBACtB;wBACD,OAAO,EAAE;4BACL,cAAc;yBACjB;wBACD,YAAY,EAAE;4BACV,cAAc;4BACd,oBAAoB;4BACpB,oBAAoB;yBACvB;wBACD,SAAS,EAAE,CAAC,YAAY,CAAC;wBACzB,OAAO,EAAE;4BACLC,2BAAsB;yBACzB;qBACJ;;QAC0B,kBAAC;KAnB5B;;;;;;;;;;;;;;;;;;;;;;;;;;"}
